(translation_unit [0, 0] - [1574, 0]
  (preproc_def [0, 0] - [1, 0]
    name: (identifier [0, 8] - [0, 31]))
  (preproc_include [1, 0] - [2, 0]
    path: (string_literal [1, 9] - [1, 21]))
  (preproc_include [2, 0] - [3, 0]
    path: (system_lib_string [2, 9] - [2, 17]))
  (preproc_def [4, 0] - [6, 0]
    name: (identifier [4, 8] - [4, 23]))
  (preproc_ifdef [6, 0] - [11, 6]
    name: (identifier [6, 7] - [6, 22])
    (preproc_include [7, 0] - [8, 0]
      path: (system_lib_string [7, 9] - [7, 25]))
    (using_declaration [8, 0] - [8, 22]
      (identifier [8, 16] - [8, 21]))
    alternative: (preproc_else [9, 0] - [11, 0]
      (preproc_include [10, 0] - [11, 0]
        path: (system_lib_string [10, 9] - [10, 19]))))
  (declaration [13, 0] - [13, 36]
    type: (primitive_type [13, 0] - [13, 7])
    declarator: (init_declarator [13, 7] - [13, 35]
      declarator: (pointer_declarator [13, 7] - [13, 25]
        declarator: (identifier [13, 9] - [13, 25]))
      value: (nullptr [13, 28] - [13, 35])))
  (declaration [15, 0] - [15, 21]
    type: (primitive_type [15, 0] - [15, 3])
    declarator: (init_declarator [15, 4] - [15, 20]
      declarator: (identifier [15, 4] - [15, 16])
      value: (number_literal [15, 19] - [15, 20])))
  (declaration [16, 0] - [16, 25]
    type: (type_identifier [16, 0] - [16, 7])
    declarator: (init_declarator [16, 8] - [16, 24]
      declarator: (identifier [16, 8] - [16, 20])
      value: (number_literal [16, 23] - [16, 24])))
  (declaration [17, 0] - [17, 32]
    (type_qualifier [17, 0] - [17, 5])
    type: (primitive_type [17, 6] - [17, 9])
    declarator: (init_declarator [17, 10] - [17, 31]
      declarator: (identifier [17, 10] - [17, 25])
      value: (number_literal [17, 28] - [17, 31])))
  (declaration [18, 0] - [18, 43]
    type: (qualified_identifier [18, 0] - [18, 11]
      scope: (namespace_identifier [18, 0] - [18, 3])
      name: (type_identifier [18, 5] - [18, 11]))
    declarator: (array_declarator [18, 12] - [18, 42]
      declarator: (identifier [18, 12] - [18, 25])
      size: (identifier [18, 26] - [18, 41])))
  (comment [20, 0] - [20, 32])
  (comment [22, 0] - [22, 27])
  (comment [24, 0] - [24, 37])
  (using_declaration [26, 0] - [26, 20]
    (identifier [26, 16] - [26, 19]))
  (type_definition [28, 0] - [33, 17]
    type: (struct_specifier [28, 8] - [33, 1]
      body: (field_declaration_list [28, 15] - [33, 1]
        (field_declaration [29, 1] - [29, 19]
          type: (type_identifier [29, 1] - [29, 6])
          declarator: (pointer_declarator [29, 6] - [29, 18]
            declarator: (field_identifier [29, 8] - [29, 18])))
        (field_declaration [30, 1] - [30, 16]
          type: (sized_type_specifier [30, 1] - [30, 5])
          declarator: (field_identifier [30, 6] - [30, 15]))
        (field_declaration [31, 1] - [31, 13]
          type: (primitive_type [31, 1] - [31, 4])
          declarator: (field_identifier [31, 5] - [31, 12]))
        (field_declaration [32, 1] - [32, 15]
          type: (primitive_type [32, 1] - [32, 8])
          declarator: (field_identifier [32, 9] - [32, 14]))))
    declarator: (type_identifier [33, 2] - [33, 16]))
  (declaration [34, 0] - [34, 46]
    type: (qualified_identifier [34, 0] - [34, 27]
      scope: (namespace_identifier [34, 0] - [34, 3])
      name: (template_type [34, 5] - [34, 27]
        name: (type_identifier [34, 5] - [34, 11])
        arguments: (template_argument_list [34, 11] - [34, 27]
          (type_descriptor [34, 12] - [34, 26]
            type: (type_identifier [34, 12] - [34, 26])))))
    declarator: (identifier [34, 28] - [34, 45]))
  (enum_specifier [36, 0] - [48, 2]
    name: (type_identifier [36, 5] - [36, 14])
    body: (enumerator_list [36, 15] - [48, 2]
      (enumerator [37, 1] - [37, 13]
        name: (identifier [37, 1] - [37, 13]))
      (enumerator [38, 1] - [38, 14]
        name: (identifier [38, 1] - [38, 14]))
      (enumerator [39, 1] - [39, 21]
        name: (identifier [39, 1] - [39, 21]))
      (enumerator [40, 1] - [40, 17]
        name: (identifier [40, 1] - [40, 17]))
      (enumerator [41, 1] - [41, 10]
        name: (identifier [41, 1] - [41, 10]))
      (enumerator [42, 1] - [42, 17]
        name: (identifier [42, 1] - [42, 17]))
      (enumerator [43, 1] - [43, 17]
        name: (identifier [43, 1] - [43, 17]))
      (enumerator [44, 1] - [44, 12]
        name: (identifier [44, 1] - [44, 12]))
      (comment [45, 1] - [45, 31])
      (enumerator [46, 1] - [46, 19]
        name: (identifier [46, 1] - [46, 19]))
      (enumerator [47, 1] - [47, 13]
        name: (identifier [47, 1] - [47, 13]))))
  (declaration [50, 0] - [50, 41]
    type: (type_identifier [50, 0] - [50, 9])
    declarator: (init_declarator [50, 10] - [50, 40]
      declarator: (identifier [50, 10] - [50, 25])
      value: (identifier [50, 28] - [50, 40])))
  (declaration [52, 0] - [52, 32]
    (type_qualifier [52, 0] - [52, 5])
    type: (primitive_type [52, 6] - [52, 13])
    declarator: (init_declarator [52, 14] - [52, 31]
      declarator: (identifier [52, 14] - [52, 26])
      value: (number_literal [52, 29] - [52, 31])))
  (declaration [53, 0] - [53, 48]
    (type_qualifier [53, 0] - [53, 5])
    type: (primitive_type [53, 6] - [53, 13])
    declarator: (init_declarator [53, 14] - [53, 47]
      declarator: (identifier [53, 14] - [53, 43])
      value: (number_literal [53, 46] - [53, 47])))
  (declaration [54, 0] - [54, 48]
    (type_qualifier [54, 0] - [54, 5])
    type: (primitive_type [54, 6] - [54, 13])
    declarator: (init_declarator [54, 14] - [54, 47]
      declarator: (identifier [54, 14] - [54, 43])
      value: (number_literal [54, 46] - [54, 47])))
  (comment [55, 0] - [55, 50])
  (comment [56, 0] - [56, 50])
  (declaration [57, 0] - [57, 42]
    (type_qualifier [57, 0] - [57, 5])
    type: (primitive_type [57, 6] - [57, 13])
    declarator: (init_declarator [57, 14] - [57, 41]
      declarator: (identifier [57, 14] - [57, 37])
      value: (number_literal [57, 40] - [57, 41])))
  (declaration [58, 0] - [58, 45]
    (type_qualifier [58, 0] - [58, 5])
    type: (primitive_type [58, 6] - [58, 13])
    declarator: (init_declarator [58, 14] - [58, 44]
      declarator: (identifier [58, 14] - [58, 40])
      value: (number_literal [58, 43] - [58, 44])))
  (declaration [59, 0] - [59, 49]
    (type_qualifier [59, 0] - [59, 5])
    type: (primitive_type [59, 6] - [59, 13])
    declarator: (init_declarator [59, 14] - [59, 48]
      declarator: (identifier [59, 14] - [59, 44])
      value: (number_literal [59, 47] - [59, 48])))
  (declaration [60, 0] - [60, 45]
    (type_qualifier [60, 0] - [60, 5])
    type: (primitive_type [60, 6] - [60, 13])
    declarator: (init_declarator [60, 14] - [60, 44]
      declarator: (identifier [60, 14] - [60, 40])
      value: (number_literal [60, 43] - [60, 44])))
  (declaration [61, 0] - [61, 43]
    (type_qualifier [61, 0] - [61, 5])
    type: (primitive_type [61, 6] - [61, 13])
    declarator: (init_declarator [61, 14] - [61, 42]
      declarator: (identifier [61, 14] - [61, 38])
      value: (number_literal [61, 41] - [61, 42])))
  (declaration [62, 0] - [62, 42]
    (type_qualifier [62, 0] - [62, 5])
    type: (primitive_type [62, 6] - [62, 13])
    declarator: (init_declarator [62, 14] - [62, 41]
      declarator: (identifier [62, 14] - [62, 37])
      value: (number_literal [62, 40] - [62, 41])))
  (declaration [63, 0] - [63, 45]
    (type_qualifier [63, 0] - [63, 5])
    type: (primitive_type [63, 6] - [63, 13])
    declarator: (init_declarator [63, 14] - [63, 44]
      declarator: (identifier [63, 14] - [63, 39])
      value: (number_literal [63, 42] - [63, 44])))
  (declaration [64, 0] - [64, 43]
    (type_qualifier [64, 0] - [64, 5])
    type: (primitive_type [64, 6] - [64, 13])
    declarator: (init_declarator [64, 14] - [64, 42]
      declarator: (identifier [64, 14] - [64, 37])
      value: (number_literal [64, 40] - [64, 42])))
  (declaration [65, 0] - [65, 45]
    (type_qualifier [65, 0] - [65, 5])
    type: (primitive_type [65, 6] - [65, 13])
    declarator: (init_declarator [65, 14] - [65, 44]
      declarator: (identifier [65, 14] - [65, 39])
      value: (number_literal [65, 42] - [65, 44])))
  (declaration [66, 0] - [66, 38]
    (type_qualifier [66, 0] - [66, 5])
    type: (primitive_type [66, 6] - [66, 13])
    declarator: (init_declarator [66, 14] - [66, 37]
      declarator: (identifier [66, 14] - [66, 32])
      value: (number_literal [66, 35] - [66, 37])))
  (declaration [67, 0] - [67, 38]
    (type_qualifier [67, 0] - [67, 5])
    type: (primitive_type [67, 6] - [67, 13])
    declarator: (init_declarator [67, 14] - [67, 37]
      declarator: (identifier [67, 14] - [67, 32])
      value: (number_literal [67, 35] - [67, 37])))
  (declaration [68, 0] - [68, 36]
    (type_qualifier [68, 0] - [68, 5])
    type: (primitive_type [68, 6] - [68, 13])
    declarator: (init_declarator [68, 14] - [68, 35]
      declarator: (identifier [68, 14] - [68, 30])
      value: (number_literal [68, 33] - [68, 35])))
  (declaration [69, 0] - [69, 39]
    (type_qualifier [69, 0] - [69, 5])
    type: (primitive_type [69, 6] - [69, 13])
    declarator: (init_declarator [69, 14] - [69, 38]
      declarator: (identifier [69, 14] - [69, 33])
      value: (number_literal [69, 36] - [69, 38])))
  (declaration [70, 0] - [70, 36]
    (type_qualifier [70, 0] - [70, 5])
    type: (primitive_type [70, 6] - [70, 13])
    declarator: (init_declarator [70, 14] - [70, 35]
      declarator: (identifier [70, 14] - [70, 30])
      value: (number_literal [70, 33] - [70, 35])))
  (declaration [71, 0] - [71, 38]
    (type_qualifier [71, 0] - [71, 5])
    type: (primitive_type [71, 6] - [71, 13])
    declarator: (init_declarator [71, 14] - [71, 37]
      declarator: (identifier [71, 14] - [71, 32])
      value: (number_literal [71, 35] - [71, 37])))
  (declaration [72, 0] - [72, 39]
    (type_qualifier [72, 0] - [72, 5])
    type: (primitive_type [72, 6] - [72, 13])
    declarator: (init_declarator [72, 14] - [72, 38]
      declarator: (identifier [72, 14] - [72, 33])
      value: (number_literal [72, 36] - [72, 38])))
  (function_definition [74, 0] - [119, 1]
    type: (primitive_type [74, 0] - [74, 4])
    declarator: (pointer_declarator [74, 4] - [74, 39]
      declarator: (function_declarator [74, 6] - [74, 39]
        declarator: (identifier [74, 6] - [74, 24])
        parameters: (parameter_list [74, 24] - [74, 39]
          (parameter_declaration [74, 25] - [74, 38]
            type: (primitive_type [74, 25] - [74, 32])
            declarator: (identifier [74, 33] - [74, 38])))))
    body: (compound_statement [75, 0] - [119, 1]
      (switch_statement [76, 1] - [117, 2]
        condition: (condition_clause [76, 8] - [76, 15]
          value: (identifier [76, 9] - [76, 14]))
        body: (compound_statement [76, 16] - [117, 2]
          (case_statement [77, 1] - [78, 48]
            value: (identifier [77, 6] - [77, 35])
            (return_statement [78, 2] - [78, 48]
              (cast_expression [78, 9] - [78, 47]
                type: (type_descriptor [78, 10] - [78, 15]
                  type: (primitive_type [78, 10] - [78, 14])
                  declarator: (abstract_pointer_declarator [78, 14] - [78, 15]))
                value: (string_literal [78, 16] - [78, 47]))))
          (case_statement [79, 1] - [80, 48]
            value: (identifier [79, 6] - [79, 35])
            (return_statement [80, 2] - [80, 48]
              (cast_expression [80, 9] - [80, 47]
                type: (type_descriptor [80, 10] - [80, 15]
                  type: (primitive_type [80, 10] - [80, 14])
                  declarator: (abstract_pointer_declarator [80, 14] - [80, 15]))
                value: (string_literal [80, 16] - [80, 47]))))
          (comment [81, 0] - [81, 38])
          (comment [82, 0] - [82, 50])
          (comment [83, 0] - [83, 38])
          (comment [84, 0] - [84, 50])
          (case_statement [85, 1] - [86, 42]
            value: (identifier [85, 6] - [85, 29])
            (return_statement [86, 2] - [86, 42]
              (cast_expression [86, 9] - [86, 41]
                type: (type_descriptor [86, 10] - [86, 15]
                  type: (primitive_type [86, 10] - [86, 14])
                  declarator: (abstract_pointer_declarator [86, 14] - [86, 15]))
                value: (string_literal [86, 16] - [86, 41]))))
          (case_statement [87, 1] - [88, 45]
            value: (identifier [87, 6] - [87, 32])
            (return_statement [88, 2] - [88, 45]
              (cast_expression [88, 9] - [88, 44]
                type: (type_descriptor [88, 10] - [88, 15]
                  type: (primitive_type [88, 10] - [88, 14])
                  declarator: (abstract_pointer_declarator [88, 14] - [88, 15]))
                value: (string_literal [88, 16] - [88, 44]))))
          (case_statement [89, 1] - [90, 49]
            value: (identifier [89, 6] - [89, 36])
            (return_statement [90, 2] - [90, 49]
              (cast_expression [90, 9] - [90, 48]
                type: (type_descriptor [90, 10] - [90, 15]
                  type: (primitive_type [90, 10] - [90, 14])
                  declarator: (abstract_pointer_declarator [90, 14] - [90, 15]))
                value: (string_literal [90, 16] - [90, 48]))))
          (case_statement [91, 1] - [92, 45]
            value: (identifier [91, 6] - [91, 32])
            (return_statement [92, 2] - [92, 45]
              (cast_expression [92, 9] - [92, 44]
                type: (type_descriptor [92, 10] - [92, 15]
                  type: (primitive_type [92, 10] - [92, 14])
                  declarator: (abstract_pointer_declarator [92, 14] - [92, 15]))
                value: (string_literal [92, 16] - [92, 44]))))
          (case_statement [93, 1] - [94, 43]
            value: (identifier [93, 6] - [93, 30])
            (return_statement [94, 2] - [94, 43]
              (cast_expression [94, 9] - [94, 42]
                type: (type_descriptor [94, 10] - [94, 15]
                  type: (primitive_type [94, 10] - [94, 14])
                  declarator: (abstract_pointer_declarator [94, 14] - [94, 15]))
                value: (string_literal [94, 16] - [94, 42]))))
          (case_statement [95, 1] - [96, 42]
            value: (identifier [95, 6] - [95, 29])
            (return_statement [96, 2] - [96, 42]
              (cast_expression [96, 9] - [96, 41]
                type: (type_descriptor [96, 10] - [96, 15]
                  type: (primitive_type [96, 10] - [96, 14])
                  declarator: (abstract_pointer_declarator [96, 14] - [96, 15]))
                value: (string_literal [96, 16] - [96, 41]))))
          (case_statement [97, 1] - [98, 44]
            value: (identifier [97, 6] - [97, 31])
            (return_statement [98, 2] - [98, 44]
              (cast_expression [98, 9] - [98, 43]
                type: (type_descriptor [98, 10] - [98, 15]
                  type: (primitive_type [98, 10] - [98, 14])
                  declarator: (abstract_pointer_declarator [98, 14] - [98, 15]))
                value: (string_literal [98, 16] - [98, 43]))))
          (case_statement [99, 1] - [100, 42]
            value: (identifier [99, 6] - [99, 29])
            (return_statement [100, 2] - [100, 42]
              (cast_expression [100, 9] - [100, 41]
                type: (type_descriptor [100, 10] - [100, 15]
                  type: (primitive_type [100, 10] - [100, 14])
                  declarator: (abstract_pointer_declarator [100, 14] - [100, 15]))
                value: (string_literal [100, 16] - [100, 41]))))
          (case_statement [101, 1] - [102, 44]
            value: (identifier [101, 6] - [101, 31])
            (return_statement [102, 2] - [102, 44]
              (cast_expression [102, 9] - [102, 43]
                type: (type_descriptor [102, 10] - [102, 15]
                  type: (primitive_type [102, 10] - [102, 14])
                  declarator: (abstract_pointer_declarator [102, 14] - [102, 15]))
                value: (string_literal [102, 16] - [102, 43]))))
          (case_statement [103, 1] - [104, 37]
            value: (identifier [103, 6] - [103, 24])
            (return_statement [104, 2] - [104, 37]
              (cast_expression [104, 9] - [104, 36]
                type: (type_descriptor [104, 10] - [104, 15]
                  type: (primitive_type [104, 10] - [104, 14])
                  declarator: (abstract_pointer_declarator [104, 14] - [104, 15]))
                value: (string_literal [104, 16] - [104, 36]))))
          (case_statement [105, 1] - [106, 37]
            value: (identifier [105, 6] - [105, 24])
            (return_statement [106, 2] - [106, 37]
              (cast_expression [106, 9] - [106, 36]
                type: (type_descriptor [106, 10] - [106, 15]
                  type: (primitive_type [106, 10] - [106, 14])
                  declarator: (abstract_pointer_declarator [106, 14] - [106, 15]))
                value: (string_literal [106, 16] - [106, 36]))))
          (case_statement [107, 1] - [108, 35]
            value: (identifier [107, 6] - [107, 22])
            (return_statement [108, 2] - [108, 35]
              (cast_expression [108, 9] - [108, 34]
                type: (type_descriptor [108, 10] - [108, 15]
                  type: (primitive_type [108, 10] - [108, 14])
                  declarator: (abstract_pointer_declarator [108, 14] - [108, 15]))
                value: (string_literal [108, 16] - [108, 34]))))
          (case_statement [109, 1] - [110, 38]
            value: (identifier [109, 6] - [109, 25])
            (return_statement [110, 2] - [110, 38]
              (cast_expression [110, 9] - [110, 37]
                type: (type_descriptor [110, 10] - [110, 15]
                  type: (primitive_type [110, 10] - [110, 14])
                  declarator: (abstract_pointer_declarator [110, 14] - [110, 15]))
                value: (string_literal [110, 16] - [110, 37]))))
          (case_statement [111, 1] - [112, 35]
            value: (identifier [111, 6] - [111, 22])
            (return_statement [112, 2] - [112, 35]
              (cast_expression [112, 9] - [112, 34]
                type: (type_descriptor [112, 10] - [112, 15]
                  type: (primitive_type [112, 10] - [112, 14])
                  declarator: (abstract_pointer_declarator [112, 14] - [112, 15]))
                value: (string_literal [112, 16] - [112, 34]))))
          (case_statement [113, 1] - [114, 37]
            value: (identifier [113, 6] - [113, 24])
            (return_statement [114, 2] - [114, 37]
              (cast_expression [114, 9] - [114, 36]
                type: (type_descriptor [114, 10] - [114, 15]
                  type: (primitive_type [114, 10] - [114, 14])
                  declarator: (abstract_pointer_declarator [114, 14] - [114, 15]))
                value: (string_literal [114, 16] - [114, 36]))))
          (case_statement [115, 1] - [116, 38]
            value: (identifier [115, 6] - [115, 25])
            (return_statement [116, 2] - [116, 38]
              (cast_expression [116, 9] - [116, 37]
                type: (type_descriptor [116, 10] - [116, 15]
                  type: (primitive_type [116, 10] - [116, 14])
                  declarator: (abstract_pointer_declarator [116, 14] - [116, 15]))
                value: (string_literal [116, 16] - [116, 37]))))))
      (return_statement [118, 1] - [118, 18]
        (cast_expression [118, 8] - [118, 17]
          type: (type_descriptor [118, 9] - [118, 14]
            type: (primitive_type [118, 9] - [118, 13])
            declarator: (abstract_pointer_declarator [118, 13] - [118, 14]))
          value: (string_literal [118, 15] - [118, 17])))))
  (preproc_call [121, 0] - [122, 0]
    directive: (preproc_directive [121, 0] - [121, 7])
    argument: (preproc_arg [121, 7] - [121, 17]))
  (type_definition [122, 0] - [129, 2]
    type: (struct_specifier [122, 8] - [129, 1]
      name: (type_identifier [122, 15] - [122, 27])
      body: (field_declaration_list [122, 27] - [129, 1]
        (field_declaration [123, 1] - [123, 15]
          type: (primitive_type [123, 1] - [123, 9])
          declarator: (field_identifier [123, 10] - [123, 14]))
        (field_declaration [124, 1] - [124, 17]
          type: (primitive_type [124, 1] - [124, 8])
          declarator: (field_identifier [124, 9] - [124, 16]))
        (field_declaration [125, 1] - [125, 15]
          type: (primitive_type [125, 1] - [125, 8])
          declarator: (field_identifier [125, 9] - [125, 14]))
        (field_declaration [126, 1] - [126, 14]
          type: (primitive_type [126, 1] - [126, 8])
          declarator: (field_identifier [126, 9] - [126, 13]))
        (field_declaration [127, 1] - [127, 22]
          type: (type_identifier [127, 1] - [127, 13])
          declarator: (field_identifier [127, 14] - [127, 21]))
        (field_declaration [128, 1] - [128, 20]
          type: (primitive_type [128, 1] - [128, 5])
          declarator: (array_declarator [128, 6] - [128, 19]
            declarator: (field_identifier [128, 6] - [128, 10])
            size: (binary_expression [128, 11] - [128, 18]
              left: (number_literal [128, 11] - [128, 15])
              right: (number_literal [128, 16] - [128, 18]))))))
    declarator: (type_identifier [129, 1] - [129, 1]))
  (preproc_call [130, 0] - [131, 0]
    directive: (preproc_directive [130, 0] - [130, 7])
    argument: (preproc_arg [130, 7] - [130, 18]))
  (function_definition [132, 0] - [146, 1]
    type: (type_identifier [132, 0] - [132, 12])
    declarator: (function_declarator [132, 13] - [132, 38]
      declarator: (identifier [132, 13] - [132, 26])
      parameters: (parameter_list [132, 26] - [132, 38]
        (parameter_declaration [132, 27] - [132, 37]
          type: (type_identifier [132, 27] - [132, 32])
          declarator: (identifier [132, 33] - [132, 37]))))
    body: (compound_statement [132, 39] - [146, 1]
      (declaration [133, 1] - [133, 17]
        type: (type_identifier [133, 1] - [133, 13])
        declarator: (identifier [133, 14] - [133, 16]))
      (expression_statement [134, 1] - [134, 38]
        (assignment_expression [134, 1] - [134, 37]
          left: (field_expression [134, 1] - [134, 17]
            argument: (identifier [134, 1] - [134, 3])
            field: (field_identifier [134, 4] - [134, 17]))
          right: (field_expression [134, 19] - [134, 37]
            argument: (identifier [134, 19] - [134, 23])
            field: (field_identifier [134, 24] - [134, 37]))))
      (expression_statement [135, 1] - [135, 39]
        (assignment_expression [135, 1] - [135, 38]
          left: (field_expression [135, 1] - [135, 17]
            argument: (identifier [135, 1] - [135, 3])
            field: (field_identifier [135, 4] - [135, 17]))
          right: (field_expression [135, 20] - [135, 38]
            argument: (identifier [135, 20] - [135, 24])
            field: (field_identifier [135, 25] - [135, 38]))))
      (expression_statement [136, 1] - [136, 31]
        (assignment_expression [136, 1] - [136, 30]
          left: (field_expression [136, 1] - [136, 13]
            argument: (identifier [136, 1] - [136, 3])
            field: (field_identifier [136, 4] - [136, 13]))
          right: (field_expression [136, 16] - [136, 30]
            argument: (identifier [136, 16] - [136, 20])
            field: (field_identifier [136, 21] - [136, 30]))))
      (expression_statement [137, 1] - [137, 31]
        (assignment_expression [137, 1] - [137, 30]
          left: (field_expression [137, 1] - [137, 13]
            argument: (identifier [137, 1] - [137, 3])
            field: (field_identifier [137, 4] - [137, 13]))
          right: (field_expression [137, 16] - [137, 30]
            argument: (identifier [137, 16] - [137, 20])
            field: (field_identifier [137, 21] - [137, 30]))))
      (expression_statement [138, 1] - [138, 60]
        (assignment_expression [138, 1] - [138, 59]
          left: (field_expression [138, 1] - [138, 16]
            argument: (identifier [138, 1] - [138, 3])
            field: (field_identifier [138, 4] - [138, 16]))
          right: (parenthesized_expression [138, 19] - [138, 59]
            (binary_expression [138, 20] - [138, 58]
              left: (field_expression [138, 20] - [138, 39]
                argument: (field_expression [138, 20] - [138, 37]
                  argument: (identifier [138, 20] - [138, 24])
                  field: (field_identifier [138, 25] - [138, 37]))
                field: (field_identifier [138, 38] - [138, 39]))
              right: (identifier [138, 42] - [138, 58])))))
      (expression_statement [139, 1] - [139, 49]
        (assignment_expression [139, 1] - [139, 48]
          left: (field_expression [139, 1] - [139, 22]
            argument: (identifier [139, 1] - [139, 3])
            field: (field_identifier [139, 4] - [139, 22]))
          right: (field_expression [139, 25] - [139, 48]
            argument: (identifier [139, 25] - [139, 29])
            field: (field_identifier [139, 30] - [139, 48]))))
      (for_statement [140, 1] - [140, 77]
        initializer: (declaration [140, 6] - [140, 16]
          type: (primitive_type [140, 6] - [140, 9])
          declarator: (init_declarator [140, 10] - [140, 15]
            declarator: (identifier [140, 10] - [140, 11])
            value: (number_literal [140, 14] - [140, 15])))
        condition: (binary_expression [140, 17] - [140, 23]
          left: (identifier [140, 17] - [140, 18])
          right: (number_literal [140, 21] - [140, 23]))
        update: (update_expression [140, 25] - [140, 28]
          argument: (identifier [140, 25] - [140, 26]))
        (expression_statement [140, 29] - [140, 77]
          (assignment_expression [140, 29] - [140, 76]
            left: (subscript_expression [140, 29] - [140, 50]
              argument: (field_expression [140, 29] - [140, 47]
                argument: (identifier [140, 29] - [140, 31])
                field: (field_identifier [140, 32] - [140, 47]))
              index: (identifier [140, 48] - [140, 49]))
            right: (subscript_expression [140, 53] - [140, 76]
              argument: (field_expression [140, 53] - [140, 73]
                argument: (identifier [140, 53] - [140, 57])
                field: (field_identifier [140, 58] - [140, 73]))
              index: (identifier [140, 74] - [140, 75])))))
      (for_statement [141, 1] - [141, 69]
        initializer: (declaration [141, 6] - [141, 16]
          type: (primitive_type [141, 6] - [141, 9])
          declarator: (init_declarator [141, 10] - [141, 15]
            declarator: (identifier [141, 10] - [141, 11])
            value: (number_literal [141, 14] - [141, 15])))
        condition: (binary_expression [141, 17] - [141, 23]
          left: (identifier [141, 17] - [141, 18])
          right: (number_literal [141, 21] - [141, 23]))
        update: (update_expression [141, 25] - [141, 28]
          argument: (identifier [141, 25] - [141, 26]))
        (expression_statement [141, 29] - [141, 69]
          (assignment_expression [141, 29] - [141, 68]
            left: (subscript_expression [141, 29] - [141, 46]
              argument: (field_expression [141, 29] - [141, 43]
                argument: (identifier [141, 29] - [141, 31])
                field: (field_identifier [141, 32] - [141, 43]))
              index: (identifier [141, 44] - [141, 45]))
            right: (subscript_expression [141, 49] - [141, 68]
              argument: (field_expression [141, 49] - [141, 65]
                argument: (identifier [141, 49] - [141, 53])
                field: (field_identifier [141, 54] - [141, 65]))
              index: (identifier [141, 66] - [141, 67])))))
      (expression_statement [142, 1] - [142, 33]
        (assignment_expression [142, 1] - [142, 32]
          left: (field_expression [142, 1] - [142, 14]
            argument: (identifier [142, 1] - [142, 3])
            field: (field_identifier [142, 4] - [142, 14]))
          right: (field_expression [142, 17] - [142, 32]
            argument: (identifier [142, 17] - [142, 21])
            field: (field_identifier [142, 22] - [142, 32]))))
      (expression_statement [143, 1] - [143, 33]
        (assignment_expression [143, 1] - [143, 32]
          left: (field_expression [143, 1] - [143, 14]
            argument: (identifier [143, 1] - [143, 3])
            field: (field_identifier [143, 4] - [143, 14]))
          right: (field_expression [143, 17] - [143, 32]
            argument: (identifier [143, 17] - [143, 21])
            field: (field_identifier [143, 22] - [143, 32]))))
      (expression_statement [144, 1] - [144, 43]
        (assignment_expression [144, 1] - [144, 42]
          left: (field_expression [144, 1] - [144, 19]
            argument: (identifier [144, 1] - [144, 3])
            field: (field_identifier [144, 4] - [144, 19]))
          right: (field_expression [144, 22] - [144, 42]
            argument: (identifier [144, 22] - [144, 26])
            field: (field_identifier [144, 27] - [144, 42]))))
      (return_statement [145, 1] - [145, 11]
        (identifier [145, 8] - [145, 10]))))
  (expression_statement [146, 1] - [146, 2])
  (function_definition [147, 0] - [161, 1]
    type: (type_identifier [147, 0] - [147, 5])
    declarator: (function_declarator [147, 6] - [147, 40]
      declarator: (identifier [147, 6] - [147, 21])
      parameters: (parameter_list [147, 21] - [147, 40]
        (parameter_declaration [147, 22] - [147, 39]
          type: (type_identifier [147, 22] - [147, 34])
          declarator: (identifier [147, 35] - [147, 39]))))
    body: (compound_statement [147, 41] - [161, 1]
      (declaration [148, 1] - [148, 10]
        type: (type_identifier [148, 1] - [148, 6])
        declarator: (identifier [148, 7] - [148, 9]))
      (expression_statement [149, 1] - [149, 39]
        (assignment_expression [149, 1] - [149, 38]
          left: (field_expression [149, 1] - [149, 17]
            argument: (identifier [149, 1] - [149, 3])
            field: (field_identifier [149, 4] - [149, 17]))
          right: (field_expression [149, 20] - [149, 38]
            argument: (identifier [149, 20] - [149, 24])
            field: (field_identifier [149, 25] - [149, 38]))))
      (expression_statement [150, 1] - [150, 39]
        (assignment_expression [150, 1] - [150, 38]
          left: (field_expression [150, 1] - [150, 17]
            argument: (identifier [150, 1] - [150, 3])
            field: (field_identifier [150, 4] - [150, 17]))
          right: (field_expression [150, 20] - [150, 38]
            argument: (identifier [150, 20] - [150, 24])
            field: (field_identifier [150, 25] - [150, 38]))))
      (expression_statement [151, 1] - [151, 31]
        (assignment_expression [151, 1] - [151, 30]
          left: (field_expression [151, 1] - [151, 13]
            argument: (identifier [151, 1] - [151, 3])
            field: (field_identifier [151, 4] - [151, 13]))
          right: (field_expression [151, 16] - [151, 30]
            argument: (identifier [151, 16] - [151, 20])
            field: (field_identifier [151, 21] - [151, 30]))))
      (expression_statement [152, 1] - [152, 31]
        (assignment_expression [152, 1] - [152, 30]
          left: (field_expression [152, 1] - [152, 13]
            argument: (identifier [152, 1] - [152, 3])
            field: (field_identifier [152, 4] - [152, 13]))
          right: (field_expression [152, 16] - [152, 30]
            argument: (identifier [152, 16] - [152, 20])
            field: (field_identifier [152, 21] - [152, 30]))))
      (expression_statement [153, 1] - [153, 60]
        (assignment_expression [153, 1] - [153, 59]
          left: (field_expression [153, 1] - [153, 18]
            argument: (field_expression [153, 1] - [153, 16]
              argument: (identifier [153, 1] - [153, 3])
              field: (field_identifier [153, 4] - [153, 16]))
            field: (field_identifier [153, 17] - [153, 18]))
          right: (parenthesized_expression [153, 21] - [153, 59]
            (binary_expression [153, 22] - [153, 58]
              left: (field_expression [153, 22] - [153, 39]
                argument: (identifier [153, 22] - [153, 26])
                field: (field_identifier [153, 27] - [153, 39]))
              right: (identifier [153, 42] - [153, 58])))))
      (expression_statement [154, 1] - [154, 49]
        (assignment_expression [154, 1] - [154, 48]
          left: (field_expression [154, 1] - [154, 22]
            argument: (identifier [154, 1] - [154, 3])
            field: (field_identifier [154, 4] - [154, 22]))
          right: (field_expression [154, 25] - [154, 48]
            argument: (identifier [154, 25] - [154, 29])
            field: (field_identifier [154, 30] - [154, 48]))))
      (for_statement [155, 1] - [155, 77]
        initializer: (declaration [155, 6] - [155, 16]
          type: (primitive_type [155, 6] - [155, 9])
          declarator: (init_declarator [155, 10] - [155, 15]
            declarator: (identifier [155, 10] - [155, 11])
            value: (number_literal [155, 14] - [155, 15])))
        condition: (binary_expression [155, 17] - [155, 23]
          left: (identifier [155, 17] - [155, 18])
          right: (number_literal [155, 21] - [155, 23]))
        update: (update_expression [155, 25] - [155, 28]
          argument: (identifier [155, 25] - [155, 26]))
        (expression_statement [155, 29] - [155, 77]
          (assignment_expression [155, 29] - [155, 76]
            left: (subscript_expression [155, 29] - [155, 50]
              argument: (field_expression [155, 29] - [155, 47]
                argument: (identifier [155, 29] - [155, 31])
                field: (field_identifier [155, 32] - [155, 47]))
              index: (identifier [155, 48] - [155, 49]))
            right: (subscript_expression [155, 53] - [155, 76]
              argument: (field_expression [155, 53] - [155, 73]
                argument: (identifier [155, 53] - [155, 57])
                field: (field_identifier [155, 58] - [155, 73]))
              index: (identifier [155, 74] - [155, 75])))))
      (for_statement [156, 1] - [156, 69]
        initializer: (declaration [156, 6] - [156, 16]
          type: (primitive_type [156, 6] - [156, 9])
          declarator: (init_declarator [156, 10] - [156, 15]
            declarator: (identifier [156, 10] - [156, 11])
            value: (number_literal [156, 14] - [156, 15])))
        condition: (binary_expression [156, 17] - [156, 23]
          left: (identifier [156, 17] - [156, 18])
          right: (number_literal [156, 21] - [156, 23]))
        update: (update_expression [156, 25] - [156, 28]
          argument: (identifier [156, 25] - [156, 26]))
        (expression_statement [156, 29] - [156, 69]
          (assignment_expression [156, 29] - [156, 68]
            left: (subscript_expression [156, 29] - [156, 46]
              argument: (field_expression [156, 29] - [156, 43]
                argument: (identifier [156, 29] - [156, 31])
                field: (field_identifier [156, 32] - [156, 43]))
              index: (identifier [156, 44] - [156, 45]))
            right: (subscript_expression [156, 49] - [156, 68]
              argument: (field_expression [156, 49] - [156, 65]
                argument: (identifier [156, 49] - [156, 53])
                field: (field_identifier [156, 54] - [156, 65]))
              index: (identifier [156, 66] - [156, 67])))))
      (expression_statement [157, 1] - [157, 33]
        (assignment_expression [157, 1] - [157, 32]
          left: (field_expression [157, 1] - [157, 14]
            argument: (identifier [157, 1] - [157, 3])
            field: (field_identifier [157, 4] - [157, 14]))
          right: (field_expression [157, 17] - [157, 32]
            argument: (identifier [157, 17] - [157, 21])
            field: (field_identifier [157, 22] - [157, 32]))))
      (expression_statement [158, 1] - [158, 33]
        (assignment_expression [158, 1] - [158, 32]
          left: (field_expression [158, 1] - [158, 14]
            argument: (identifier [158, 1] - [158, 3])
            field: (field_identifier [158, 4] - [158, 14]))
          right: (field_expression [158, 17] - [158, 32]
            argument: (identifier [158, 17] - [158, 21])
            field: (field_identifier [158, 22] - [158, 32]))))
      (expression_statement [159, 1] - [159, 43]
        (assignment_expression [159, 1] - [159, 42]
          left: (field_expression [159, 1] - [159, 19]
            argument: (identifier [159, 1] - [159, 3])
            field: (field_identifier [159, 4] - [159, 19]))
          right: (field_expression [159, 22] - [159, 42]
            argument: (identifier [159, 22] - [159, 26])
            field: (field_identifier [159, 27] - [159, 42]))))
      (return_statement [160, 1] - [160, 11]
        (identifier [160, 8] - [160, 10]))))
  (expression_statement [161, 1] - [161, 2])
  (function_definition [163, 0] - [171, 1]
    type: (qualified_identifier [163, 0] - [163, 11]
      scope: (namespace_identifier [163, 0] - [163, 3])
      name: (type_identifier [163, 5] - [163, 11]))
    declarator: (function_declarator [163, 12] - [163, 47]
      declarator: (identifier [163, 12] - [163, 24])
      parameters: (parameter_list [163, 24] - [163, 47]
        (parameter_declaration [163, 25] - [163, 46]
          type: (type_identifier [163, 25] - [163, 37])
          declarator: (identifier [163, 38] - [163, 46]))))
    body: (compound_statement [164, 0] - [171, 1]
      (declaration [165, 1] - [165, 20]
        type: (qualified_identifier [165, 1] - [165, 12]
          scope: (namespace_identifier [165, 1] - [165, 4])
          name: (type_identifier [165, 6] - [165, 12]))
        declarator: (identifier [165, 13] - [165, 19]))
      (for_statement [166, 1] - [169, 2]
        initializer: (declaration [166, 6] - [166, 16]
          type: (primitive_type [166, 6] - [166, 9])
          declarator: (init_declarator [166, 10] - [166, 15]
            declarator: (identifier [166, 10] - [166, 11])
            value: (number_literal [166, 14] - [166, 15])))
        condition: (binary_expression [166, 17] - [166, 62]
          left: (identifier [166, 17] - [166, 18])
          right: (binary_expression [166, 21] - [166, 62]
            left: (field_expression [166, 21] - [166, 34]
              argument: (identifier [166, 21] - [166, 29])
              field: (field_identifier [166, 30] - [166, 34]))
            right: (sizeof_expression [166, 37] - [166, 62]
              value: (binary_expression [166, 43] - [166, 62]
                left: (parenthesized_expression [166, 43] - [166, 57]
                  (identifier [166, 44] - [166, 56]))
                right: (number_literal [166, 60] - [166, 62])))))
        update: (update_expression [166, 64] - [166, 67]
          argument: (identifier [166, 64] - [166, 65]))
        (compound_statement [167, 1] - [169, 2]
          (expression_statement [168, 2] - [168, 34]
            (assignment_expression [168, 2] - [168, 33]
              left: (identifier [168, 2] - [168, 8])
              right: (subscript_expression [168, 12] - [168, 33]
                argument: (parenthesized_expression [168, 12] - [168, 30]
                  (cast_expression [168, 13] - [168, 29]
                    type: (type_descriptor [168, 14] - [168, 19]
                      type: (primitive_type [168, 14] - [168, 18])
                      declarator: (abstract_pointer_declarator [168, 18] - [168, 19]))
                    value: (pointer_expression [168, 20] - [168, 29]
                      argument: (identifier [168, 21] - [168, 29]))))
                index: (identifier [168, 31] - [168, 32]))))))
      (return_statement [170, 1] - [170, 15]
        (identifier [170, 8] - [170, 14]))))
  (function_definition [173, 0] - [183, 1]
    type: (qualified_identifier [173, 0] - [173, 11]
      scope: (namespace_identifier [173, 0] - [173, 3])
      name: (type_identifier [173, 5] - [173, 11]))
    declarator: (function_declarator [173, 12] - [173, 146]
      declarator: (identifier [173, 12] - [173, 24])
      parameters: (parameter_list [173, 24] - [173, 146]
        (parameter_declaration [173, 25] - [173, 39]
          type: (type_identifier [173, 25] - [173, 31])
          declarator: (identifier [173, 32] - [173, 39]))
        (parameter_declaration [173, 41] - [173, 60]
          type: (type_identifier [173, 41] - [173, 53])
          declarator: (identifier [173, 54] - [173, 60]))
        (parameter_declaration [173, 62] - [173, 78]
          type: (primitive_type [173, 62] - [173, 69])
          declarator: (identifier [173, 70] - [173, 78]))
        (optional_parameter_declaration [173, 80] - [173, 95]
          type: (primitive_type [173, 80] - [173, 87])
          declarator: (identifier [173, 88] - [173, 92])
          default_value: (number_literal [173, 93] - [173, 95]))
        (optional_parameter_declaration [173, 97] - [173, 123]
          (type_qualifier [173, 97] - [173, 102])
          type: (primitive_type [173, 103] - [173, 107])
          declarator: (pointer_declarator [173, 107] - [173, 113]
            declarator: (identifier [173, 109] - [173, 113]))
          default_value: (nullptr [173, 116] - [173, 123]))
        (optional_parameter_declaration [173, 125] - [173, 145]
          type: (primitive_type [173, 125] - [173, 128])
          declarator: (identifier [173, 129] - [173, 141])
          default_value: (number_literal [173, 144] - [173, 145]))))
    body: (compound_statement [173, 147] - [183, 1]
      (declaration [174, 1] - [174, 30]
        type: (type_identifier [174, 1] - [174, 13])
        declarator: (identifier [174, 14] - [174, 29]))
      (expression_statement [175, 1] - [175, 35]
        (assignment_expression [175, 1] - [175, 34]
          left: (field_expression [175, 1] - [175, 24]
            argument: (identifier [175, 1] - [175, 16])
            field: (field_identifier [175, 17] - [175, 24]))
          right: (identifier [175, 27] - [175, 34])))
      (expression_statement [176, 1] - [176, 37]
        (assignment_expression [176, 1] - [176, 36]
          left: (field_expression [176, 1] - [176, 21]
            argument: (identifier [176, 1] - [176, 16])
            field: (field_identifier [176, 17] - [176, 21]))
          right: (identifier [176, 24] - [176, 36])))
      (expression_statement [177, 1] - [177, 34]
        (assignment_expression [177, 1] - [177, 33]
          left: (field_expression [177, 1] - [177, 24]
            argument: (identifier [177, 1] - [177, 16])
            field: (field_identifier [177, 17] - [177, 24]))
          right: (identifier [177, 27] - [177, 33])))
      (expression_statement [178, 1] - [178, 34]
        (assignment_expression [178, 1] - [178, 33]
          left: (field_expression [178, 1] - [178, 22]
            argument: (identifier [178, 1] - [178, 16])
            field: (field_identifier [178, 17] - [178, 22]))
          right: (identifier [178, 25] - [178, 33])))
      (expression_statement [179, 1] - [179, 29]
        (assignment_expression [179, 1] - [179, 28]
          left: (field_expression [179, 1] - [179, 21]
            argument: (identifier [179, 1] - [179, 16])
            field: (field_identifier [179, 17] - [179, 21]))
          right: (identifier [179, 24] - [179, 28])))
      (if_statement [180, 1] - [181, 51]
        condition: (condition_clause [180, 3] - [180, 9]
          value: (identifier [180, 4] - [180, 8]))
        consequence: (expression_statement [181, 2] - [181, 51]
          (call_expression [181, 2] - [181, 50]
            function: (identifier [181, 2] - [181, 8])
            arguments: (argument_list [181, 8] - [181, 50]
              (field_expression [181, 9] - [181, 29]
                argument: (identifier [181, 9] - [181, 24])
                field: (field_identifier [181, 25] - [181, 29]))
              (identifier [181, 31] - [181, 35])
              (identifier [181, 37] - [181, 49])))))
      (return_statement [182, 1] - [182, 38]
        (call_expression [182, 8] - [182, 37]
          function: (identifier [182, 8] - [182, 20])
          arguments: (argument_list [182, 20] - [182, 37]
            (identifier [182, 21] - [182, 36]))))))
  (function_definition [185, 0] - [192, 1]
    type: (type_identifier [185, 0] - [185, 12])
    declarator: (function_declarator [185, 13] - [185, 45]
      declarator: (identifier [185, 13] - [185, 27])
      parameters: (parameter_list [185, 27] - [185, 45]
        (parameter_declaration [185, 28] - [185, 44]
          type: (qualified_identifier [185, 28] - [185, 39]
            scope: (namespace_identifier [185, 28] - [185, 31])
            name: (type_identifier [185, 33] - [185, 39]))
          declarator: (identifier [185, 40] - [185, 44]))))
    body: (compound_statement [185, 46] - [192, 1]
      (declaration [186, 1] - [186, 21]
        type: (type_identifier [186, 1] - [186, 13])
        declarator: (identifier [186, 14] - [186, 20]))
      (for_statement [187, 1] - [188, 34]
        initializer: (declaration [187, 6] - [187, 16]
          type: (primitive_type [187, 6] - [187, 9])
          declarator: (init_declarator [187, 10] - [187, 15]
            declarator: (identifier [187, 10] - [187, 11])
            value: (number_literal [187, 14] - [187, 15])))
        condition: (binary_expression [187, 17] - [187, 46]
          left: (identifier [187, 17] - [187, 18])
          right: (sizeof_expression [187, 21] - [187, 46]
            value: (binary_expression [187, 27] - [187, 46]
              left: (parenthesized_expression [187, 27] - [187, 41]
                (identifier [187, 28] - [187, 40]))
              right: (number_literal [187, 44] - [187, 46]))))
        update: (update_expression [187, 48] - [187, 51]
          argument: (identifier [187, 48] - [187, 49]))
        (expression_statement [188, 2] - [188, 34]
          (assignment_expression [188, 2] - [188, 33]
            left: (subscript_expression [188, 2] - [188, 23]
              argument: (parenthesized_expression [188, 2] - [188, 20]
                (cast_expression [188, 3] - [188, 19]
                  type: (type_descriptor [188, 4] - [188, 9]
                    type: (primitive_type [188, 4] - [188, 8])
                    declarator: (abstract_pointer_declarator [188, 8] - [188, 9]))
                  value: (parenthesized_expression [188, 10] - [188, 19]
                    (pointer_expression [188, 11] - [188, 18]
                      argument: (identifier [188, 12] - [188, 18])))))
              index: (identifier [188, 21] - [188, 22]))
            right: (subscript_expression [188, 26] - [188, 33]
              argument: (identifier [188, 26] - [188, 30])
              index: (identifier [188, 31] - [188, 32])))))
      (for_statement [189, 1] - [190, 34]
        initializer: (declaration [189, 6] - [189, 40]
          type: (primitive_type [189, 6] - [189, 9])
          declarator: (init_declarator [189, 10] - [189, 39]
            declarator: (identifier [189, 10] - [189, 11])
            value: (sizeof_expression [189, 14] - [189, 39]
              value: (binary_expression [189, 20] - [189, 39]
                left: (parenthesized_expression [189, 20] - [189, 34]
                  (identifier [189, 21] - [189, 33]))
                right: (number_literal [189, 37] - [189, 39])))))
        condition: (binary_expression [189, 41] - [189, 84]
          left: (identifier [189, 41] - [189, 42])
          right: (binary_expression [189, 45] - [189, 84]
            left: (field_expression [189, 45] - [189, 56]
              argument: (identifier [189, 45] - [189, 51])
              field: (field_identifier [189, 52] - [189, 56]))
            right: (sizeof_expression [189, 59] - [189, 84]
              value: (binary_expression [189, 65] - [189, 84]
                left: (parenthesized_expression [189, 65] - [189, 79]
                  (identifier [189, 66] - [189, 78]))
                right: (number_literal [189, 82] - [189, 84])))))
        update: (update_expression [189, 86] - [189, 89]
          argument: (identifier [189, 86] - [189, 87]))
        (expression_statement [190, 2] - [190, 34]
          (assignment_expression [190, 2] - [190, 33]
            left: (subscript_expression [190, 2] - [190, 23]
              argument: (parenthesized_expression [190, 2] - [190, 20]
                (cast_expression [190, 3] - [190, 19]
                  type: (type_descriptor [190, 4] - [190, 9]
                    type: (primitive_type [190, 4] - [190, 8])
                    declarator: (abstract_pointer_declarator [190, 8] - [190, 9]))
                  value: (parenthesized_expression [190, 10] - [190, 19]
                    (pointer_expression [190, 11] - [190, 18]
                      argument: (identifier [190, 12] - [190, 18])))))
              index: (identifier [190, 21] - [190, 22]))
            right: (subscript_expression [190, 26] - [190, 33]
              argument: (identifier [190, 26] - [190, 30])
              index: (identifier [190, 31] - [190, 32])))))
      (return_statement [191, 1] - [191, 15]
        (identifier [191, 8] - [191, 14]))))
  (function_definition [194, 0] - [197, 1]
    type: (primitive_type [194, 0] - [194, 4])
    declarator: (function_declarator [194, 5] - [194, 35]
      declarator: (identifier [194, 5] - [194, 22])
      parameters: (parameter_list [194, 22] - [194, 35]
        (parameter_declaration [194, 23] - [194, 34]
          type: (primitive_type [194, 23] - [194, 26])
          declarator: (identifier [194, 27] - [194, 34]))))
    body: (compound_statement [195, 0] - [197, 1]
      (expression_statement [196, 1] - [196, 65]
        (call_expression [196, 1] - [196, 64]
          function: (qualified_identifier [196, 1] - [196, 28]
            scope: (namespace_identifier [196, 1] - [196, 4])
            name: (qualified_identifier [196, 6] - [196, 28]
              scope: (namespace_identifier [196, 6] - [196, 17])
              name: (identifier [196, 19] - [196, 28])))
          arguments: (argument_list [196, 28] - [196, 64]
            (call_expression [196, 29] - [196, 63]
              function: (qualified_identifier [196, 29] - [196, 54]
                scope: (namespace_identifier [196, 29] - [196, 32])
                name: (qualified_identifier [196, 34] - [196, 54]
                  scope: (namespace_identifier [196, 34] - [196, 40])
                  name: (identifier [196, 42] - [196, 54])))
              arguments: (argument_list [196, 54] - [196, 63]
                (identifier [196, 55] - [196, 62]))))))))
  (declaration [199, 0] - [199, 31]
    type: (qualified_identifier [199, 0] - [199, 11]
      scope: (namespace_identifier [199, 0] - [199, 3])
      name: (type_identifier [199, 5] - [199, 11]))
    declarator: (init_declarator [199, 12] - [199, 30]
      declarator: (identifier [199, 12] - [199, 25])
      value: (string_literal [199, 28] - [199, 30])))
  (declaration [201, 0] - [201, 23]
    type: (type_identifier [201, 0] - [201, 4])
    declarator: (pointer_declarator [201, 4] - [201, 22]
      declarator: (identifier [201, 6] - [201, 22])))
  (declaration [202, 0] - [202, 57]
    (type_qualifier [202, 0] - [202, 5])
    type: (primitive_type [202, 6] - [202, 10])
    declarator: (init_declarator [202, 10] - [202, 56]
      declarator: (pointer_declarator [202, 10] - [202, 31]
        declarator: (identifier [202, 12] - [202, 31]))
      value: (string_literal [202, 34] - [202, 56])))
  (declaration [203, 0] - [203, 37]
    type: (qualified_identifier [203, 0] - [203, 11]
      scope: (namespace_identifier [203, 0] - [203, 3])
      name: (type_identifier [203, 5] - [203, 11]))
    declarator: (init_declarator [203, 12] - [203, 36]
      declarator: (identifier [203, 12] - [203, 31])
      value: (initializer_list [203, 34] - [203, 36])))
  (declaration [205, 0] - [205, 28]
    type: (primitive_type [205, 0] - [205, 4])
    declarator: (init_declarator [205, 5] - [205, 27]
      declarator: (identifier [205, 5] - [205, 20])
      value: (true [205, 23] - [205, 27])))
  (declaration [207, 0] - [207, 20]
    type: (qualified_identifier [207, 0] - [207, 10]
      scope: (namespace_identifier [207, 0] - [207, 3])
      name: (type_identifier [207, 5] - [207, 10]))
    declarator: (identifier [207, 11] - [207, 19]))
  (function_definition [209, 0] - [235, 1]
    type: (primitive_type [209, 0] - [209, 4])
    declarator: (function_declarator [209, 5] - [209, 46]
      declarator: (identifier [209, 5] - [209, 21])
      parameters: (parameter_list [209, 21] - [209, 46]
        (parameter_declaration [209, 22] - [209, 40]
          (type_qualifier [209, 22] - [209, 27])
          type: (primitive_type [209, 28] - [209, 32])
          declarator: (pointer_declarator [209, 32] - [209, 40]
            declarator: (identifier [209, 34] - [209, 40])))))
    body: (compound_statement [209, 47] - [235, 1]
      (expression_statement [210, 1] - [210, 17]
        (call_expression [210, 1] - [210, 16]
          function: (field_expression [210, 1] - [210, 14]
            argument: (identifier [210, 1] - [210, 9])
            field: (field_identifier [210, 10] - [210, 14]))
          arguments: (argument_list [210, 14] - [210, 16])))
      (declaration [211, 1] - [211, 24]
        type: (primitive_type [211, 1] - [211, 5])
        declarator: (array_declarator [211, 6] - [211, 23]
          declarator: (identifier [211, 6] - [211, 14])
          size: (binary_expression [211, 15] - [211, 22]
            left: (number_literal [211, 15] - [211, 19])
            right: (number_literal [211, 20] - [211, 22]))))
      (declaration [212, 1] - [212, 13]
        type: (type_identifier [212, 1] - [212, 8])
        declarator: (identifier [212, 9] - [212, 12]))
      (comment [213, 1] - [213, 13])
      (expression_statement [214, 1] - [214, 23]
        (call_expression [214, 1] - [214, 22]
          function: (identifier [214, 1] - [214, 9])
          arguments: (argument_list [214, 9] - [214, 22]
            (identifier [214, 10] - [214, 13])
            (identifier [214, 15] - [214, 21]))))
      (expression_statement [215, 1] - [215, 33]
        (call_expression [215, 1] - [215, 32]
          function: (identifier [215, 1] - [215, 9])
          arguments: (argument_list [215, 9] - [215, 32]
            (identifier [215, 10] - [215, 18])
            (identifier [215, 20] - [215, 26])
            (identifier [215, 28] - [215, 31]))))
      (expression_statement [216, 1] - [216, 13]
        (call_expression [216, 1] - [216, 12]
          function: (identifier [216, 1] - [216, 7])
          arguments: (argument_list [216, 7] - [216, 12]
            (identifier [216, 8] - [216, 11]))))
      (comment [218, 1] - [218, 41])
      (comment [219, 1] - [219, 46])
      (comment [220, 1] - [220, 34])
      (if_statement [222, 1] - [228, 62]
        condition: (condition_clause [222, 4] - [222, 21]
          value: (identifier [222, 5] - [222, 20]))
        consequence: (compound_statement [223, 1] - [226, 2]
          (expression_statement [224, 2] - [224, 62]
            (assignment_expression [224, 2] - [224, 61]
              left: (identifier [224, 2] - [224, 18])
              right: (call_expression [224, 21] - [224, 61]
                function: (identifier [224, 21] - [224, 26])
                arguments: (argument_list [224, 26] - [224, 61]
                  (call_expression [224, 27] - [224, 54]
                    function: (field_expression [224, 27] - [224, 52]
                      argument: (identifier [224, 27] - [224, 46])
                      field: (field_identifier [224, 47] - [224, 52]))
                    arguments: (argument_list [224, 52] - [224, 54]))
                  (string_literal [224, 56] - [224, 60])))))
          (expression_statement [225, 2] - [225, 26]
            (assignment_expression [225, 2] - [225, 25]
              left: (identifier [225, 2] - [225, 17])
              right: (false [225, 20] - [225, 25]))))
        alternative: (expression_statement [228, 2] - [228, 62]
          (assignment_expression [228, 2] - [228, 61]
            left: (identifier [228, 2] - [228, 18])
            right: (call_expression [228, 21] - [228, 61]
              function: (identifier [228, 21] - [228, 26])
              arguments: (argument_list [228, 26] - [228, 61]
                (call_expression [228, 27] - [228, 54]
                  function: (field_expression [228, 27] - [228, 52]
                    argument: (identifier [228, 27] - [228, 46])
                    field: (field_identifier [228, 47] - [228, 52]))
                  arguments: (argument_list [228, 52] - [228, 54]))
                (string_literal [228, 56] - [228, 60]))))))
      (expression_statement [229, 1] - [229, 54]
        (call_expression [229, 1] - [229, 53]
          function: (identifier [229, 1] - [229, 8])
          arguments: (argument_list [229, 8] - [229, 53]
            (identifier [229, 9] - [229, 25])
            (string_literal [229, 27] - [229, 34])
            (call_expression [229, 36] - [229, 43]
              function: (identifier [229, 36] - [229, 41])
              arguments: (argument_list [229, 41] - [229, 43]))
            (identifier [229, 44] - [229, 52]))))
      (expression_statement [230, 1] - [230, 26]
        (call_expression [230, 1] - [230, 25]
          function: (identifier [230, 1] - [230, 7])
          arguments: (argument_list [230, 7] - [230, 25]
            (identifier [230, 8] - [230, 24]))))
      (preproc_ifdef [231, 0] - [233, 6]
        name: (identifier [231, 7] - [231, 34])
        (expression_statement [232, 1] - [232, 18]
          (call_expression [232, 1] - [232, 17]
            function: (identifier [232, 1] - [232, 7])
            arguments: (argument_list [232, 7] - [232, 17]
              (identifier [232, 8] - [232, 16])))))
      (expression_statement [234, 1] - [234, 19]
        (call_expression [234, 1] - [234, 18]
          function: (field_expression [234, 1] - [234, 16]
            argument: (identifier [234, 1] - [234, 9])
            field: (field_identifier [234, 10] - [234, 16]))
          arguments: (argument_list [234, 16] - [234, 18])))))
  (declaration [238, 0] - [238, 37]
    type: (qualified_identifier [238, 0] - [238, 24]
      scope: (namespace_identifier [238, 0] - [238, 3])
      name: (template_type [238, 5] - [238, 24]
        name: (type_identifier [238, 5] - [238, 11])
        arguments: (template_argument_list [238, 11] - [238, 24]
          (type_descriptor [238, 12] - [238, 23]
            type: (qualified_identifier [238, 12] - [238, 23]
              scope: (namespace_identifier [238, 12] - [238, 15])
              name: (type_identifier [238, 17] - [238, 23]))))))
    declarator: (identifier [238, 25] - [238, 36]))
  (type_definition [239, 0] - [242, 13]
    type: (struct_specifier [239, 8] - [242, 1]
      body: (field_declaration_list [239, 15] - [242, 1]
        (field_declaration [240, 1] - [240, 20]
          type: (qualified_identifier [240, 1] - [240, 12]
            scope: (namespace_identifier [240, 1] - [240, 4])
            name: (type_identifier [240, 6] - [240, 12]))
          declarator: (field_identifier [240, 13] - [240, 19]))
        (field_declaration [241, 1] - [241, 10]
          type: (primitive_type [241, 1] - [241, 4])
          declarator: (field_identifier [241, 5] - [241, 9]))))
    declarator: (type_identifier [242, 2] - [242, 12]))
  (declaration [243, 0] - [243, 37]
    type: (qualified_identifier [243, 0] - [243, 23]
      scope: (namespace_identifier [243, 0] - [243, 3])
      name: (template_type [243, 5] - [243, 23]
        name: (type_identifier [243, 5] - [243, 11])
        arguments: (template_argument_list [243, 11] - [243, 23]
          (type_descriptor [243, 12] - [243, 22]
            type: (type_identifier [243, 12] - [243, 22])))))
    declarator: (identifier [243, 24] - [243, 36]))
  (declaration [245, 0] - [245, 36]
    type: (qualified_identifier [245, 0] - [245, 24]
      scope: (namespace_identifier [245, 0] - [245, 3])
      name: (template_type [245, 5] - [245, 24]
        name: (type_identifier [245, 5] - [245, 11])
        arguments: (template_argument_list [245, 11] - [245, 24]
          (type_descriptor [245, 12] - [245, 23]
            type: (qualified_identifier [245, 12] - [245, 23]
              scope: (namespace_identifier [245, 12] - [245, 15])
              name: (type_identifier [245, 17] - [245, 23]))))))
    declarator: (identifier [245, 25] - [245, 35]))
  (declaration [246, 0] - [246, 39]
    type: (qualified_identifier [246, 0] - [246, 23]
      scope: (namespace_identifier [246, 0] - [246, 3])
      name: (template_type [246, 5] - [246, 23]
        name: (type_identifier [246, 5] - [246, 11])
        arguments: (template_argument_list [246, 11] - [246, 23]
          (type_descriptor [246, 12] - [246, 22]
            type: (type_identifier [246, 12] - [246, 22])))))
    declarator: (identifier [246, 24] - [246, 38]))
  (declaration [247, 0] - [247, 37]
    type: (qualified_identifier [247, 0] - [247, 24]
      scope: (namespace_identifier [247, 0] - [247, 3])
      name: (template_type [247, 5] - [247, 24]
        name: (type_identifier [247, 5] - [247, 11])
        arguments: (template_argument_list [247, 11] - [247, 24]
          (type_descriptor [247, 12] - [247, 23]
            type: (qualified_identifier [247, 12] - [247, 23]
              scope: (namespace_identifier [247, 12] - [247, 15])
              name: (type_identifier [247, 17] - [247, 23]))))))
    declarator: (identifier [247, 25] - [247, 36]))
  (declaration [248, 0] - [248, 40]
    type: (qualified_identifier [248, 0] - [248, 23]
      scope: (namespace_identifier [248, 0] - [248, 3])
      name: (template_type [248, 5] - [248, 23]
        name: (type_identifier [248, 5] - [248, 11])
        arguments: (template_argument_list [248, 11] - [248, 23]
          (type_descriptor [248, 12] - [248, 22]
            type: (type_identifier [248, 12] - [248, 22])))))
    declarator: (identifier [248, 24] - [248, 39]))
  (declaration [250, 0] - [250, 37]
    type: (qualified_identifier [250, 0] - [250, 19]
      scope: (namespace_identifier [250, 0] - [250, 3])
      name: (template_type [250, 5] - [250, 19]
        name: (type_identifier [250, 5] - [250, 11])
        arguments: (template_argument_list [250, 11] - [250, 19]
          (type_descriptor [250, 12] - [250, 18]
            type: (type_identifier [250, 12] - [250, 17])
            declarator: (abstract_pointer_declarator [250, 17] - [250, 18])))))
    declarator: (identifier [250, 20] - [250, 36]))
  (declaration [252, 0] - [252, 34]
    type: (primitive_type [252, 0] - [252, 4])
    declarator: (init_declarator [252, 5] - [252, 33]
      declarator: (identifier [252, 5] - [252, 25])
      value: (false [252, 28] - [252, 33])))
  (function_definition [254, 0] - [256, 1]
    type: (primitive_type [254, 0] - [254, 4])
    declarator: (function_declarator [254, 5] - [254, 27]
      declarator: (identifier [254, 5] - [254, 25])
      parameters: (parameter_list [254, 25] - [254, 27]))
    body: (compound_statement [254, 28] - [256, 1]
      (return_statement [255, 1] - [255, 29]
        (identifier [255, 8] - [255, 28]))))
  (function_definition [258, 0] - [265, 1]
    type: (type_identifier [258, 0] - [258, 10])
    declarator: (function_declarator [258, 11] - [258, 46]
      declarator: (identifier [258, 11] - [258, 28])
      parameters: (parameter_list [258, 28] - [258, 46]
        (parameter_declaration [258, 29] - [258, 45]
          type: (qualified_identifier [258, 29] - [258, 40]
            scope: (namespace_identifier [258, 29] - [258, 32])
            name: (type_identifier [258, 34] - [258, 40]))
          declarator: (identifier [258, 41] - [258, 45]))))
    body: (compound_statement [258, 47] - [265, 1]
      (for_statement [259, 1] - [261, 26]
        initializer: (declaration [259, 6] - [259, 16]
          type: (primitive_type [259, 6] - [259, 9])
          declarator: (init_declarator [259, 10] - [259, 15]
            declarator: (identifier [259, 10] - [259, 11])
            value: (number_literal [259, 14] - [259, 15])))
        condition: (binary_expression [259, 17] - [259, 39]
          left: (identifier [259, 17] - [259, 18])
          right: (call_expression [259, 21] - [259, 39]
            function: (field_expression [259, 21] - [259, 37]
              argument: (identifier [259, 21] - [259, 32])
              field: (field_identifier [259, 33] - [259, 37]))
            arguments: (argument_list [259, 37] - [259, 39])))
        update: (update_expression [259, 41] - [259, 44]
          argument: (identifier [259, 41] - [259, 42]))
        (if_statement [260, 2] - [261, 26]
          condition: (condition_clause [260, 5] - [260, 36]
            value: (unary_expression [260, 6] - [260, 35]
              argument: (call_expression [260, 7] - [260, 35]
                function: (field_expression [260, 7] - [260, 29]
                  argument: (subscript_expression [260, 7] - [260, 21]
                    argument: (identifier [260, 7] - [260, 18])
                    index: (identifier [260, 19] - [260, 20]))
                  field: (field_identifier [260, 22] - [260, 29]))
                arguments: (argument_list [260, 29] - [260, 35]
                  (identifier [260, 30] - [260, 34])))))
          consequence: (return_statement [261, 3] - [261, 26]
            (subscript_expression [261, 10] - [261, 25]
              argument: (identifier [261, 10] - [261, 22])
              index: (identifier [261, 23] - [261, 24])))))
      (declaration [262, 1] - [262, 23]
        type: (type_identifier [262, 1] - [262, 11])
        declarator: (identifier [262, 12] - [262, 22]))
      (expression_statement [263, 1] - [263, 28]
        (assignment_expression [263, 1] - [263, 27]
          left: (field_expression [263, 1] - [263, 18]
            argument: (identifier [263, 1] - [263, 11])
            field: (field_identifier [263, 12] - [263, 18]))
          right: (string_literal [263, 21] - [263, 27])))
      (return_statement [264, 1] - [264, 19]
        (identifier [264, 8] - [264, 18]))))
  (function_definition [267, 0] - [272, 1]
    type: (qualified_identifier [267, 0] - [267, 11]
      scope: (namespace_identifier [267, 0] - [267, 3])
      name: (type_identifier [267, 5] - [267, 11]))
    declarator: (function_declarator [267, 12] - [267, 51]
      declarator: (identifier [267, 12] - [267, 32])
      parameters: (parameter_list [267, 32] - [267, 51]
        (parameter_declaration [267, 33] - [267, 50]
          type: (type_identifier [267, 33] - [267, 43])
          declarator: (identifier [267, 44] - [267, 50]))))
    body: (compound_statement [267, 52] - [272, 1]
      (for_statement [268, 1] - [270, 25]
        initializer: (declaration [268, 6] - [268, 16]
          type: (primitive_type [268, 6] - [268, 9])
          declarator: (init_declarator [268, 10] - [268, 15]
            declarator: (identifier [268, 10] - [268, 11])
            value: (number_literal [268, 14] - [268, 15])))
        condition: (binary_expression [268, 17] - [268, 39]
          left: (identifier [268, 17] - [268, 18])
          right: (call_expression [268, 21] - [268, 39]
            function: (field_expression [268, 21] - [268, 37]
              argument: (identifier [268, 21] - [268, 32])
              field: (field_identifier [268, 33] - [268, 37]))
            arguments: (argument_list [268, 37] - [268, 39])))
        update: (update_expression [268, 41] - [268, 44]
          argument: (identifier [268, 41] - [268, 42]))
        (if_statement [269, 2] - [270, 25]
          condition: (condition_clause [269, 5] - [269, 89]
            value: (binary_expression [269, 6] - [269, 88]
              left: (parenthesized_expression [269, 6] - [269, 47]
                (binary_expression [269, 7] - [269, 46]
                  left: (field_expression [269, 7] - [269, 20]
                    argument: (identifier [269, 7] - [269, 13])
                    field: (field_identifier [269, 14] - [269, 20]))
                  right: (field_expression [269, 24] - [269, 46]
                    argument: (subscript_expression [269, 24] - [269, 39]
                      argument: (identifier [269, 24] - [269, 36])
                      index: (identifier [269, 37] - [269, 38]))
                    field: (field_identifier [269, 40] - [269, 46]))))
              right: (parenthesized_expression [269, 51] - [269, 88]
                (binary_expression [269, 52] - [269, 87]
                  left: (field_expression [269, 52] - [269, 63]
                    argument: (identifier [269, 52] - [269, 58])
                    field: (field_identifier [269, 59] - [269, 63]))
                  right: (field_expression [269, 67] - [269, 87]
                    argument: (subscript_expression [269, 67] - [269, 82]
                      argument: (identifier [269, 67] - [269, 79])
                      index: (identifier [269, 80] - [269, 81]))
                    field: (field_identifier [269, 83] - [269, 87]))))))
          consequence: (return_statement [270, 3] - [270, 25]
            (subscript_expression [270, 10] - [270, 24]
              argument: (identifier [270, 10] - [270, 21])
              index: (identifier [270, 22] - [270, 23])))))
      (return_statement [271, 1] - [271, 11]
        (string_literal [271, 8] - [271, 10]))))
  (function_definition [274, 0] - [279, 1]
    type: (qualified_identifier [274, 0] - [274, 11]
      scope: (namespace_identifier [274, 0] - [274, 3])
      name: (type_identifier [274, 5] - [274, 11]))
    declarator: (function_declarator [274, 12] - [274, 44]
      declarator: (identifier [274, 12] - [274, 26])
      parameters: (parameter_list [274, 26] - [274, 44]
        (parameter_declaration [274, 27] - [274, 43]
          type: (qualified_identifier [274, 27] - [274, 38]
            scope: (namespace_identifier [274, 27] - [274, 30])
            name: (type_identifier [274, 32] - [274, 38]))
          declarator: (identifier [274, 39] - [274, 43]))))
    body: (compound_statement [274, 45] - [279, 1]
      (for_range_loop [275, 1] - [277, 25]
        type: (qualified_identifier [275, 6] - [275, 17]
          scope: (namespace_identifier [275, 6] - [275, 9])
          name: (type_identifier [275, 11] - [275, 17]))
        declarator: (identifier [275, 18] - [275, 32])
        right: (identifier [275, 35] - [275, 46])
        body: (if_statement [276, 2] - [277, 25]
          condition: (condition_clause [276, 5] - [276, 36]
            value: (unary_expression [276, 6] - [276, 35]
              argument: (call_expression [276, 7] - [276, 35]
                function: (field_expression [276, 7] - [276, 19]
                  argument: (identifier [276, 7] - [276, 11])
                  field: (field_identifier [276, 12] - [276, 19]))
                arguments: (argument_list [276, 19] - [276, 35]
                  (identifier [276, 20] - [276, 34])))))
          consequence: (return_statement [277, 3] - [277, 25]
            (identifier [277, 10] - [277, 24]))))
      (return_statement [278, 1] - [278, 11]
        (string_literal [278, 8] - [278, 10]))))
  (function_definition [281, 0] - [286, 1]
    type: (primitive_type [281, 0] - [281, 3])
    declarator: (function_declarator [281, 4] - [281, 44]
      declarator: (identifier [281, 4] - [281, 25])
      parameters: (parameter_list [281, 25] - [281, 44]
        (parameter_declaration [281, 26] - [281, 43]
          type: (type_identifier [281, 26] - [281, 36])
          declarator: (identifier [281, 37] - [281, 43]))))
    body: (compound_statement [281, 45] - [286, 1]
      (for_statement [282, 1] - [284, 12]
        initializer: (declaration [282, 6] - [282, 16]
          type: (primitive_type [282, 6] - [282, 9])
          declarator: (init_declarator [282, 10] - [282, 15]
            declarator: (identifier [282, 10] - [282, 11])
            value: (number_literal [282, 14] - [282, 15])))
        condition: (binary_expression [282, 17] - [282, 40]
          left: (identifier [282, 17] - [282, 18])
          right: (call_expression [282, 21] - [282, 40]
            function: (field_expression [282, 21] - [282, 38]
              argument: (identifier [282, 21] - [282, 33])
              field: (field_identifier [282, 34] - [282, 38]))
            arguments: (argument_list [282, 38] - [282, 40])))
        update: (update_expression [282, 42] - [282, 45]
          argument: (identifier [282, 42] - [282, 43]))
        (if_statement [283, 2] - [284, 12]
          condition: (condition_clause [283, 5] - [283, 89]
            value: (binary_expression [283, 6] - [283, 88]
              left: (parenthesized_expression [283, 6] - [283, 47]
                (binary_expression [283, 7] - [283, 46]
                  left: (field_expression [283, 7] - [283, 20]
                    argument: (identifier [283, 7] - [283, 13])
                    field: (field_identifier [283, 14] - [283, 20]))
                  right: (field_expression [283, 24] - [283, 46]
                    argument: (subscript_expression [283, 24] - [283, 39]
                      argument: (identifier [283, 24] - [283, 36])
                      index: (identifier [283, 37] - [283, 38]))
                    field: (field_identifier [283, 40] - [283, 46]))))
              right: (parenthesized_expression [283, 51] - [283, 88]
                (binary_expression [283, 52] - [283, 87]
                  left: (field_expression [283, 52] - [283, 63]
                    argument: (identifier [283, 52] - [283, 58])
                    field: (field_identifier [283, 59] - [283, 63]))
                  right: (field_expression [283, 67] - [283, 87]
                    argument: (subscript_expression [283, 67] - [283, 82]
                      argument: (identifier [283, 67] - [283, 79])
                      index: (identifier [283, 80] - [283, 81]))
                    field: (field_identifier [283, 83] - [283, 87]))))))
          consequence: (return_statement [284, 3] - [284, 12]
            (identifier [284, 10] - [284, 11]))))
      (return_statement [285, 1] - [285, 11]
        (number_literal [285, 8] - [285, 10]))))
  (function_definition [288, 0] - [293, 1]
    type: (primitive_type [288, 0] - [288, 3])
    declarator: (function_declarator [288, 4] - [288, 41]
      declarator: (identifier [288, 4] - [288, 23])
      parameters: (parameter_list [288, 23] - [288, 41]
        (parameter_declaration [288, 24] - [288, 40]
          type: (qualified_identifier [288, 24] - [288, 35]
            scope: (namespace_identifier [288, 24] - [288, 27])
            name: (type_identifier [288, 29] - [288, 35]))
          declarator: (identifier [288, 36] - [288, 40]))))
    body: (compound_statement [288, 42] - [293, 1]
      (for_statement [289, 1] - [291, 12]
        initializer: (declaration [289, 6] - [289, 16]
          type: (primitive_type [289, 6] - [289, 9])
          declarator: (init_declarator [289, 10] - [289, 15]
            declarator: (identifier [289, 10] - [289, 11])
            value: (number_literal [289, 14] - [289, 15])))
        condition: (binary_expression [289, 17] - [289, 39]
          left: (identifier [289, 17] - [289, 18])
          right: (call_expression [289, 21] - [289, 39]
            function: (field_expression [289, 21] - [289, 37]
              argument: (identifier [289, 21] - [289, 32])
              field: (field_identifier [289, 33] - [289, 37]))
            arguments: (argument_list [289, 37] - [289, 39])))
        update: (update_expression [289, 41] - [289, 44]
          argument: (identifier [289, 41] - [289, 42]))
        (if_statement [290, 2] - [291, 12]
          condition: (condition_clause [290, 5] - [290, 36]
            value: (unary_expression [290, 6] - [290, 35]
              argument: (call_expression [290, 7] - [290, 35]
                function: (field_expression [290, 7] - [290, 19]
                  argument: (identifier [290, 7] - [290, 11])
                  field: (field_identifier [290, 12] - [290, 19]))
                arguments: (argument_list [290, 19] - [290, 35]
                  (subscript_expression [290, 20] - [290, 34]
                    argument: (identifier [290, 20] - [290, 31])
                    index: (identifier [290, 32] - [290, 33]))))))
          consequence: (return_statement [291, 3] - [291, 12]
            (identifier [291, 10] - [291, 11]))))
      (return_statement [292, 1] - [292, 11]
        (number_literal [292, 8] - [292, 10]))))
  (function_definition [295, 0] - [304, 1]
    type: (primitive_type [295, 0] - [295, 4])
    declarator: (function_declarator [295, 5] - [295, 56]
      declarator: (identifier [295, 5] - [295, 19])
      parameters: (parameter_list [295, 19] - [295, 56]
        (parameter_declaration [295, 20] - [295, 36]
          type: (qualified_identifier [295, 20] - [295, 31]
            scope: (namespace_identifier [295, 20] - [295, 23])
            name: (type_identifier [295, 25] - [295, 31]))
          declarator: (identifier [295, 32] - [295, 36]))
        (parameter_declaration [295, 38] - [295, 55]
          type: (type_identifier [295, 38] - [295, 48])
          declarator: (identifier [295, 49] - [295, 55]))))
    body: (compound_statement [295, 57] - [304, 1]
      (if_statement [296, 1] - [300, 2]
        condition: (condition_clause [296, 4] - [296, 39]
          value: (unary_expression [296, 5] - [296, 38]
            argument: (call_expression [296, 6] - [296, 38]
              function: (field_expression [296, 6] - [296, 34]
                argument: (call_expression [296, 6] - [296, 26]
                  function: (identifier [296, 6] - [296, 20])
                  arguments: (argument_list [296, 20] - [296, 26]
                    (identifier [296, 21] - [296, 25])))
                field: (field_identifier [296, 27] - [296, 34]))
              arguments: (argument_list [296, 34] - [296, 38]
                (string_literal [296, 35] - [296, 37])))))
        consequence: (compound_statement [297, 1] - [300, 2]
          (expression_statement [298, 2] - [298, 30]
            (call_expression [298, 2] - [298, 29]
              function: (field_expression [298, 2] - [298, 23]
                argument: (identifier [298, 2] - [298, 13])
                field: (field_identifier [298, 14] - [298, 23]))
              arguments: (argument_list [298, 23] - [298, 29]
                (identifier [298, 24] - [298, 28]))))
          (expression_statement [299, 2] - [299, 33]
            (call_expression [299, 2] - [299, 32]
              function: (field_expression [299, 2] - [299, 24]
                argument: (identifier [299, 2] - [299, 14])
                field: (field_identifier [299, 15] - [299, 24]))
              arguments: (argument_list [299, 24] - [299, 32]
                (identifier [299, 25] - [299, 31]))))))
      (preproc_ifdef [301, 0] - [303, 6]
        name: (identifier [301, 7] - [301, 28])
        (expression_statement [302, 1] - [302, 114]
          (call_expression [302, 1] - [302, 113]
            function: (identifier [302, 1] - [302, 17])
            arguments: (argument_list [302, 17] - [302, 113]
              (string_literal [302, 18] - [302, 62]
                (escape_sequence [302, 59] - [302, 61]))
              (call_expression [302, 64] - [302, 76]
                function: (field_expression [302, 64] - [302, 74]
                  argument: (identifier [302, 64] - [302, 68])
                  field: (field_identifier [302, 69] - [302, 74]))
                arguments: (argument_list [302, 74] - [302, 76]))
              (call_expression [302, 78] - [302, 99]
                function: (field_expression [302, 78] - [302, 97]
                  argument: (field_expression [302, 78] - [302, 91]
                    argument: (identifier [302, 78] - [302, 84])
                    field: (field_identifier [302, 85] - [302, 91]))
                  field: (field_identifier [302, 92] - [302, 97]))
                arguments: (argument_list [302, 97] - [302, 99]))
              (field_expression [302, 101] - [302, 112]
                argument: (identifier [302, 101] - [302, 107])
                field: (field_identifier [302, 108] - [302, 112]))))))
      (comment [303, 7] - [303, 31])))
  (function_definition [306, 0] - [311, 1]
    type: (primitive_type [306, 0] - [306, 4])
    declarator: (function_declarator [306, 5] - [306, 58]
      declarator: (identifier [306, 5] - [306, 21])
      parameters: (parameter_list [306, 21] - [306, 58]
        (parameter_declaration [306, 22] - [306, 38]
          type: (qualified_identifier [306, 22] - [306, 33]
            scope: (namespace_identifier [306, 22] - [306, 25])
            name: (type_identifier [306, 27] - [306, 33]))
          declarator: (identifier [306, 34] - [306, 38]))
        (parameter_declaration [306, 40] - [306, 57]
          type: (type_identifier [306, 40] - [306, 50])
          declarator: (identifier [306, 51] - [306, 57]))))
    body: (compound_statement [306, 59] - [311, 1]
      (for_statement [307, 1] - [309, 15]
        initializer: (declaration [307, 6] - [307, 16]
          type: (primitive_type [307, 6] - [307, 9])
          declarator: (init_declarator [307, 10] - [307, 15]
            declarator: (identifier [307, 10] - [307, 11])
            value: (number_literal [307, 14] - [307, 15])))
        condition: (binary_expression [307, 17] - [307, 39]
          left: (identifier [307, 17] - [307, 18])
          right: (call_expression [307, 21] - [307, 39]
            function: (field_expression [307, 21] - [307, 37]
              argument: (identifier [307, 21] - [307, 32])
              field: (field_identifier [307, 33] - [307, 37]))
            arguments: (argument_list [307, 37] - [307, 39])))
        update: (update_expression [307, 41] - [307, 44]
          argument: (identifier [307, 41] - [307, 42]))
        (if_statement [308, 2] - [309, 15]
          condition: (condition_clause [308, 5] - [308, 121]
            value: (binary_expression [308, 6] - [308, 120]
              left: (binary_expression [308, 6] - [308, 79]
                left: (parenthesized_expression [308, 6] - [308, 37]
                  (unary_expression [308, 7] - [308, 36]
                    argument: (call_expression [308, 8] - [308, 36]
                      function: (field_expression [308, 8] - [308, 20]
                        argument: (identifier [308, 8] - [308, 12])
                        field: (field_identifier [308, 13] - [308, 20]))
                      arguments: (argument_list [308, 20] - [308, 36]
                        (subscript_expression [308, 21] - [308, 35]
                          argument: (identifier [308, 21] - [308, 32])
                          index: (identifier [308, 33] - [308, 34]))))))
                right: (parenthesized_expression [308, 39] - [308, 79]
                  (binary_expression [308, 40] - [308, 78]
                    left: (field_expression [308, 40] - [308, 62]
                      argument: (subscript_expression [308, 40] - [308, 55]
                        argument: (identifier [308, 40] - [308, 52])
                        index: (identifier [308, 53] - [308, 54]))
                      field: (field_identifier [308, 56] - [308, 62]))
                    right: (field_expression [308, 65] - [308, 78]
                      argument: (identifier [308, 65] - [308, 71])
                      field: (field_identifier [308, 72] - [308, 78])))))
              right: (parenthesized_expression [308, 83] - [308, 120]
                (binary_expression [308, 84] - [308, 119]
                  left: (field_expression [308, 84] - [308, 104]
                    argument: (subscript_expression [308, 84] - [308, 99]
                      argument: (identifier [308, 84] - [308, 96])
                      index: (identifier [308, 97] - [308, 98]))
                    field: (field_identifier [308, 100] - [308, 104]))
                  right: (field_expression [308, 108] - [308, 119]
                    argument: (identifier [308, 108] - [308, 114])
                    field: (field_identifier [308, 115] - [308, 119]))))))
          consequence: (return_statement [309, 3] - [309, 15]
            (true [309, 10] - [309, 14]))))
      (return_statement [310, 1] - [310, 14]
        (false [310, 8] - [310, 13]))))
  (function_definition [313, 0] - [323, 1]
    type: (type_identifier [313, 0] - [313, 10])
    declarator: (function_declarator [313, 11] - [313, 42]
      declarator: (identifier [313, 11] - [313, 23])
      parameters: (parameter_list [313, 23] - [313, 42]
        (parameter_declaration [313, 24] - [313, 41]
          type: (type_identifier [313, 24] - [313, 34])
          declarator: (identifier [313, 35] - [313, 41]))))
    body: (compound_statement [313, 43] - [323, 1]
      (for_statement [314, 1] - [316, 29]
        initializer: (declaration [314, 6] - [314, 16]
          type: (primitive_type [314, 6] - [314, 9])
          declarator: (init_declarator [314, 10] - [314, 15]
            declarator: (identifier [314, 10] - [314, 11])
            value: (number_literal [314, 14] - [314, 15])))
        condition: (binary_expression [314, 17] - [314, 42]
          left: (identifier [314, 17] - [314, 18])
          right: (call_expression [314, 21] - [314, 42]
            function: (field_expression [314, 21] - [314, 40]
              argument: (identifier [314, 21] - [314, 35])
              field: (field_identifier [314, 36] - [314, 40]))
            arguments: (argument_list [314, 40] - [314, 42])))
        update: (update_expression [314, 44] - [314, 47]
          argument: (identifier [314, 44] - [314, 45]))
        (if_statement [315, 2] - [316, 29]
          condition: (condition_clause [315, 5] - [315, 91]
            value: (binary_expression [315, 6] - [315, 90]
              left: (parenthesized_expression [315, 6] - [315, 48]
                (binary_expression [315, 7] - [315, 47]
                  left: (field_expression [315, 7] - [315, 31]
                    argument: (subscript_expression [315, 7] - [315, 24]
                      argument: (identifier [315, 7] - [315, 21])
                      index: (identifier [315, 22] - [315, 23]))
                    field: (field_identifier [315, 25] - [315, 31]))
                  right: (field_expression [315, 34] - [315, 47]
                    argument: (identifier [315, 34] - [315, 40])
                    field: (field_identifier [315, 41] - [315, 47]))))
              right: (parenthesized_expression [315, 51] - [315, 90]
                (binary_expression [315, 52] - [315, 89]
                  left: (field_expression [315, 52] - [315, 74]
                    argument: (subscript_expression [315, 52] - [315, 69]
                      argument: (identifier [315, 52] - [315, 66])
                      index: (identifier [315, 67] - [315, 68]))
                    field: (field_identifier [315, 70] - [315, 74]))
                  right: (field_expression [315, 78] - [315, 89]
                    argument: (identifier [315, 78] - [315, 84])
                    field: (field_identifier [315, 85] - [315, 89]))))))
          consequence: (return_statement [316, 3] - [316, 29]
            (subscript_expression [316, 10] - [316, 28]
              argument: (identifier [316, 10] - [316, 25])
              index: (identifier [316, 26] - [316, 27])))))
      (for_statement [317, 1] - [319, 28]
        initializer: (declaration [317, 6] - [317, 16]
          type: (primitive_type [317, 6] - [317, 9])
          declarator: (init_declarator [317, 10] - [317, 15]
            declarator: (identifier [317, 10] - [317, 11])
            value: (number_literal [317, 14] - [317, 15])))
        condition: (binary_expression [317, 17] - [317, 43]
          left: (identifier [317, 17] - [317, 18])
          right: (call_expression [317, 21] - [317, 43]
            function: (field_expression [317, 21] - [317, 41]
              argument: (identifier [317, 21] - [317, 36])
              field: (field_identifier [317, 37] - [317, 41]))
            arguments: (argument_list [317, 41] - [317, 43])))
        update: (update_expression [317, 45] - [317, 48]
          argument: (identifier [317, 45] - [317, 46]))
        (if_statement [318, 2] - [319, 28]
          condition: (condition_clause [318, 5] - [318, 94]
            value: (binary_expression [318, 6] - [318, 93]
              left: (parenthesized_expression [318, 6] - [318, 50]
                (binary_expression [318, 7] - [318, 49]
                  left: (field_expression [318, 7] - [318, 32]
                    argument: (subscript_expression [318, 7] - [318, 25]
                      argument: (identifier [318, 7] - [318, 22])
                      index: (identifier [318, 23] - [318, 24]))
                    field: (field_identifier [318, 26] - [318, 32]))
                  right: (field_expression [318, 36] - [318, 49]
                    argument: (identifier [318, 36] - [318, 42])
                    field: (field_identifier [318, 43] - [318, 49]))))
              right: (parenthesized_expression [318, 53] - [318, 93]
                (binary_expression [318, 54] - [318, 92]
                  left: (field_expression [318, 54] - [318, 77]
                    argument: (subscript_expression [318, 54] - [318, 72]
                      argument: (identifier [318, 54] - [318, 69])
                      index: (identifier [318, 70] - [318, 71]))
                    field: (field_identifier [318, 73] - [318, 77]))
                  right: (field_expression [318, 81] - [318, 92]
                    argument: (identifier [318, 81] - [318, 87])
                    field: (field_identifier [318, 88] - [318, 92]))))))
          consequence: (return_statement [319, 3] - [319, 28]
            (subscript_expression [319, 10] - [319, 27]
              argument: (identifier [319, 10] - [319, 24])
              index: (identifier [319, 25] - [319, 26])))))
      (declaration [320, 1] - [320, 23]
        type: (type_identifier [320, 1] - [320, 11])
        declarator: (identifier [320, 12] - [320, 22]))
      (expression_statement [321, 1] - [321, 29]
        (assignment_expression [321, 1] - [321, 28]
          left: (field_expression [321, 1] - [321, 18]
            argument: (identifier [321, 1] - [321, 11])
            field: (field_identifier [321, 12] - [321, 18]))
          right: (string_literal [321, 21] - [321, 28])))
      (return_statement [322, 1] - [322, 19]
        (identifier [322, 8] - [322, 18]))))
  (function_definition [325, 0] - [330, 1]
    type: (qualified_identifier [325, 0] - [325, 11]
      scope: (namespace_identifier [325, 0] - [325, 3])
      name: (type_identifier [325, 5] - [325, 11]))
    declarator: (function_declarator [325, 12] - [325, 46]
      declarator: (identifier [325, 12] - [325, 28])
      parameters: (parameter_list [325, 28] - [325, 46]
        (parameter_declaration [325, 29] - [325, 45]
          type: (qualified_identifier [325, 29] - [325, 40]
            scope: (namespace_identifier [325, 29] - [325, 32])
            name: (type_identifier [325, 34] - [325, 40]))
          declarator: (identifier [325, 41] - [325, 45]))))
    body: (compound_statement [325, 47] - [330, 1]
      (for_range_loop [326, 1] - [328, 24]
        type: (qualified_identifier [326, 6] - [326, 17]
          scope: (namespace_identifier [326, 6] - [326, 9])
          name: (type_identifier [326, 11] - [326, 17]))
        declarator: (identifier [326, 18] - [326, 31])
        right: (identifier [326, 34] - [326, 44])
        body: (if_statement [327, 2] - [328, 24]
          condition: (condition_clause [327, 5] - [327, 35]
            value: (unary_expression [327, 6] - [327, 34]
              argument: (call_expression [327, 7] - [327, 34]
                function: (field_expression [327, 7] - [327, 19]
                  argument: (identifier [327, 7] - [327, 11])
                  field: (field_identifier [327, 12] - [327, 19]))
                arguments: (argument_list [327, 19] - [327, 34]
                  (identifier [327, 20] - [327, 33])))))
          consequence: (return_statement [328, 3] - [328, 24]
            (identifier [328, 10] - [328, 23]))))
      (return_statement [329, 1] - [329, 11]
        (string_literal [329, 8] - [329, 10]))))
  (function_definition [332, 0] - [337, 1]
    type: (primitive_type [332, 0] - [332, 3])
    declarator: (function_declarator [332, 4] - [332, 40]
      declarator: (identifier [332, 4] - [332, 22])
      parameters: (parameter_list [332, 22] - [332, 40]
        (parameter_declaration [332, 23] - [332, 39]
          type: (qualified_identifier [332, 23] - [332, 34]
            scope: (namespace_identifier [332, 23] - [332, 26])
            name: (type_identifier [332, 28] - [332, 34]))
          declarator: (identifier [332, 35] - [332, 39]))))
    body: (compound_statement [332, 41] - [337, 1]
      (for_statement [333, 1] - [335, 12]
        initializer: (declaration [333, 6] - [333, 16]
          type: (primitive_type [333, 6] - [333, 9])
          declarator: (init_declarator [333, 10] - [333, 15]
            declarator: (identifier [333, 10] - [333, 11])
            value: (number_literal [333, 14] - [333, 15])))
        condition: (binary_expression [333, 17] - [333, 38]
          left: (identifier [333, 17] - [333, 18])
          right: (call_expression [333, 21] - [333, 38]
            function: (field_expression [333, 21] - [333, 36]
              argument: (identifier [333, 21] - [333, 31])
              field: (field_identifier [333, 32] - [333, 36]))
            arguments: (argument_list [333, 36] - [333, 38])))
        update: (update_expression [333, 40] - [333, 43]
          argument: (identifier [333, 40] - [333, 41]))
        (if_statement [334, 2] - [335, 12]
          condition: (condition_clause [334, 5] - [334, 35]
            value: (unary_expression [334, 6] - [334, 34]
              argument: (call_expression [334, 7] - [334, 34]
                function: (field_expression [334, 7] - [334, 19]
                  argument: (identifier [334, 7] - [334, 11])
                  field: (field_identifier [334, 12] - [334, 19]))
                arguments: (argument_list [334, 19] - [334, 34]
                  (subscript_expression [334, 20] - [334, 33]
                    argument: (identifier [334, 20] - [334, 30])
                    index: (identifier [334, 31] - [334, 32]))))))
          consequence: (return_statement [335, 3] - [335, 12]
            (identifier [335, 10] - [335, 11]))))
      (return_statement [336, 1] - [336, 11]
        (number_literal [336, 8] - [336, 10]))))
  (function_definition [339, 0] - [344, 1]
    type: (primitive_type [339, 0] - [339, 3])
    declarator: (function_declarator [339, 4] - [339, 41]
      declarator: (identifier [339, 4] - [339, 23])
      parameters: (parameter_list [339, 23] - [339, 41]
        (parameter_declaration [339, 24] - [339, 40]
          type: (qualified_identifier [339, 24] - [339, 35]
            scope: (namespace_identifier [339, 24] - [339, 27])
            name: (type_identifier [339, 29] - [339, 35]))
          declarator: (identifier [339, 36] - [339, 40]))))
    body: (compound_statement [339, 42] - [344, 1]
      (for_statement [340, 1] - [342, 12]
        initializer: (declaration [340, 6] - [340, 16]
          type: (primitive_type [340, 6] - [340, 9])
          declarator: (init_declarator [340, 10] - [340, 15]
            declarator: (identifier [340, 10] - [340, 11])
            value: (number_literal [340, 14] - [340, 15])))
        condition: (binary_expression [340, 17] - [340, 39]
          left: (identifier [340, 17] - [340, 18])
          right: (call_expression [340, 21] - [340, 39]
            function: (field_expression [340, 21] - [340, 37]
              argument: (identifier [340, 21] - [340, 32])
              field: (field_identifier [340, 33] - [340, 37]))
            arguments: (argument_list [340, 37] - [340, 39])))
        update: (update_expression [340, 41] - [340, 44]
          argument: (identifier [340, 41] - [340, 42]))
        (if_statement [341, 2] - [342, 12]
          condition: (condition_clause [341, 5] - [341, 36]
            value: (unary_expression [341, 6] - [341, 35]
              argument: (call_expression [341, 7] - [341, 35]
                function: (field_expression [341, 7] - [341, 19]
                  argument: (identifier [341, 7] - [341, 11])
                  field: (field_identifier [341, 12] - [341, 19]))
                arguments: (argument_list [341, 19] - [341, 35]
                  (subscript_expression [341, 20] - [341, 34]
                    argument: (identifier [341, 20] - [341, 31])
                    index: (identifier [341, 32] - [341, 33]))))))
          consequence: (return_statement [342, 3] - [342, 12]
            (identifier [342, 10] - [342, 11]))))
      (return_statement [343, 1] - [343, 11]
        (number_literal [343, 8] - [343, 10]))))
  (function_definition [346, 0] - [358, 1]
    type: (primitive_type [346, 0] - [346, 4])
    declarator: (function_declarator [346, 5] - [346, 37]
      declarator: (identifier [346, 5] - [346, 18])
      parameters: (parameter_list [346, 18] - [346, 37]
        (parameter_declaration [346, 19] - [346, 36]
          type: (type_identifier [346, 19] - [346, 24])
          declarator: (pointer_declarator [346, 24] - [346, 36]
            declarator: (identifier [346, 26] - [346, 36])))))
    body: (compound_statement [346, 38] - [358, 1]
      (comment [346, 39] - [346, 47])
      (comment [347, 1] - [347, 41])
      (if_statement [348, 2] - [357, 3]
        condition: (condition_clause [348, 5] - [348, 65]
          value: (unary_expression [348, 6] - [348, 64]
            argument: (call_expression [348, 7] - [348, 64]
              function: (field_expression [348, 7] - [348, 60]
                argument: (call_expression [348, 7] - [348, 52]
                  function: (identifier [348, 7] - [348, 23])
                  arguments: (argument_list [348, 23] - [348, 52]
                    (field_expression [348, 24] - [348, 51]
                      argument: (identifier [348, 24] - [348, 34])
                      field: (field_identifier [348, 36] - [348, 51]))))
                field: (field_identifier [348, 53] - [348, 60]))
              arguments: (argument_list [348, 60] - [348, 64]
                (string_literal [348, 61] - [348, 63])))))
        consequence: (compound_statement [349, 2] - [357, 3]
          (expression_statement [350, 3] - [350, 53]
            (call_expression [350, 3] - [350, 52]
              function: (field_expression [350, 3] - [350, 23]
                argument: (identifier [350, 3] - [350, 13])
                field: (field_identifier [350, 14] - [350, 23]))
              arguments: (argument_list [350, 23] - [350, 52]
                (field_expression [350, 24] - [350, 51]
                  argument: (identifier [350, 24] - [350, 34])
                  field: (field_identifier [350, 36] - [350, 51])))))
          (expression_statement [351, 3] - [351, 76]
            (call_expression [351, 3] - [351, 75]
              function: (field_expression [351, 3] - [351, 27]
                argument: (identifier [351, 3] - [351, 17])
                field: (field_identifier [351, 18] - [351, 27]))
              arguments: (argument_list [351, 27] - [351, 75]
                (call_expression [351, 28] - [351, 74]
                  function: (identifier [351, 28] - [351, 45])
                  arguments: (argument_list [351, 45] - [351, 74]
                    (field_expression [351, 46] - [351, 73]
                      argument: (identifier [351, 46] - [351, 56])
                      field: (field_identifier [351, 58] - [351, 73])))))))
          (expression_statement [352, 3] - [352, 50]
            (call_expression [352, 3] - [352, 49]
              function: (field_expression [352, 3] - [352, 24]
                argument: (identifier [352, 3] - [352, 14])
                field: (field_identifier [352, 15] - [352, 24]))
              arguments: (argument_list [352, 24] - [352, 49]
                (field_expression [352, 25] - [352, 48]
                  argument: (identifier [352, 25] - [352, 35])
                  field: (field_identifier [352, 37] - [352, 48])))))
          (expression_statement [353, 3] - [353, 73]
            (call_expression [353, 3] - [353, 72]
              function: (field_expression [353, 3] - [353, 28]
                argument: (identifier [353, 3] - [353, 18])
                field: (field_identifier [353, 19] - [353, 28]))
              arguments: (argument_list [353, 28] - [353, 72]
                (call_expression [353, 29] - [353, 71]
                  function: (identifier [353, 29] - [353, 46])
                  arguments: (argument_list [353, 46] - [353, 71]
                    (field_expression [353, 47] - [353, 70]
                      argument: (identifier [353, 47] - [353, 57])
                      field: (field_identifier [353, 59] - [353, 70])))))))
          (preproc_ifdef [354, 2] - [356, 8]
            name: (identifier [354, 9] - [354, 30])
            (expression_statement [355, 3] - [355, 119]
              (call_expression [355, 3] - [355, 118]
                function: (identifier [355, 3] - [355, 19])
                arguments: (argument_list [355, 19] - [355, 118]
                  (string_literal [355, 20] - [355, 63]
                    (escape_sequence [355, 60] - [355, 62]))
                  (field_expression [355, 65] - [355, 92]
                    argument: (identifier [355, 65] - [355, 75])
                    field: (field_identifier [355, 77] - [355, 92]))
                  (field_expression [355, 94] - [355, 117]
                    argument: (identifier [355, 94] - [355, 104])
                    field: (field_identifier [355, 106] - [355, 117]))))))
          (comment [356, 9] - [356, 33])))))
  (function_definition [360, 0] - [376, 1]
    type: (primitive_type [360, 0] - [360, 4])
    declarator: (function_declarator [360, 5] - [360, 51]
      declarator: (identifier [360, 5] - [360, 19])
      parameters: (parameter_list [360, 19] - [360, 51]
        (parameter_declaration [360, 20] - [360, 50]
          (type_qualifier [360, 20] - [360, 25])
          type: (type_identifier [360, 26] - [360, 38])
          declarator: (pointer_declarator [360, 38] - [360, 50]
            declarator: (identifier [360, 40] - [360, 50])))))
    body: (compound_statement [360, 51] - [376, 1]
      (declaration [361, 1] - [361, 65]
        type: (type_identifier [361, 1] - [361, 11])
        declarator: (init_declarator [361, 12] - [361, 64]
          declarator: (identifier [361, 12] - [361, 15])
          value: (call_expression [361, 18] - [361, 64]
            function: (identifier [361, 18] - [361, 35])
            arguments: (argument_list [361, 35] - [361, 64]
              (field_expression [361, 36] - [361, 63]
                argument: (identifier [361, 36] - [361, 46])
                field: (field_identifier [361, 48] - [361, 63]))))))
      (if_statement [362, 1] - [362, 37]
        condition: (condition_clause [362, 3] - [362, 23]
          value: (binary_expression [362, 4] - [362, 22]
            left: (field_expression [362, 4] - [362, 14]
              argument: (identifier [362, 4] - [362, 7])
              field: (field_identifier [362, 8] - [362, 14]))
            right: (string_literal [362, 16] - [362, 22])))
        consequence: (return_statement [362, 24] - [362, 37]
          (false [362, 31] - [362, 36])))
      (declaration [363, 1] - [363, 61]
        type: (type_identifier [363, 1] - [363, 11])
        declarator: (init_declarator [363, 12] - [363, 60]
          declarator: (identifier [363, 12] - [363, 15])
          value: (call_expression [363, 18] - [363, 60]
            function: (identifier [363, 18] - [363, 35])
            arguments: (argument_list [363, 35] - [363, 60]
              (field_expression [363, 36] - [363, 59]
                argument: (identifier [363, 36] - [363, 46])
                field: (field_identifier [363, 48] - [363, 59]))))))
      (if_statement [364, 1] - [364, 40]
        condition: (condition_clause [364, 4] - [364, 26]
          value: (binary_expression [364, 5] - [364, 25]
            left: (field_expression [364, 5] - [364, 15]
              argument: (identifier [364, 5] - [364, 8])
              field: (field_identifier [364, 9] - [364, 15]))
            right: (string_literal [364, 19] - [364, 25])))
        consequence: (return_statement [364, 27] - [364, 40]
          (false [364, 34] - [364, 39])))
      (comment [365, 1] - [365, 10])
      (declaration [366, 1] - [366, 59]
        type: (primitive_type [366, 1] - [366, 4])
        declarator: (init_declarator [366, 5] - [366, 58]
          declarator: (identifier [366, 5] - [366, 12])
          value: (call_expression [366, 15] - [366, 58]
            function: (identifier [366, 15] - [366, 33])
            arguments: (argument_list [366, 33] - [366, 58]
              (field_expression [366, 34] - [366, 57]
                argument: (identifier [366, 34] - [366, 44])
                field: (field_identifier [366, 46] - [366, 57]))))))
      (if_statement [367, 1] - [367, 33]
        condition: (condition_clause [367, 4] - [367, 19]
          value: (binary_expression [367, 5] - [367, 18]
            left: (identifier [367, 5] - [367, 12])
            right: (number_literal [367, 16] - [367, 18])))
        consequence: (return_statement [367, 20] - [367, 33]
          (false [367, 27] - [367, 32])))
      (comment [368, 1] - [368, 54])
      (expression_statement [369, 1] - [369, 31]
        (assignment_expression [369, 1] - [369, 30]
          left: (subscript_expression [369, 1] - [369, 24]
            argument: (identifier [369, 1] - [369, 15])
            index: (identifier [369, 16] - [369, 23]))
          right: (identifier [369, 27] - [369, 30])))
      (comment [370, 1] - [370, 50])
      (expression_statement [371, 1] - [371, 32]
        (assignment_expression [371, 1] - [371, 31]
          left: (subscript_expression [371, 1] - [371, 25]
            argument: (identifier [371, 1] - [371, 16])
            index: (identifier [371, 17] - [371, 24]))
          right: (identifier [371, 28] - [371, 31])))
      (preproc_ifdef [372, 0] - [374, 6]
        name: (identifier [372, 7] - [372, 28])
        (expression_statement [373, 1] - [373, 119]
          (call_expression [373, 1] - [373, 118]
            function: (identifier [373, 1] - [373, 17])
            arguments: (argument_list [373, 17] - [373, 118]
              (string_literal [373, 18] - [373, 49]
                (escape_sequence [373, 46] - [373, 48]))
              (field_expression [373, 51] - [373, 78]
                argument: (identifier [373, 51] - [373, 61])
                field: (field_identifier [373, 63] - [373, 78]))
              (identifier [373, 80] - [373, 87])
              (field_expression [373, 89] - [373, 112]
                argument: (identifier [373, 89] - [373, 99])
                field: (field_identifier [373, 101] - [373, 112]))
              (identifier [373, 114] - [373, 117])))))
      (comment [374, 7] - [374, 31])
      (return_statement [375, 1] - [375, 13]
        (true [375, 8] - [375, 12]))))
  (function_definition [378, 0] - [395, 1]
    type: (primitive_type [378, 0] - [378, 4])
    declarator: (function_declarator [378, 5] - [378, 50]
      declarator: (identifier [378, 5] - [378, 18])
      parameters: (parameter_list [378, 18] - [378, 50]
        (parameter_declaration [378, 19] - [378, 49]
          (type_qualifier [378, 19] - [378, 24])
          type: (type_identifier [378, 25] - [378, 37])
          declarator: (pointer_declarator [378, 37] - [378, 49]
            declarator: (identifier [378, 39] - [378, 49])))))
    body: (compound_statement [378, 51] - [395, 1]
      (declaration [379, 1] - [379, 65]
        type: (type_identifier [379, 1] - [379, 11])
        declarator: (init_declarator [379, 12] - [379, 64]
          declarator: (identifier [379, 12] - [379, 15])
          value: (call_expression [379, 18] - [379, 64]
            function: (identifier [379, 18] - [379, 35])
            arguments: (argument_list [379, 35] - [379, 64]
              (field_expression [379, 36] - [379, 63]
                argument: (identifier [379, 36] - [379, 46])
                field: (field_identifier [379, 48] - [379, 63]))))))
      (if_statement [380, 1] - [380, 40]
        condition: (condition_clause [380, 4] - [380, 26]
          value: (binary_expression [380, 5] - [380, 25]
            left: (field_expression [380, 5] - [380, 15]
              argument: (identifier [380, 5] - [380, 8])
              field: (field_identifier [380, 9] - [380, 15]))
            right: (string_literal [380, 19] - [380, 25])))
        consequence: (return_statement [380, 27] - [380, 40]
          (false [380, 34] - [380, 39])))
      (declaration [381, 1] - [381, 61]
        type: (type_identifier [381, 1] - [381, 11])
        declarator: (init_declarator [381, 12] - [381, 60]
          declarator: (identifier [381, 12] - [381, 15])
          value: (call_expression [381, 18] - [381, 60]
            function: (identifier [381, 18] - [381, 35])
            arguments: (argument_list [381, 35] - [381, 60]
              (field_expression [381, 36] - [381, 59]
                argument: (identifier [381, 36] - [381, 46])
                field: (field_identifier [381, 48] - [381, 59]))))))
      (if_statement [382, 1] - [382, 40]
        condition: (condition_clause [382, 4] - [382, 26]
          value: (binary_expression [382, 5] - [382, 25]
            left: (field_expression [382, 5] - [382, 15]
              argument: (identifier [382, 5] - [382, 8])
              field: (field_identifier [382, 9] - [382, 15]))
            right: (string_literal [382, 19] - [382, 25])))
        consequence: (return_statement [382, 27] - [382, 40]
          (false [382, 34] - [382, 39])))
      (comment [383, 1] - [383, 10])
      (declaration [384, 1] - [384, 59]
        type: (primitive_type [384, 1] - [384, 4])
        declarator: (init_declarator [384, 5] - [384, 58]
          declarator: (identifier [384, 5] - [384, 12])
          value: (call_expression [384, 15] - [384, 58]
            function: (identifier [384, 15] - [384, 33])
            arguments: (argument_list [384, 33] - [384, 58]
              (field_expression [384, 34] - [384, 57]
                argument: (identifier [384, 34] - [384, 44])
                field: (field_identifier [384, 46] - [384, 57]))))))
      (if_statement [385, 1] - [385, 33]
        condition: (condition_clause [385, 4] - [385, 19]
          value: (binary_expression [385, 5] - [385, 18]
            left: (identifier [385, 5] - [385, 12])
            right: (number_literal [385, 16] - [385, 18])))
        consequence: (return_statement [385, 20] - [385, 33]
          (false [385, 27] - [385, 32])))
      (if_statement [386, 1] - [387, 15]
        condition: (condition_clause [386, 4] - [386, 56]
          value: (binary_expression [386, 5] - [386, 55]
            left: (subscript_expression [386, 5] - [386, 24]
              argument: (identifier [386, 5] - [386, 15])
              index: (identifier [386, 16] - [386, 23]))
            right: (field_expression [386, 28] - [386, 55]
              argument: (identifier [386, 28] - [386, 38])
              field: (field_identifier [386, 40] - [386, 55]))))
        consequence: (return_statement [387, 2] - [387, 15]
          (false [387, 9] - [387, 14])))
      (if_statement [388, 1] - [389, 15]
        condition: (condition_clause [388, 4] - [388, 97]
          value: (binary_expression [388, 5] - [388, 96]
            left: (parenthesized_expression [388, 5] - [388, 51]
              (binary_expression [388, 6] - [388, 50]
                left: (field_expression [388, 6] - [388, 36]
                  argument: (subscript_expression [388, 6] - [388, 29]
                    argument: (identifier [388, 6] - [388, 20])
                    index: (identifier [388, 21] - [388, 28]))
                  field: (field_identifier [388, 30] - [388, 36]))
                right: (field_expression [388, 40] - [388, 50]
                  argument: (identifier [388, 40] - [388, 43])
                  field: (field_identifier [388, 44] - [388, 50]))))
            right: (parenthesized_expression [388, 54] - [388, 96]
              (binary_expression [388, 55] - [388, 95]
                left: (field_expression [388, 55] - [388, 83]
                  argument: (subscript_expression [388, 55] - [388, 78]
                    argument: (identifier [388, 55] - [388, 69])
                    index: (identifier [388, 70] - [388, 77]))
                  field: (field_identifier [388, 79] - [388, 83]))
                right: (field_expression [388, 87] - [388, 95]
                  argument: (identifier [388, 87] - [388, 90])
                  field: (field_identifier [388, 91] - [388, 95]))))))
        consequence: (return_statement [389, 2] - [389, 15]
          (false [389, 9] - [389, 14])))
      (if_statement [390, 1] - [391, 15]
        condition: (condition_clause [390, 4] - [390, 53]
          value: (binary_expression [390, 5] - [390, 52]
            left: (subscript_expression [390, 5] - [390, 25]
              argument: (identifier [390, 5] - [390, 16])
              index: (identifier [390, 17] - [390, 24]))
            right: (field_expression [390, 29] - [390, 52]
              argument: (identifier [390, 29] - [390, 39])
              field: (field_identifier [390, 41] - [390, 52]))))
        consequence: (return_statement [391, 2] - [391, 15]
          (false [391, 9] - [391, 14])))
      (if_statement [392, 1] - [393, 15]
        condition: (condition_clause [392, 4] - [392, 100]
          value: (binary_expression [392, 5] - [392, 99]
            left: (parenthesized_expression [392, 5] - [392, 52]
              (binary_expression [392, 6] - [392, 51]
                left: (field_expression [392, 6] - [392, 37]
                  argument: (subscript_expression [392, 6] - [392, 30]
                    argument: (identifier [392, 6] - [392, 21])
                    index: (identifier [392, 22] - [392, 29]))
                  field: (field_identifier [392, 31] - [392, 37]))
                right: (field_expression [392, 41] - [392, 51]
                  argument: (identifier [392, 41] - [392, 44])
                  field: (field_identifier [392, 45] - [392, 51]))))
            right: (parenthesized_expression [392, 56] - [392, 99]
              (binary_expression [392, 57] - [392, 98]
                left: (field_expression [392, 57] - [392, 86]
                  argument: (subscript_expression [392, 57] - [392, 81]
                    argument: (identifier [392, 57] - [392, 72])
                    index: (identifier [392, 73] - [392, 80]))
                  field: (field_identifier [392, 82] - [392, 86]))
                right: (field_expression [392, 90] - [392, 98]
                  argument: (identifier [392, 90] - [392, 93])
                  field: (field_identifier [392, 94] - [392, 98]))))))
        consequence: (return_statement [393, 2] - [393, 15]
          (false [393, 9] - [393, 14])))
      (return_statement [394, 1] - [394, 13]
        (true [394, 8] - [394, 12]))))
  (function_definition [397, 0] - [408, 1]
    type: (primitive_type [397, 0] - [397, 4])
    declarator: (function_declarator [397, 5] - [397, 39]
      declarator: (identifier [397, 5] - [397, 21])
      parameters: (parameter_list [397, 21] - [397, 39]
        (parameter_declaration [397, 22] - [397, 38]
          type: (qualified_identifier [397, 22] - [397, 33]
            scope: (namespace_identifier [397, 22] - [397, 25])
            name: (type_identifier [397, 27] - [397, 33]))
          declarator: (identifier [397, 34] - [397, 38]))))
    body: (compound_statement [397, 40] - [408, 1]
      (declaration [398, 1] - [398, 38]
        type: (primitive_type [398, 1] - [398, 4])
        declarator: (init_declarator [398, 5] - [398, 37]
          declarator: (identifier [398, 5] - [398, 10])
          value: (call_expression [398, 13] - [398, 37]
            function: (identifier [398, 13] - [398, 31])
            arguments: (argument_list [398, 31] - [398, 37]
              (identifier [398, 32] - [398, 36])))))
      (expression_statement [399, 1] - [399, 46]
        (call_expression [399, 1] - [399, 45]
          function: (field_expression [399, 1] - [399, 17]
            argument: (identifier [399, 1] - [399, 11])
            field: (field_identifier [399, 12] - [399, 17]))
          arguments: (argument_list [399, 17] - [399, 45]
            (binary_expression [399, 18] - [399, 44]
              left: (call_expression [399, 18] - [399, 36]
                function: (field_expression [399, 18] - [399, 34]
                  argument: (identifier [399, 18] - [399, 28])
                  field: (field_identifier [399, 29] - [399, 34]))
                arguments: (argument_list [399, 34] - [399, 36]))
              right: (identifier [399, 39] - [399, 44])))))
      (expression_statement [400, 1] - [400, 54]
        (call_expression [400, 1] - [400, 53]
          function: (field_expression [400, 1] - [400, 21]
            argument: (identifier [400, 1] - [400, 15])
            field: (field_identifier [400, 16] - [400, 21]))
          arguments: (argument_list [400, 21] - [400, 53]
            (binary_expression [400, 22] - [400, 52]
              left: (call_expression [400, 22] - [400, 44]
                function: (field_expression [400, 22] - [400, 42]
                  argument: (identifier [400, 22] - [400, 36])
                  field: (field_identifier [400, 37] - [400, 42]))
                arguments: (argument_list [400, 42] - [400, 44]))
              right: (identifier [400, 47] - [400, 52])))))
      (expression_statement [401, 1] - [401, 48]
        (call_expression [401, 1] - [401, 47]
          function: (field_expression [401, 1] - [401, 18]
            argument: (identifier [401, 1] - [401, 12])
            field: (field_identifier [401, 13] - [401, 18]))
          arguments: (argument_list [401, 18] - [401, 47]
            (binary_expression [401, 19] - [401, 46]
              left: (call_expression [401, 19] - [401, 38]
                function: (field_expression [401, 19] - [401, 36]
                  argument: (identifier [401, 19] - [401, 30])
                  field: (field_identifier [401, 31] - [401, 36]))
                arguments: (argument_list [401, 36] - [401, 38]))
              right: (identifier [401, 41] - [401, 46])))))
      (expression_statement [402, 1] - [402, 56]
        (call_expression [402, 1] - [402, 55]
          function: (field_expression [402, 1] - [402, 22]
            argument: (identifier [402, 1] - [402, 16])
            field: (field_identifier [402, 17] - [402, 22]))
          arguments: (argument_list [402, 22] - [402, 55]
            (binary_expression [402, 23] - [402, 54]
              left: (call_expression [402, 23] - [402, 46]
                function: (field_expression [402, 23] - [402, 44]
                  argument: (identifier [402, 23] - [402, 38])
                  field: (field_identifier [402, 39] - [402, 44]))
                arguments: (argument_list [402, 44] - [402, 46]))
              right: (identifier [402, 49] - [402, 54])))))
      (expression_statement [403, 1] - [403, 35]
        (assignment_expression [403, 1] - [403, 34]
          left: (identifier [403, 1] - [403, 6])
          right: (call_expression [403, 9] - [403, 34]
            function: (identifier [403, 9] - [403, 28])
            arguments: (argument_list [403, 28] - [403, 34]
              (identifier [403, 29] - [403, 33])))))
      (expression_statement [404, 1] - [404, 46]
        (call_expression [404, 1] - [404, 45]
          function: (field_expression [404, 1] - [404, 17]
            argument: (identifier [404, 1] - [404, 11])
            field: (field_identifier [404, 12] - [404, 17]))
          arguments: (argument_list [404, 17] - [404, 45]
            (binary_expression [404, 18] - [404, 44]
              left: (call_expression [404, 18] - [404, 36]
                function: (field_expression [404, 18] - [404, 34]
                  argument: (identifier [404, 18] - [404, 28])
                  field: (field_identifier [404, 29] - [404, 34]))
                arguments: (argument_list [404, 34] - [404, 36]))
              right: (identifier [404, 39] - [404, 44])))))
      (expression_statement [405, 1] - [405, 54]
        (call_expression [405, 1] - [405, 53]
          function: (field_expression [405, 1] - [405, 21]
            argument: (identifier [405, 1] - [405, 15])
            field: (field_identifier [405, 16] - [405, 21]))
          arguments: (argument_list [405, 21] - [405, 53]
            (binary_expression [405, 22] - [405, 52]
              left: (call_expression [405, 22] - [405, 44]
                function: (field_expression [405, 22] - [405, 42]
                  argument: (identifier [405, 22] - [405, 36])
                  field: (field_identifier [405, 37] - [405, 42]))
                arguments: (argument_list [405, 42] - [405, 44]))
              right: (identifier [405, 47] - [405, 52])))))
      (expression_statement [406, 1] - [406, 48]
        (call_expression [406, 1] - [406, 47]
          function: (field_expression [406, 1] - [406, 18]
            argument: (identifier [406, 1] - [406, 12])
            field: (field_identifier [406, 13] - [406, 18]))
          arguments: (argument_list [406, 18] - [406, 47]
            (binary_expression [406, 19] - [406, 46]
              left: (call_expression [406, 19] - [406, 38]
                function: (field_expression [406, 19] - [406, 36]
                  argument: (identifier [406, 19] - [406, 30])
                  field: (field_identifier [406, 31] - [406, 36]))
                arguments: (argument_list [406, 36] - [406, 38]))
              right: (identifier [406, 41] - [406, 46])))))
      (expression_statement [407, 1] - [407, 56]
        (call_expression [407, 1] - [407, 55]
          function: (field_expression [407, 1] - [407, 22]
            argument: (identifier [407, 1] - [407, 16])
            field: (field_identifier [407, 17] - [407, 22]))
          arguments: (argument_list [407, 22] - [407, 55]
            (binary_expression [407, 23] - [407, 54]
              left: (call_expression [407, 23] - [407, 46]
                function: (field_expression [407, 23] - [407, 44]
                  argument: (identifier [407, 23] - [407, 38])
                  field: (field_identifier [407, 39] - [407, 44]))
                arguments: (argument_list [407, 44] - [407, 46]))
              right: (identifier [407, 49] - [407, 54])))))))
  (function_definition [410, 0] - [415, 1]
    type: (primitive_type [410, 0] - [410, 4])
    declarator: (function_declarator [410, 5] - [410, 40]
      declarator: (identifier [410, 5] - [410, 22])
      parameters: (parameter_list [410, 22] - [410, 40]
        (parameter_declaration [410, 23] - [410, 39]
          type: (qualified_identifier [410, 23] - [410, 34]
            scope: (namespace_identifier [410, 23] - [410, 26])
            name: (type_identifier [410, 28] - [410, 34]))
          declarator: (identifier [410, 35] - [410, 39]))))
    body: (compound_statement [410, 41] - [415, 1]
      (declaration [411, 1] - [411, 39]
        type: (primitive_type [411, 1] - [411, 4])
        declarator: (init_declarator [411, 5] - [411, 38]
          declarator: (identifier [411, 5] - [411, 10])
          value: (call_expression [411, 13] - [411, 38]
            function: (identifier [411, 13] - [411, 32])
            arguments: (argument_list [411, 32] - [411, 38]
              (identifier [411, 33] - [411, 37])))))
      (if_statement [412, 1] - [412, 24]
        condition: (condition_clause [412, 4] - [412, 17]
          value: (binary_expression [412, 5] - [412, 16]
            left: (identifier [412, 5] - [412, 10])
            right: (number_literal [412, 14] - [412, 16])))
        consequence: (return_statement [412, 17] - [412, 24]))
      (expression_statement [413, 1] - [413, 47]
        (call_expression [413, 1] - [413, 46]
          function: (field_expression [413, 1] - [413, 18]
            argument: (identifier [413, 1] - [413, 12])
            field: (field_identifier [413, 13] - [413, 18]))
          arguments: (argument_list [413, 18] - [413, 46]
            (binary_expression [413, 19] - [413, 45]
              left: (call_expression [413, 19] - [413, 38]
                function: (field_expression [413, 19] - [413, 36]
                  argument: (identifier [413, 19] - [413, 30])
                  field: (field_identifier [413, 31] - [413, 36]))
                arguments: (argument_list [413, 36] - [413, 38]))
              right: (identifier [413, 40] - [413, 45])))))
      (expression_statement [414, 1] - [414, 50]
        (call_expression [414, 1] - [414, 49]
          function: (field_expression [414, 1] - [414, 19]
            argument: (identifier [414, 1] - [414, 13])
            field: (field_identifier [414, 14] - [414, 19]))
          arguments: (argument_list [414, 19] - [414, 49]
            (binary_expression [414, 20] - [414, 48]
              left: (call_expression [414, 20] - [414, 40]
                function: (field_expression [414, 20] - [414, 38]
                  argument: (identifier [414, 20] - [414, 32])
                  field: (field_identifier [414, 33] - [414, 38]))
                arguments: (argument_list [414, 38] - [414, 40]))
              right: (identifier [414, 43] - [414, 48])))))))
  (function_definition [417, 0] - [421, 1]
    type: (primitive_type [417, 0] - [417, 4])
    declarator: (function_declarator [417, 5] - [417, 53]
      declarator: (identifier [417, 5] - [417, 16])
      parameters: (parameter_list [417, 16] - [417, 53]
        (parameter_declaration [417, 17] - [417, 33]
          type: (qualified_identifier [417, 17] - [417, 28]
            scope: (namespace_identifier [417, 17] - [417, 20])
            name: (type_identifier [417, 22] - [417, 28]))
          declarator: (identifier [417, 29] - [417, 33]))
        (parameter_declaration [417, 35] - [417, 52]
          type: (primitive_type [417, 35] - [417, 43])
          declarator: (identifier [417, 44] - [417, 52]))))
    body: (compound_statement [417, 54] - [421, 1]
      (if_statement [418, 1] - [419, 3]
        condition: (condition_clause [418, 3] - [418, 37]
          value: (call_expression [418, 4] - [418, 36]
            function: (field_expression [418, 4] - [418, 32]
              argument: (call_expression [418, 4] - [418, 24]
                function: (identifier [418, 4] - [418, 18])
                arguments: (argument_list [418, 18] - [418, 24]
                  (identifier [418, 19] - [418, 23])))
              field: (field_identifier [418, 25] - [418, 32]))
            arguments: (argument_list [418, 32] - [418, 36]
              (string_literal [418, 33] - [418, 35]))))
        consequence: (expression_statement [419, 2] - [419, 3]))
      (return_statement [420, 1] - [420, 14]
        (false [420, 8] - [420, 13]))))
  (declaration [423, 0] - [423, 20]
    type: (sized_type_specifier [423, 0] - [423, 4])
    declarator: (identifier [423, 5] - [423, 19]))
  (declaration [424, 0] - [424, 34]
    type: (primitive_type [424, 0] - [424, 3])
    declarator: (init_declarator [424, 4] - [424, 33]
      declarator: (identifier [424, 4] - [424, 25])
      value: (number_literal [424, 28] - [424, 33])))
  (class_specifier [426, 0] - [437, 1]
    name: (type_identifier [426, 6] - [426, 13])
    body: (field_declaration_list [426, 14] - [437, 1]
      (access_specifier [427, 0] - [427, 8])
      (field_declaration [428, 1] - [428, 21]
        type: (primitive_type [428, 1] - [428, 5])
        declarator: (field_identifier [428, 6] - [428, 12])
        default_value: (false [428, 15] - [428, 20]))
      (access_specifier [429, 0] - [429, 7])
      (function_definition [430, 1] - [433, 2]
        type: (primitive_type [430, 1] - [430, 5])
        declarator: (function_declarator [430, 6] - [430, 12]
          declarator: (field_identifier [430, 6] - [430, 10])
          parameters: (parameter_list [430, 10] - [430, 12]))
        body: (compound_statement [430, 13] - [433, 2]
          (while_statement [431, 2] - [431, 17]
            condition: (condition_clause [431, 8] - [431, 16]
              value: (identifier [431, 9] - [431, 15]))
            body: (expression_statement [431, 16] - [431, 17]))
          (expression_statement [432, 2] - [432, 16]
            (assignment_expression [432, 2] - [432, 15]
              left: (identifier [432, 2] - [432, 8])
              right: (true [432, 11] - [432, 15])))))
      (ERROR [433, 2] - [433, 3])
      (function_definition [434, 1] - [436, 2]
        type: (primitive_type [434, 1] - [434, 5])
        declarator: (function_declarator [434, 6] - [434, 14]
          declarator: (field_identifier [434, 6] - [434, 12])
          parameters: (parameter_list [434, 12] - [434, 14]))
        body: (compound_statement [434, 15] - [436, 2]
          (expression_statement [435, 2] - [435, 17]
            (assignment_expression [435, 2] - [435, 16]
              left: (identifier [435, 2] - [435, 8])
              right: (false [435, 11] - [435, 16])))))
      (ERROR [436, 2] - [436, 3])))
  (comment [437, 2] - [437, 33])
  (comment [439, 0] - [439, 32])
  (declaration [440, 0] - [440, 32]
    type: (qualified_identifier [440, 0] - [440, 10]
      scope: (namespace_identifier [440, 0] - [440, 3])
      name: (type_identifier [440, 5] - [440, 10]))
    declarator: (identifier [440, 11] - [440, 31]))
  (declaration [441, 0] - [441, 23]
    type: (qualified_identifier [441, 0] - [441, 10]
      scope: (namespace_identifier [441, 0] - [441, 3])
      name: (type_identifier [441, 5] - [441, 10]))
    declarator: (identifier [441, 11] - [441, 22]))
  (declaration [442, 0] - [442, 29]
    type: (qualified_identifier [442, 0] - [442, 10]
      scope: (namespace_identifier [442, 0] - [442, 3])
      name: (type_identifier [442, 5] - [442, 10]))
    declarator: (identifier [442, 11] - [442, 28]))
  (function_definition [444, 0] - [451, 1]
    type: (type_identifier [444, 0] - [444, 9])
    declarator: (function_declarator [444, 10] - [444, 20]
      declarator: (identifier [444, 10] - [444, 18])
      parameters: (parameter_list [444, 18] - [444, 20]))
    body: (compound_statement [445, 0] - [451, 1]
      (declaration [446, 1] - [446, 18]
        type: (type_identifier [446, 1] - [446, 10])
        declarator: (identifier [446, 11] - [446, 17]))
      (expression_statement [447, 1] - [447, 20]
        (call_expression [447, 1] - [447, 19]
          function: (field_expression [447, 1] - [447, 17]
            argument: (identifier [447, 1] - [447, 12])
            field: (field_identifier [447, 13] - [447, 17]))
          arguments: (argument_list [447, 17] - [447, 19])))
      (expression_statement [448, 1] - [448, 26]
        (assignment_expression [448, 1] - [448, 25]
          left: (identifier [448, 1] - [448, 7])
          right: (identifier [448, 10] - [448, 25])))
      (expression_statement [449, 1] - [449, 22]
        (call_expression [449, 1] - [449, 21]
          function: (field_expression [449, 1] - [449, 19]
            argument: (identifier [449, 1] - [449, 12])
            field: (field_identifier [449, 13] - [449, 19]))
          arguments: (argument_list [449, 19] - [449, 21])))
      (return_statement [450, 1] - [450, 15]
        (identifier [450, 8] - [450, 14]))))
  (function_definition [453, 0] - [458, 1]
    type: (primitive_type [453, 0] - [453, 4])
    declarator: (function_declarator [453, 5] - [453, 30]
      declarator: (identifier [453, 5] - [453, 13])
      parameters: (parameter_list [453, 13] - [453, 30]
        (parameter_declaration [453, 14] - [453, 29]
          type: (type_identifier [453, 14] - [453, 23])
          declarator: (identifier [453, 24] - [453, 29]))))
    body: (compound_statement [454, 0] - [458, 1]
      (expression_statement [455, 1] - [455, 20]
        (call_expression [455, 1] - [455, 19]
          function: (field_expression [455, 1] - [455, 17]
            argument: (identifier [455, 1] - [455, 12])
            field: (field_identifier [455, 13] - [455, 17]))
          arguments: (argument_list [455, 17] - [455, 19])))
      (expression_statement [456, 1] - [456, 24]
        (assignment_expression [456, 1] - [456, 23]
          left: (identifier [456, 1] - [456, 16])
          right: (identifier [456, 18] - [456, 23])))
      (expression_statement [457, 1] - [457, 22]
        (call_expression [457, 1] - [457, 21]
          function: (field_expression [457, 1] - [457, 19]
            argument: (identifier [457, 1] - [457, 12])
            field: (field_identifier [457, 13] - [457, 19]))
          arguments: (argument_list [457, 19] - [457, 21])))))
  (declaration [460, 0] - [460, 31]
    type: (qualified_identifier [460, 0] - [460, 10]
      scope: (namespace_identifier [460, 0] - [460, 3])
      name: (type_identifier [460, 5] - [460, 10]))
    declarator: (identifier [460, 11] - [460, 30]))
  (function_definition [462, 0] - [475, 1]
    type: (primitive_type [462, 0] - [462, 4])
    declarator: (function_declarator [462, 5] - [462, 29]
      declarator: (identifier [462, 5] - [462, 14])
      parameters: (parameter_list [462, 14] - [462, 29]
        (parameter_declaration [462, 15] - [462, 28]
          type: (type_identifier [462, 15] - [462, 20])
          declarator: (pointer_declarator [462, 20] - [462, 28]
            declarator: (identifier [462, 22] - [462, 28])))))
    body: (compound_statement [462, 30] - [475, 1]
      (expression_statement [463, 1] - [463, 28]
        (call_expression [463, 1] - [463, 27]
          function: (field_expression [463, 1] - [463, 25]
            argument: (identifier [463, 1] - [463, 20])
            field: (field_identifier [463, 21] - [463, 25]))
          arguments: (argument_list [463, 25] - [463, 27])))
      (declaration [464, 1] - [464, 21]
        type: (primitive_type [464, 1] - [464, 5])
        declarator: (init_declarator [464, 6] - [464, 20]
          declarator: (identifier [464, 6] - [464, 12])
          value: (false [464, 15] - [464, 20])))
      (for_statement [465, 1] - [472, 3]
        initializer: (declaration [465, 6] - [465, 16]
          type: (primitive_type [465, 6] - [465, 9])
          declarator: (init_declarator [465, 10] - [465, 15]
            declarator: (identifier [465, 10] - [465, 11])
            value: (number_literal [465, 14] - [465, 15])))
        condition: (binary_expression [465, 17] - [465, 44]
          left: (identifier [465, 17] - [465, 18])
          right: (call_expression [465, 21] - [465, 44]
            function: (field_expression [465, 21] - [465, 42]
              argument: (identifier [465, 21] - [465, 37])
              field: (field_identifier [465, 38] - [465, 42]))
            arguments: (argument_list [465, 42] - [465, 44])))
        update: (update_expression [465, 46] - [465, 49]
          argument: (identifier [465, 46] - [465, 47]))
        (if_statement [466, 2] - [472, 3]
          condition: (condition_clause [466, 5] - [466, 108]
            value: (call_expression [466, 6] - [466, 107]
              function: (identifier [466, 6] - [466, 12])
              arguments: (argument_list [466, 12] - [466, 107]
                (field_expression [466, 13] - [466, 32]
                  argument: (identifier [466, 13] - [466, 19])
                  field: (field_identifier [466, 21] - [466, 32]))
                (field_expression [466, 33] - [466, 65]
                  argument: (subscript_expression [466, 33] - [466, 52]
                    argument: (identifier [466, 33] - [466, 49])
                    index: (identifier [466, 50] - [466, 51]))
                  field: (field_identifier [466, 54] - [466, 65]))
                (sizeof_expression [466, 66] - [466, 106]
                  value: (parenthesized_expression [466, 72] - [466, 106]
                    (field_expression [466, 73] - [466, 105]
                      argument: (subscript_expression [466, 73] - [466, 92]
                        argument: (identifier [466, 73] - [466, 89])
                        index: (identifier [466, 90] - [466, 91]))
                      field: (field_identifier [466, 94] - [466, 105])))))))
          consequence: (compound_statement [467, 2] - [472, 3]
            (expression_statement [468, 3] - [468, 39]
              (assignment_expression [468, 3] - [468, 38]
                left: (field_expression [468, 3] - [468, 33]
                  argument: (subscript_expression [468, 3] - [468, 22]
                    argument: (identifier [468, 3] - [468, 19])
                    index: (identifier [468, 20] - [468, 21]))
                  field: (field_identifier [468, 24] - [468, 33]))
                right: (number_literal [468, 36] - [468, 38])))
            (expression_statement [469, 3] - [469, 44]
              (assignment_expression [469, 3] - [469, 43]
                left: (field_expression [469, 3] - [469, 39]
                  argument: (subscript_expression [469, 3] - [469, 22]
                    argument: (identifier [469, 3] - [469, 19])
                    index: (identifier [469, 20] - [469, 21]))
                  field: (field_identifier [469, 24] - [469, 39]))
                right: (number_literal [469, 42] - [469, 43])))
            (expression_statement [470, 3] - [470, 17]
              (assignment_expression [470, 3] - [470, 16]
                left: (identifier [470, 3] - [470, 9])
                right: (true [470, 12] - [470, 16])))
            (break_statement [471, 3] - [471, 9]))))
      (expression_statement [473, 1] - [473, 30]
        (call_expression [473, 1] - [473, 29]
          function: (field_expression [473, 1] - [473, 27]
            argument: (identifier [473, 1] - [473, 20])
            field: (field_identifier [473, 21] - [473, 27]))
          arguments: (argument_list [473, 27] - [473, 29])))
      (return_statement [474, 1] - [474, 15]
        (identifier [474, 8] - [474, 14]))))
  (function_definition [477, 0] - [487, 1]
    type: (type_identifier [477, 0] - [477, 14])
    declarator: (pointer_declarator [477, 14] - [477, 44]
      declarator: (function_declarator [477, 16] - [477, 44]
        declarator: (identifier [477, 16] - [477, 29])
        parameters: (parameter_list [477, 29] - [477, 44]
          (parameter_declaration [477, 30] - [477, 43]
            type: (primitive_type [477, 30] - [477, 37])
            declarator: (identifier [477, 38] - [477, 43])))))
    body: (compound_statement [477, 45] - [487, 1]
      (declaration [478, 1] - [478, 31]
        type: (type_identifier [478, 1] - [478, 15])
        declarator: (init_declarator [478, 15] - [478, 30]
          declarator: (pointer_declarator [478, 15] - [478, 23]
            declarator: (identifier [478, 17] - [478, 23]))
          value: (null [478, 26] - [478, 30])))
      (for_statement [479, 1] - [485, 2]
        initializer: (declaration [479, 6] - [479, 47]
          type: (auto [479, 6] - [479, 10])
          declarator: (init_declarator [479, 11] - [479, 46]
            declarator: (identifier [479, 11] - [479, 18])
            value: (call_expression [479, 21] - [479, 46]
              function: (field_expression [479, 21] - [479, 44]
                argument: (identifier [479, 21] - [479, 38])
                field: (field_identifier [479, 39] - [479, 44]))
              arguments: (argument_list [479, 44] - [479, 46]))))
        condition: (binary_expression [479, 48] - [479, 82]
          left: (identifier [479, 48] - [479, 55])
          right: (call_expression [479, 59] - [479, 82]
            function: (field_expression [479, 59] - [479, 80]
              argument: (identifier [479, 59] - [479, 76])
              field: (field_identifier [479, 77] - [479, 80]))
            arguments: (argument_list [479, 80] - [479, 82])))
        (compound_statement [480, 1] - [485, 2]
          (if_statement [481, 2] - [483, 3]
            condition: (condition_clause [481, 5] - [481, 32]
              value: (binary_expression [481, 6] - [481, 31]
                left: (field_expression [481, 6] - [481, 22]
                  argument: (parenthesized_expression [481, 6] - [481, 16]
                    (pointer_expression [481, 7] - [481, 15]
                      argument: (identifier [481, 8] - [481, 15])))
                  field: (field_identifier [481, 17] - [481, 22]))
                right: (identifier [481, 26] - [481, 31])))
            consequence: (compound_statement [481, 33] - [483, 3]
              (expression_statement [482, 3] - [482, 24]
                (assignment_expression [482, 3] - [482, 23]
                  left: (identifier [482, 3] - [482, 9])
                  right: (pointer_expression [482, 12] - [482, 23]
                    argument: (parenthesized_expression [482, 13] - [482, 23]
                      (pointer_expression [482, 14] - [482, 22]
                        argument: (identifier [482, 15] - [482, 22]))))))))
          (expression_statement [484, 2] - [484, 12]
            (update_expression [484, 2] - [484, 11]
              argument: (identifier [484, 4] - [484, 11])))))
      (return_statement [486, 1] - [486, 15]
        (identifier [486, 8] - [486, 14]))))
  (expression_statement [487, 1] - [487, 2])
  (function_definition [489, 0] - [501, 1]
    type: (primitive_type [489, 0] - [489, 4])
    declarator: (function_declarator [489, 5] - [489, 36]
      declarator: (identifier [489, 5] - [489, 21])
      parameters: (parameter_list [489, 21] - [489, 36]
        (parameter_declaration [489, 22] - [489, 35]
          type: (primitive_type [489, 22] - [489, 29])
          declarator: (identifier [489, 30] - [489, 35]))))
    body: (compound_statement [490, 0] - [501, 1]
      (for_statement [491, 1] - [500, 2]
        initializer: (declaration [491, 6] - [491, 47]
          type: (auto [491, 6] - [491, 10])
          declarator: (init_declarator [491, 11] - [491, 46]
            declarator: (identifier [491, 11] - [491, 18])
            value: (call_expression [491, 21] - [491, 46]
              function: (field_expression [491, 21] - [491, 44]
                argument: (identifier [491, 21] - [491, 38])
                field: (field_identifier [491, 39] - [491, 44]))
              arguments: (argument_list [491, 44] - [491, 46]))))
        condition: (binary_expression [491, 48] - [491, 82]
          left: (identifier [491, 48] - [491, 55])
          right: (call_expression [491, 59] - [491, 82]
            function: (field_expression [491, 59] - [491, 80]
              argument: (identifier [491, 59] - [491, 76])
              field: (field_identifier [491, 77] - [491, 80]))
            arguments: (argument_list [491, 80] - [491, 82])))
        (compound_statement [492, 1] - [500, 2]
          (if_statement [493, 2] - [499, 3]
            condition: (condition_clause [493, 5] - [493, 32]
              value: (binary_expression [493, 6] - [493, 31]
                left: (field_expression [493, 6] - [493, 22]
                  argument: (parenthesized_expression [493, 6] - [493, 16]
                    (pointer_expression [493, 7] - [493, 15]
                      argument: (identifier [493, 8] - [493, 15])))
                  field: (field_identifier [493, 17] - [493, 22]))
                right: (identifier [493, 26] - [493, 31])))
            consequence: (compound_statement [493, 33] - [496, 3]
              (expression_statement [495, 3] - [495, 46]
                (assignment_expression [495, 3] - [495, 45]
                  left: (identifier [495, 3] - [495, 10])
                  right: (call_expression [495, 13] - [495, 45]
                    function: (field_expression [495, 13] - [495, 36]
                      argument: (identifier [495, 13] - [495, 30])
                      field: (field_identifier [495, 31] - [495, 36]))
                    arguments: (argument_list [495, 36] - [495, 45]
                      (identifier [495, 37] - [495, 44]))))))
            alternative: (compound_statement [497, 7] - [499, 3]
              (expression_statement [498, 3] - [498, 13]
                (update_expression [498, 3] - [498, 12]
                  argument: (identifier [498, 5] - [498, 12])))))))))
  (expression_statement [501, 1] - [501, 2])
  (function_definition [503, 0] - [517, 1]
    type: (primitive_type [503, 0] - [503, 4])
    declarator: (function_declarator [503, 5] - [503, 47]
      declarator: (identifier [503, 5] - [503, 19])
      parameters: (parameter_list [503, 19] - [503, 47]
        (parameter_declaration [503, 20] - [503, 33]
          type: (primitive_type [503, 20] - [503, 27])
          declarator: (identifier [503, 28] - [503, 33]))
        (parameter_declaration [503, 35] - [503, 46]
          type: (primitive_type [503, 35] - [503, 38])
          declarator: (identifier [503, 39] - [503, 46]))))
    body: (compound_statement [503, 48] - [517, 1]
      (preproc_ifdef [504, 0] - [506, 6]
        name: (identifier [504, 7] - [504, 28])
        (comment [505, 1] - [505, 69]))
      (comment [506, 7] - [506, 31])
      (expression_statement [507, 1] - [507, 29]
        (call_expression [507, 1] - [507, 28]
          function: (field_expression [507, 1] - [507, 26]
            argument: (identifier [507, 1] - [507, 21])
            field: (field_identifier [507, 22] - [507, 26]))
          arguments: (argument_list [507, 26] - [507, 28])))
      (for_statement [508, 1] - [515, 2]
        initializer: (declaration [508, 6] - [508, 47]
          type: (auto [508, 6] - [508, 10])
          declarator: (init_declarator [508, 11] - [508, 46]
            declarator: (identifier [508, 11] - [508, 18])
            value: (call_expression [508, 21] - [508, 46]
              function: (field_expression [508, 21] - [508, 44]
                argument: (identifier [508, 21] - [508, 38])
                field: (field_identifier [508, 39] - [508, 44]))
              arguments: (argument_list [508, 44] - [508, 46]))))
        condition: (binary_expression [508, 48] - [508, 82]
          left: (identifier [508, 48] - [508, 55])
          right: (call_expression [508, 59] - [508, 82]
            function: (field_expression [508, 59] - [508, 80]
              argument: (identifier [508, 59] - [508, 76])
              field: (field_identifier [508, 77] - [508, 80]))
            arguments: (argument_list [508, 80] - [508, 82])))
        (compound_statement [509, 1] - [515, 2]
          (if_statement [510, 2] - [513, 3]
            condition: (condition_clause [510, 5] - [510, 32]
              value: (binary_expression [510, 6] - [510, 31]
                left: (field_expression [510, 6] - [510, 22]
                  argument: (parenthesized_expression [510, 6] - [510, 16]
                    (pointer_expression [510, 7] - [510, 15]
                      argument: (identifier [510, 8] - [510, 15])))
                  field: (field_identifier [510, 17] - [510, 22]))
                right: (identifier [510, 26] - [510, 31])))
            consequence: (compound_statement [510, 33] - [513, 3]
              (expression_statement [512, 3] - [512, 32]
                (assignment_expression [512, 3] - [512, 31]
                  left: (field_expression [512, 3] - [512, 21]
                    argument: (parenthesized_expression [512, 3] - [512, 13]
                      (pointer_expression [512, 4] - [512, 12]
                        argument: (identifier [512, 5] - [512, 12])))
                    field: (field_identifier [512, 14] - [512, 21]))
                  right: (identifier [512, 24] - [512, 31])))))
          (expression_statement [514, 2] - [514, 12]
            (update_expression [514, 2] - [514, 11]
              argument: (identifier [514, 4] - [514, 11])))))
      (expression_statement [516, 1] - [516, 31]
        (call_expression [516, 1] - [516, 30]
          function: (field_expression [516, 1] - [516, 28]
            argument: (identifier [516, 1] - [516, 21])
            field: (field_identifier [516, 22] - [516, 28]))
          arguments: (argument_list [516, 28] - [516, 30])))))
  (expression_statement [517, 1] - [517, 2])
  (declaration [519, 0] - [519, 22]
    type: (primitive_type [519, 0] - [519, 7])
    declarator: (init_declarator [519, 8] - [519, 21]
      declarator: (identifier [519, 8] - [519, 17])
      value: (number_literal [519, 20] - [519, 21])))
  (declaration [520, 0] - [520, 20]
    type: (qualified_identifier [520, 0] - [520, 10]
      scope: (namespace_identifier [520, 0] - [520, 3])
      name: (type_identifier [520, 5] - [520, 10]))
    declarator: (identifier [520, 11] - [520, 19]))
  (function_definition [522, 0] - [529, 1]
    type: (primitive_type [522, 0] - [522, 7])
    declarator: (function_declarator [522, 8] - [522, 22]
      declarator: (identifier [522, 8] - [522, 20])
      parameters: (parameter_list [522, 20] - [522, 22]))
    body: (compound_statement [522, 23] - [529, 1]
      (expression_statement [523, 1] - [523, 17]
        (call_expression [523, 1] - [523, 16]
          function: (field_expression [523, 1] - [523, 14]
            argument: (identifier [523, 1] - [523, 9])
            field: (field_identifier [523, 10] - [523, 14]))
          arguments: (argument_list [523, 14] - [523, 16])))
      (expression_statement [524, 1] - [524, 13]
        (update_expression [524, 1] - [524, 12]
          argument: (identifier [524, 1] - [524, 10])))
      (if_statement [525, 1] - [525, 39]
        condition: (condition_clause [525, 4] - [525, 25]
          value: (binary_expression [525, 5] - [525, 24]
            left: (identifier [525, 5] - [525, 14])
            right: (number_literal [525, 17] - [525, 24])))
        consequence: (expression_statement [525, 25] - [525, 39]
          (assignment_expression [525, 25] - [525, 38]
            left: (identifier [525, 25] - [525, 34])
            right: (number_literal [525, 37] - [525, 38]))))
      (declaration [526, 1] - [526, 30]
        type: (primitive_type [526, 1] - [526, 8])
        declarator: (init_declarator [526, 9] - [526, 29]
          declarator: (identifier [526, 9] - [526, 17])
          value: (identifier [526, 20] - [526, 29])))
      (expression_statement [527, 1] - [527, 19]
        (call_expression [527, 1] - [527, 18]
          function: (field_expression [527, 1] - [527, 16]
            argument: (identifier [527, 1] - [527, 9])
            field: (field_identifier [527, 10] - [527, 16]))
          arguments: (argument_list [527, 16] - [527, 18])))
      (return_statement [528, 1] - [528, 18]
        (identifier [528, 8] - [528, 17]))))
  (function_definition [531, 0] - [543, 1]
    type: (primitive_type [531, 0] - [531, 4])
    declarator: (function_declarator [531, 5] - [531, 43]
      declarator: (identifier [531, 5] - [531, 24])
      parameters: (parameter_list [531, 24] - [531, 43]
        (parameter_declaration [531, 25] - [531, 42]
          type: (type_identifier [531, 25] - [531, 30])
          declarator: (pointer_declarator [531, 30] - [531, 42]
            declarator: (identifier [531, 32] - [531, 42])))))
    body: (compound_statement [531, 44] - [543, 1]
      (expression_statement [532, 1] - [532, 28]
        (call_expression [532, 1] - [532, 27]
          function: (field_expression [532, 1] - [532, 25]
            argument: (identifier [532, 1] - [532, 20])
            field: (field_identifier [532, 21] - [532, 25]))
          arguments: (argument_list [532, 25] - [532, 27])))
      (declaration [533, 1] - [533, 21]
        type: (primitive_type [533, 1] - [533, 5])
        declarator: (init_declarator [533, 6] - [533, 20]
          declarator: (identifier [533, 6] - [533, 12])
          value: (false [533, 15] - [533, 20])))
      (for_statement [534, 1] - [539, 3]
        initializer: (declaration [534, 6] - [534, 16]
          type: (primitive_type [534, 6] - [534, 9])
          declarator: (init_declarator [534, 10] - [534, 15]
            declarator: (identifier [534, 10] - [534, 11])
            value: (number_literal [534, 14] - [534, 15])))
        condition: (binary_expression [534, 17] - [534, 44]
          left: (identifier [534, 17] - [534, 18])
          right: (call_expression [534, 21] - [534, 44]
            function: (field_expression [534, 21] - [534, 42]
              argument: (identifier [534, 21] - [534, 37])
              field: (field_identifier [534, 38] - [534, 42]))
            arguments: (argument_list [534, 42] - [534, 44])))
        update: (update_expression [534, 46] - [534, 49]
          argument: (identifier [534, 46] - [534, 47]))
        (if_statement [535, 2] - [539, 3]
          condition: (condition_clause [535, 5] - [535, 40]
            value: (binary_expression [535, 6] - [535, 39]
              left: (subscript_expression [535, 6] - [535, 25]
                argument: (identifier [535, 6] - [535, 22])
                index: (identifier [535, 23] - [535, 24]))
              right: (identifier [535, 29] - [535, 39])))
          consequence: (compound_statement [536, 2] - [539, 3]
            (expression_statement [537, 3] - [537, 17]
              (assignment_expression [537, 3] - [537, 16]
                left: (identifier [537, 3] - [537, 9])
                right: (true [537, 12] - [537, 16])))
            (break_statement [538, 3] - [538, 9]))))
      (if_statement [540, 1] - [541, 41]
        condition: (condition_clause [540, 4] - [540, 13]
          value: (unary_expression [540, 5] - [540, 12]
            argument: (identifier [540, 6] - [540, 12])))
        consequence: (expression_statement [541, 2] - [541, 41]
          (call_expression [541, 2] - [541, 40]
            function: (field_expression [541, 2] - [541, 28]
              argument: (identifier [541, 2] - [541, 18])
              field: (field_identifier [541, 19] - [541, 28]))
            arguments: (argument_list [541, 28] - [541, 40]
              (identifier [541, 29] - [541, 39])))))
      (expression_statement [542, 1] - [542, 30]
        (call_expression [542, 1] - [542, 29]
          function: (field_expression [542, 1] - [542, 27]
            argument: (identifier [542, 1] - [542, 20])
            field: (field_identifier [542, 21] - [542, 27]))
          arguments: (argument_list [542, 27] - [542, 29])))))
  (enum_specifier [545, 0] - [545, 26]
    body: (enumerator_list [545, 5] - [545, 26]
      (enumerator [545, 7] - [545, 24]
        name: (identifier [545, 7] - [545, 17])
        value: (number_literal [545, 20] - [545, 24]))))
  (function_definition [547, 0] - [556, 1]
    type: (primitive_type [547, 0] - [547, 4])
    declarator: (function_declarator [547, 5] - [547, 46]
      declarator: (identifier [547, 5] - [547, 27])
      parameters: (parameter_list [547, 27] - [547, 46]
        (parameter_declaration [547, 28] - [547, 45]
          type: (type_identifier [547, 28] - [547, 33])
          declarator: (pointer_declarator [547, 33] - [547, 45]
            declarator: (identifier [547, 35] - [547, 45])))))
    body: (compound_statement [547, 47] - [556, 1]
      (expression_statement [548, 1] - [548, 28]
        (call_expression [548, 1] - [548, 27]
          function: (field_expression [548, 1] - [548, 25]
            argument: (identifier [548, 1] - [548, 20])
            field: (field_identifier [548, 21] - [548, 25]))
          arguments: (argument_list [548, 25] - [548, 27])))
      (for_statement [549, 1] - [554, 3]
        initializer: (declaration [549, 6] - [549, 16]
          type: (primitive_type [549, 6] - [549, 9])
          declarator: (init_declarator [549, 10] - [549, 15]
            declarator: (identifier [549, 10] - [549, 11])
            value: (number_literal [549, 14] - [549, 15])))
        condition: (binary_expression [549, 17] - [549, 44]
          left: (identifier [549, 17] - [549, 18])
          right: (call_expression [549, 21] - [549, 44]
            function: (field_expression [549, 21] - [549, 42]
              argument: (identifier [549, 21] - [549, 37])
              field: (field_identifier [549, 38] - [549, 42]))
            arguments: (argument_list [549, 42] - [549, 44])))
        update: (update_expression [549, 46] - [549, 49]
          argument: (identifier [549, 46] - [549, 47]))
        (if_statement [550, 2] - [554, 3]
          condition: (condition_clause [550, 5] - [550, 40]
            value: (binary_expression [550, 6] - [550, 39]
              left: (subscript_expression [550, 6] - [550, 25]
                argument: (identifier [550, 6] - [550, 22])
                index: (identifier [550, 23] - [550, 24]))
              right: (identifier [550, 29] - [550, 39])))
          consequence: (compound_statement [551, 2] - [554, 3]
            (expression_statement [552, 3] - [552, 56]
              (call_expression [552, 3] - [552, 55]
                function: (field_expression [552, 3] - [552, 25]
                  argument: (identifier [552, 3] - [552, 19])
                  field: (field_identifier [552, 20] - [552, 25]))
                arguments: (argument_list [552, 25] - [552, 55]
                  (binary_expression [552, 26] - [552, 54]
                    left: (call_expression [552, 26] - [552, 50]
                      function: (field_expression [552, 26] - [552, 48]
                        argument: (identifier [552, 26] - [552, 42])
                        field: (field_identifier [552, 43] - [552, 48]))
                      arguments: (argument_list [552, 48] - [552, 50]))
                    right: (identifier [552, 53] - [552, 54])))))
            (break_statement [553, 3] - [553, 9]))))
      (expression_statement [555, 1] - [555, 30]
        (call_expression [555, 1] - [555, 29]
          function: (field_expression [555, 1] - [555, 27]
            argument: (identifier [555, 1] - [555, 20])
            field: (field_identifier [555, 21] - [555, 27]))
          arguments: (argument_list [555, 27] - [555, 29])))))
  (expression_statement [556, 1] - [556, 2])
  (namespace_definition [558, 0] - [1328, 1]
    name: (identifier [558, 10] - [558, 22])
    body: (declaration_list [558, 23] - [1328, 1]
      (class_specifier [559, 1] - [571, 2]
        name: (type_identifier [559, 7] - [559, 27])
        body: (field_declaration_list [559, 28] - [571, 2]
          (access_specifier [560, 1] - [560, 8])
          (field_declaration [561, 2] - [561, 24]
            type: (qualified_identifier [561, 2] - [561, 13]
              scope: (namespace_identifier [561, 2] - [561, 5])
              name: (type_identifier [561, 7] - [561, 13]))
            declarator: (field_identifier [561, 14] - [561, 23]))
          (field_declaration [562, 2] - [562, 31]
            type: (qualified_identifier [562, 2] - [562, 13]
              scope: (namespace_identifier [562, 2] - [562, 5])
              name: (type_identifier [562, 7] - [562, 13]))
            declarator: (field_identifier [562, 14] - [562, 30]))
          (field_declaration [563, 2] - [563, 24]
            type: (sized_type_specifier [563, 2] - [563, 16])
            declarator: (field_identifier [563, 17] - [563, 23]))
          (field_declaration [564, 2] - [564, 50]
            type: (qualified_identifier [564, 2] - [564, 39]
              scope: (namespace_identifier [564, 2] - [564, 5])
              name: (qualified_identifier [564, 7] - [564, 39]
                scope: (namespace_identifier [564, 7] - [564, 13])
                name: (qualified_identifier [564, 15] - [564, 39]
                  scope: (namespace_identifier [564, 15] - [564, 27])
                  name: (type_identifier [564, 29] - [564, 39]))))
            declarator: (field_identifier [564, 40] - [564, 49]))
          (function_definition [565, 2] - [570, 3]
            declarator: (function_declarator [565, 2] - [565, 92]
              declarator: (identifier [565, 2] - [565, 22])
              parameters: (parameter_list [565, 22] - [565, 92]
                (parameter_declaration [565, 23] - [565, 42]
                  type: (qualified_identifier [565, 23] - [565, 34]
                    scope: (namespace_identifier [565, 23] - [565, 26])
                    name: (type_identifier [565, 28] - [565, 34]))
                  declarator: (identifier [565, 35] - [565, 42]))
                (parameter_declaration [565, 44] - [565, 70]
                  type: (qualified_identifier [565, 44] - [565, 55]
                    scope: (namespace_identifier [565, 44] - [565, 47])
                    name: (type_identifier [565, 49] - [565, 55]))
                  declarator: (identifier [565, 56] - [565, 70]))
                (parameter_declaration [565, 72] - [565, 91]
                  type: (sized_type_specifier [565, 72] - [565, 86])
                  declarator: (identifier [565, 87] - [565, 91]))))
            body: (compound_statement [565, 93] - [570, 3]
              (expression_statement [566, 3] - [566, 23]
                (assignment_expression [566, 3] - [566, 22]
                  left: (identifier [566, 3] - [566, 12])
                  right: (identifier [566, 15] - [566, 22])))
              (expression_statement [567, 3] - [567, 37]
                (assignment_expression [567, 3] - [567, 36]
                  left: (identifier [567, 3] - [567, 19])
                  right: (identifier [567, 22] - [567, 36])))
              (expression_statement [568, 3] - [568, 17]
                (assignment_expression [568, 3] - [568, 16]
                  left: (identifier [568, 3] - [568, 9])
                  right: (identifier [568, 12] - [568, 16])))
              (expression_statement [569, 3] - [569, 48]
                (assignment_expression [569, 3] - [569, 47]
                  left: (identifier [569, 3] - [569, 12])
                  right: (call_expression [569, 15] - [569, 47]
                    function: (qualified_identifier [569, 15] - [569, 45]
                      scope: (namespace_identifier [569, 15] - [569, 18])
                      name: (qualified_identifier [569, 20] - [569, 45]
                        scope: (namespace_identifier [569, 20] - [569, 26])
                        name: (qualified_identifier [569, 28] - [569, 45]
                          scope: (namespace_identifier [569, 28] - [569, 40])
                          name: (identifier [569, 42] - [569, 45]))))
                    arguments: (argument_list [569, 45] - [569, 47]))))))
          (ERROR [570, 3] - [570, 4])))
      (declaration [573, 1] - [573, 38]
        (type_qualifier [573, 1] - [573, 6])
        type: (primitive_type [573, 7] - [573, 10])
        declarator: (init_declarator [573, 11] - [573, 37]
          declarator: (identifier [573, 11] - [573, 30])
          value: (number_literal [573, 33] - [573, 37])))
      (class_specifier [575, 1] - [638, 2]
        name: (type_identifier [575, 7] - [575, 19])
        body: (field_declaration_list [576, 1] - [638, 2]
          (access_specifier [577, 1] - [577, 9])
          (field_declaration [578, 2] - [578, 25]
            type: (type_identifier [578, 2] - [578, 8])
            declarator: (field_identifier [578, 9] - [578, 24]))
          (field_declaration [579, 2] - [579, 26]
            type: (type_identifier [579, 2] - [579, 8])
            declarator: (field_identifier [579, 9] - [579, 25]))
          (field_declaration [580, 2] - [580, 24]
            type: (type_identifier [580, 2] - [580, 8])
            declarator: (field_identifier [580, 9] - [580, 23]))
          (field_declaration [581, 2] - [581, 25]
            type: (primitive_type [581, 2] - [581, 6])
            declarator: (field_identifier [581, 7] - [581, 24]))
          (field_declaration [582, 2] - [582, 24]
            type: (primitive_type [582, 2] - [582, 6])
            declarator: (field_identifier [582, 7] - [582, 23]))
          (field_declaration [583, 2] - [583, 23]
            type: (primitive_type [583, 2] - [583, 6])
            declarator: (field_identifier [583, 7] - [583, 22]))
          (field_declaration [584, 2] - [584, 13]
            type: (primitive_type [584, 2] - [584, 5])
            declarator: (field_identifier [584, 6] - [584, 12]))
          (field_declaration [585, 2] - [585, 19]
            type: (primitive_type [585, 2] - [585, 5])
            declarator: (field_identifier [585, 6] - [585, 18]))
          (field_declaration [586, 2] - [586, 21]
            type: (qualified_identifier [586, 2] - [586, 13]
              scope: (namespace_identifier [586, 2] - [586, 5])
              name: (type_identifier [586, 7] - [586, 13]))
            declarator: (field_identifier [586, 14] - [586, 20]))
          (field_declaration [587, 2] - [587, 28]
            type: (primitive_type [587, 2] - [587, 6])
            declarator: (field_identifier [587, 7] - [587, 19])
            default_value: (false [587, 22] - [587, 27]))
          (field_declaration [589, 2] - [589, 27]
            type: (primitive_type [589, 2] - [589, 6])
            declarator: (field_identifier [589, 7] - [589, 18])
            default_value: (false [589, 21] - [589, 26]))
          (field_declaration [591, 2] - [591, 25]
            type: (sized_type_specifier [591, 2] - [591, 14]
              type: (primitive_type [591, 11] - [591, 14]))
            declarator: (field_identifier [591, 15] - [591, 20])
            default_value: (number_literal [591, 23] - [591, 24]))
          (field_declaration [593, 2] - [593, 34]
            type: (qualified_identifier [593, 2] - [593, 18]
              scope: (namespace_identifier [593, 2] - [593, 6])
              name: (type_identifier [593, 8] - [593, 18]))
            declarator: (field_identifier [593, 19] - [593, 33]))
          (field_declaration [594, 2] - [594, 37]
            type: (qualified_identifier [594, 2] - [594, 23]
              scope: (namespace_identifier [594, 2] - [594, 6])
              name: (qualified_identifier [594, 8] - [594, 23]
                scope: (namespace_identifier [594, 8] - [594, 10])
                name: (qualified_identifier [594, 12] - [594, 23]
                  scope: (namespace_identifier [594, 12] - [594, 15])
                  name: (type_identifier [594, 17] - [594, 23]))))
            declarator: (pointer_declarator [594, 23] - [594, 36]
              declarator: (field_identifier [594, 25] - [594, 36])))
          (field_declaration [596, 2] - [596, 37]
            type: (qualified_identifier [596, 2] - [596, 25]
              scope: (namespace_identifier [596, 2] - [596, 5])
              name: (template_type [596, 7] - [596, 25]
                name: (type_identifier [596, 7] - [596, 13])
                arguments: (template_argument_list [596, 13] - [596, 25]
                  (type_descriptor [596, 14] - [596, 24]
                    type: (type_identifier [596, 14] - [596, 24])))))
            declarator: (field_identifier [596, 26] - [596, 36]))
          (field_declaration [598, 2] - [598, 29]
            type: (primitive_type [598, 2] - [598, 6])
            declarator: (field_identifier [598, 7] - [598, 20])
            default_value: (false [598, 23] - [598, 28]))
          (field_declaration [600, 2] - [600, 19]
            type: (primitive_type [600, 2] - [600, 6])
            declarator: (function_declarator [600, 7] - [600, 18]
              declarator: (field_identifier [600, 7] - [600, 16])
              parameters: (parameter_list [600, 16] - [600, 18])))
          (field_declaration [601, 2] - [601, 18]
            type: (primitive_type [601, 2] - [601, 6])
            declarator: (function_declarator [601, 7] - [601, 17]
              declarator: (field_identifier [601, 7] - [601, 15])
              parameters: (parameter_list [601, 15] - [601, 17])))
          (field_declaration [603, 2] - [603, 86]
            type: (primitive_type [603, 2] - [603, 6])
            declarator: (function_declarator [603, 7] - [603, 85]
              declarator: (field_identifier [603, 7] - [603, 30])
              parameters: (parameter_list [603, 30] - [603, 85]
                (parameter_declaration [603, 31] - [603, 52]
                  type: (qualified_identifier [603, 31] - [603, 42]
                    scope: (namespace_identifier [603, 31] - [603, 34])
                    name: (type_identifier [603, 36] - [603, 42]))
                  declarator: (identifier [603, 43] - [603, 52]))
                (parameter_declaration [603, 54] - [603, 84]
                  type: (qualified_identifier [603, 54] - [603, 77]
                    scope: (namespace_identifier [603, 54] - [603, 58])
                    name: (qualified_identifier [603, 60] - [603, 77]
                      scope: (namespace_identifier [603, 60] - [603, 62])
                      name: (qualified_identifier [603, 64] - [603, 77]
                        scope: (namespace_identifier [603, 64] - [603, 67])
                        name: (type_identifier [603, 69] - [603, 77]))))
                  declarator: (identifier [603, 78] - [603, 84])))))
          (field_declaration [604, 2] - [604, 86]
            type: (primitive_type [604, 2] - [604, 6])
            declarator: (function_declarator [604, 7] - [604, 85]
              declarator: (field_identifier [604, 7] - [604, 30])
              parameters: (parameter_list [604, 30] - [604, 85]
                (parameter_declaration [604, 31] - [604, 52]
                  type: (qualified_identifier [604, 31] - [604, 42]
                    scope: (namespace_identifier [604, 31] - [604, 34])
                    name: (type_identifier [604, 36] - [604, 42]))
                  declarator: (identifier [604, 43] - [604, 52]))
                (parameter_declaration [604, 54] - [604, 84]
                  type: (qualified_identifier [604, 54] - [604, 77]
                    scope: (namespace_identifier [604, 54] - [604, 58])
                    name: (qualified_identifier [604, 60] - [604, 77]
                      scope: (namespace_identifier [604, 60] - [604, 62])
                      name: (qualified_identifier [604, 64] - [604, 77]
                        scope: (namespace_identifier [604, 64] - [604, 67])
                        name: (type_identifier [604, 69] - [604, 77]))))
                  declarator: (identifier [604, 78] - [604, 84])))))
          (field_declaration [605, 2] - [605, 83]
            type: (primitive_type [605, 2] - [605, 6])
            declarator: (function_declarator [605, 7] - [605, 82]
              declarator: (field_identifier [605, 7] - [605, 27])
              parameters: (parameter_list [605, 27] - [605, 82]
                (parameter_declaration [605, 28] - [605, 49]
                  type: (qualified_identifier [605, 28] - [605, 39]
                    scope: (namespace_identifier [605, 28] - [605, 31])
                    name: (type_identifier [605, 33] - [605, 39]))
                  declarator: (identifier [605, 40] - [605, 49]))
                (parameter_declaration [605, 51] - [605, 81]
                  type: (qualified_identifier [605, 51] - [605, 74]
                    scope: (namespace_identifier [605, 51] - [605, 55])
                    name: (qualified_identifier [605, 57] - [605, 74]
                      scope: (namespace_identifier [605, 57] - [605, 59])
                      name: (qualified_identifier [605, 61] - [605, 74]
                        scope: (namespace_identifier [605, 61] - [605, 64])
                        name: (type_identifier [605, 66] - [605, 74]))))
                  declarator: (identifier [605, 75] - [605, 81])))))
          (field_declaration [606, 2] - [606, 83]
            type: (primitive_type [606, 2] - [606, 6])
            declarator: (function_declarator [606, 7] - [606, 82]
              declarator: (field_identifier [606, 7] - [606, 27])
              parameters: (parameter_list [606, 27] - [606, 82]
                (parameter_declaration [606, 28] - [606, 49]
                  type: (qualified_identifier [606, 28] - [606, 39]
                    scope: (namespace_identifier [606, 28] - [606, 31])
                    name: (type_identifier [606, 33] - [606, 39]))
                  declarator: (identifier [606, 40] - [606, 49]))
                (parameter_declaration [606, 51] - [606, 81]
                  type: (qualified_identifier [606, 51] - [606, 74]
                    scope: (namespace_identifier [606, 51] - [606, 55])
                    name: (qualified_identifier [606, 57] - [606, 74]
                      scope: (namespace_identifier [606, 57] - [606, 59])
                      name: (qualified_identifier [606, 61] - [606, 74]
                        scope: (namespace_identifier [606, 61] - [606, 64])
                        name: (type_identifier [606, 66] - [606, 74]))))
                  declarator: (identifier [606, 75] - [606, 81])))))
          (field_declaration [608, 2] - [608, 17]
            type: (primitive_type [608, 2] - [608, 6])
            declarator: (function_declarator [608, 7] - [608, 16]
              declarator: (field_identifier [608, 7] - [608, 14])
              parameters: (parameter_list [608, 14] - [608, 16])))
          (field_declaration [609, 2] - [609, 67]
            type: (primitive_type [609, 2] - [609, 6])
            declarator: (function_declarator [609, 7] - [609, 66]
              declarator: (field_identifier [609, 7] - [609, 24])
              parameters: (parameter_list [609, 24] - [609, 66]
                (parameter_declaration [609, 25] - [609, 55]
                  type: (qualified_identifier [609, 25] - [609, 48]
                    scope: (namespace_identifier [609, 25] - [609, 29])
                    name: (qualified_identifier [609, 31] - [609, 48]
                      scope: (namespace_identifier [609, 31] - [609, 33])
                      name: (qualified_identifier [609, 35] - [609, 48]
                        scope: (namespace_identifier [609, 35] - [609, 38])
                        name: (type_identifier [609, 40] - [609, 48]))))
                  declarator: (identifier [609, 49] - [609, 55]))
                (parameter_declaration [609, 57] - [609, 65]
                  type: (primitive_type [609, 57] - [609, 60])
                  declarator: (identifier [609, 61] - [609, 65])))))
          (field_declaration [611, 2] - [611, 37]
            type: (primitive_type [611, 2] - [611, 6])
            declarator: (function_declarator [611, 7] - [611, 36]
              declarator: (field_identifier [611, 7] - [611, 17])
              parameters: (parameter_list [611, 17] - [611, 36]
                (parameter_declaration [611, 18] - [611, 35]
                  type: (type_identifier [611, 18] - [611, 28])
                  declarator: (identifier [611, 29] - [611, 35])))))
          (field_declaration [612, 2] - [612, 35]
            type: (primitive_type [612, 2] - [612, 6])
            declarator: (function_declarator [612, 7] - [612, 34]
              declarator: (field_identifier [612, 7] - [612, 15])
              parameters: (parameter_list [612, 15] - [612, 34]
                (parameter_declaration [612, 16] - [612, 33]
                  type: (type_identifier [612, 16] - [612, 26])
                  declarator: (identifier [612, 27] - [612, 33])))))
          (field_declaration [614, 2] - [614, 24]
            type: (primitive_type [614, 2] - [614, 6])
            declarator: (function_declarator [614, 7] - [614, 23]
              declarator: (field_identifier [614, 7] - [614, 21])
              parameters: (parameter_list [614, 21] - [614, 23])))
          (field_declaration [615, 2] - [615, 23]
            type: (primitive_type [615, 2] - [615, 6])
            declarator: (function_declarator [615, 7] - [615, 22]
              declarator: (field_identifier [615, 7] - [615, 20])
              parameters: (parameter_list [615, 20] - [615, 22])))
          (field_declaration [616, 2] - [616, 23]
            type: (primitive_type [616, 2] - [616, 6])
            declarator: (function_declarator [616, 7] - [616, 22]
              declarator: (field_identifier [616, 7] - [616, 20])
              parameters: (parameter_list [616, 20] - [616, 22])))
          (field_declaration [617, 2] - [617, 22]
            type: (primitive_type [617, 2] - [617, 6])
            declarator: (function_declarator [617, 7] - [617, 21]
              declarator: (field_identifier [617, 7] - [617, 19])
              parameters: (parameter_list [617, 19] - [617, 21])))
          (field_declaration [618, 2] - [618, 22]
            type: (primitive_type [618, 2] - [618, 6])
            declarator: (function_declarator [618, 7] - [618, 21]
              declarator: (field_identifier [618, 7] - [618, 19])
              parameters: (parameter_list [618, 19] - [618, 21])))
          (field_declaration [619, 2] - [619, 21]
            type: (primitive_type [619, 2] - [619, 6])
            declarator: (function_declarator [619, 7] - [619, 20]
              declarator: (field_identifier [619, 7] - [619, 18])
              parameters: (parameter_list [619, 18] - [619, 20])))
          (field_declaration [621, 2] - [621, 48]
            type: (primitive_type [621, 2] - [621, 6])
            declarator: (function_declarator [621, 7] - [621, 47]
              declarator: (field_identifier [621, 7] - [621, 19])
              parameters: (parameter_list [621, 19] - [621, 47]
                (parameter_declaration [621, 20] - [621, 46]
                  (type_qualifier [621, 20] - [621, 25])
                  type: (qualified_identifier [621, 26] - [621, 37]
                    scope: (namespace_identifier [621, 26] - [621, 29])
                    name: (type_identifier [621, 31] - [621, 37]))
                  declarator: (reference_declarator [621, 37] - [621, 46]
                    (identifier [621, 39] - [621, 46]))))))
          (field_declaration [622, 2] - [622, 78]
            type: (primitive_type [622, 2] - [622, 6])
            declarator: (function_declarator [622, 7] - [622, 77]
              declarator: (field_identifier [622, 7] - [622, 19])
              parameters: (parameter_list [622, 19] - [622, 77]
                (parameter_declaration [622, 20] - [622, 46]
                  (type_qualifier [622, 20] - [622, 25])
                  type: (qualified_identifier [622, 26] - [622, 37]
                    scope: (namespace_identifier [622, 26] - [622, 29])
                    name: (type_identifier [622, 31] - [622, 37]))
                  declarator: (reference_declarator [622, 37] - [622, 46]
                    (identifier [622, 39] - [622, 46])))
                (parameter_declaration [622, 48] - [622, 66]
                  type: (qualified_identifier [622, 48] - [622, 59]
                    scope: (namespace_identifier [622, 48] - [622, 51])
                    name: (type_identifier [622, 53] - [622, 59]))
                  declarator: (identifier [622, 60] - [622, 66]))
                (parameter_declaration [622, 68] - [622, 76]
                  type: (primitive_type [622, 68] - [622, 71])
                  declarator: (identifier [622, 72] - [622, 76])))))
          (access_specifier [624, 1] - [624, 8])
          (declaration [625, 2] - [625, 92]
            declarator: (function_declarator [625, 2] - [625, 91]
              declarator: (identifier [625, 2] - [625, 14])
              parameters: (parameter_list [625, 14] - [625, 91]
                (parameter_declaration [625, 15] - [625, 30]
                  type: (primitive_type [625, 15] - [625, 19])
                  declarator: (identifier [625, 20] - [625, 30]))
                (parameter_declaration [625, 32] - [625, 48]
                  type: (qualified_identifier [625, 32] - [625, 43]
                    scope: (namespace_identifier [625, 32] - [625, 35])
                    name: (type_identifier [625, 37] - [625, 43]))
                  declarator: (identifier [625, 44] - [625, 48]))
                (parameter_declaration [625, 50] - [625, 58]
                  type: (primitive_type [625, 50] - [625, 53])
                  declarator: (identifier [625, 54] - [625, 58]))
                (parameter_declaration [625, 60] - [625, 74]
                  type: (primitive_type [625, 60] - [625, 63])
                  declarator: (identifier [625, 64] - [625, 74]))
                (parameter_declaration [625, 76] - [625, 90]
                  type: (primitive_type [625, 76] - [625, 80])
                  declarator: (identifier [625, 81] - [625, 90])))))
          (declaration [626, 2] - [626, 18]
            declarator: (function_declarator [626, 2] - [626, 17]
              declarator: (destructor_name [626, 2] - [626, 15]
                (identifier [626, 3] - [626, 15]))
              parameters: (parameter_list [626, 15] - [626, 17])))
          (field_declaration [628, 2] - [628, 113]
            type: (primitive_type [628, 2] - [628, 6])
            declarator: (function_declarator [628, 7] - [628, 112]
              declarator: (field_identifier [628, 7] - [628, 22])
              parameters: (parameter_list [628, 22] - [628, 112]
                (parameter_declaration [628, 23] - [628, 49]
                  (type_qualifier [628, 23] - [628, 28])
                  type: (qualified_identifier [628, 29] - [628, 40]
                    scope: (namespace_identifier [628, 29] - [628, 32])
                    name: (type_identifier [628, 34] - [628, 40]))
                  declarator: (reference_declarator [628, 40] - [628, 49]
                    (identifier [628, 42] - [628, 49])))
                (parameter_declaration [628, 51] - [628, 84]
                  (type_qualifier [628, 51] - [628, 56])
                  type: (qualified_identifier [628, 57] - [628, 68]
                    scope: (namespace_identifier [628, 57] - [628, 60])
                    name: (type_identifier [628, 62] - [628, 68]))
                  declarator: (reference_declarator [628, 68] - [628, 84]
                    (identifier [628, 70] - [628, 84])))
                (parameter_declaration [628, 86] - [628, 111]
                  (type_qualifier [628, 86] - [628, 91])
                  type: (sized_type_specifier [628, 92] - [628, 106])
                  declarator: (identifier [628, 107] - [628, 111])))))
          (field_declaration [630, 2] - [630, 49]
            type: (primitive_type [630, 2] - [630, 6])
            declarator: (function_declarator [630, 7] - [630, 48]
              declarator: (field_identifier [630, 7] - [630, 14])
              parameters: (parameter_list [630, 14] - [630, 48]
                (parameter_declaration [630, 15] - [630, 32]
                  type: (type_identifier [630, 15] - [630, 20])
                  declarator: (pointer_declarator [630, 20] - [630, 32]
                    declarator: (identifier [630, 22] - [630, 32])))
                (parameter_declaration [630, 34] - [630, 47]
                  type: (primitive_type [630, 34] - [630, 41])
                  declarator: (identifier [630, 42] - [630, 47])))))
          (field_declaration [631, 2] - [631, 50]
            type: (primitive_type [631, 2] - [631, 6])
            declarator: (function_declarator [631, 7] - [631, 49]
              declarator: (field_identifier [631, 7] - [631, 21])
              parameters: (parameter_list [631, 21] - [631, 49]
                (parameter_declaration [631, 22] - [631, 35]
                  type: (primitive_type [631, 22] - [631, 26])
                  declarator: (identifier [631, 27] - [631, 35]))
                (parameter_declaration [631, 37] - [631, 48]
                  type: (primitive_type [631, 37] - [631, 45])
                  declarator: (identifier [631, 46] - [631, 48])))))
          (field_declaration [632, 2] - [632, 55]
            type: (primitive_type [632, 2] - [632, 6])
            declarator: (function_declarator [632, 7] - [632, 54]
              declarator: (field_identifier [632, 7] - [632, 20])
              parameters: (parameter_list [632, 20] - [632, 54]
                (parameter_declaration [632, 21] - [632, 38]
                  type: (type_identifier [632, 21] - [632, 26])
                  declarator: (pointer_declarator [632, 26] - [632, 38]
                    declarator: (identifier [632, 28] - [632, 38])))
                (parameter_declaration [632, 40] - [632, 53]
                  type: (primitive_type [632, 40] - [632, 47])
                  declarator: (identifier [632, 48] - [632, 53])))))
          (field_declaration [633, 2] - [633, 55]
            type: (primitive_type [633, 2] - [633, 6])
            declarator: (function_declarator [633, 7] - [633, 54]
              declarator: (field_identifier [633, 7] - [633, 20])
              parameters: (parameter_list [633, 20] - [633, 54]
                (parameter_declaration [633, 21] - [633, 38]
                  type: (type_identifier [633, 21] - [633, 26])
                  declarator: (pointer_declarator [633, 26] - [633, 38]
                    declarator: (identifier [633, 28] - [633, 38])))
                (parameter_declaration [633, 40] - [633, 53]
                  type: (primitive_type [633, 40] - [633, 47])
                  declarator: (identifier [633, 48] - [633, 53])))))
          (field_declaration [634, 2] - [634, 53]
            type: (primitive_type [634, 2] - [634, 6])
            declarator: (function_declarator [634, 7] - [634, 52]
              declarator: (field_identifier [634, 7] - [634, 18])
              parameters: (parameter_list [634, 18] - [634, 52]
                (parameter_declaration [634, 19] - [634, 36]
                  type: (type_identifier [634, 19] - [634, 24])
                  declarator: (pointer_declarator [634, 24] - [634, 36]
                    declarator: (identifier [634, 26] - [634, 36])))
                (parameter_declaration [634, 38] - [634, 51]
                  type: (primitive_type [634, 38] - [634, 45])
                  declarator: (identifier [634, 46] - [634, 51])))))
          (field_declaration [635, 2] - [635, 55]
            type: (primitive_type [635, 2] - [635, 6])
            declarator: (function_declarator [635, 7] - [635, 54]
              declarator: (field_identifier [635, 7] - [635, 20])
              parameters: (parameter_list [635, 20] - [635, 54]
                (parameter_declaration [635, 21] - [635, 38]
                  type: (type_identifier [635, 21] - [635, 26])
                  declarator: (pointer_declarator [635, 26] - [635, 38]
                    declarator: (identifier [635, 28] - [635, 38])))
                (parameter_declaration [635, 40] - [635, 53]
                  type: (primitive_type [635, 40] - [635, 47])
                  declarator: (identifier [635, 48] - [635, 53])))))
          (field_declaration [636, 2] - [636, 53]
            type: (primitive_type [636, 2] - [636, 6])
            declarator: (function_declarator [636, 7] - [636, 52]
              declarator: (field_identifier [636, 7] - [636, 18])
              parameters: (parameter_list [636, 18] - [636, 52]
                (parameter_declaration [636, 19] - [636, 36]
                  type: (type_identifier [636, 19] - [636, 24])
                  declarator: (pointer_declarator [636, 24] - [636, 36]
                    declarator: (identifier [636, 26] - [636, 36])))
                (parameter_declaration [636, 38] - [636, 51]
                  type: (primitive_type [636, 38] - [636, 45])
                  declarator: (identifier [636, 46] - [636, 51])))))
          (field_declaration [637, 2] - [637, 41]
            type: (primitive_type [637, 2] - [637, 6])
            declarator: (function_declarator [637, 7] - [637, 40]
              declarator: (field_identifier [637, 7] - [637, 21])
              parameters: (parameter_list [637, 21] - [637, 40]
                (parameter_declaration [637, 22] - [637, 39]
                  type: (type_identifier [637, 22] - [637, 27])
                  declarator: (pointer_declarator [637, 27] - [637, 39]
                    declarator: (identifier [637, 29] - [637, 39]))))))))
      (function_definition [640, 1] - [651, 2]
        declarator: (function_declarator [640, 1] - [640, 104]
          declarator: (qualified_identifier [640, 1] - [640, 27]
            scope: (namespace_identifier [640, 1] - [640, 13])
            name: (identifier [640, 15] - [640, 27]))
          parameters: (parameter_list [640, 27] - [640, 104]
            (parameter_declaration [640, 28] - [640, 43]
              type: (primitive_type [640, 28] - [640, 32])
              declarator: (identifier [640, 33] - [640, 43]))
            (parameter_declaration [640, 45] - [640, 61]
              type: (qualified_identifier [640, 45] - [640, 56]
                scope: (namespace_identifier [640, 45] - [640, 48])
                name: (type_identifier [640, 50] - [640, 56]))
              declarator: (identifier [640, 57] - [640, 61]))
            (parameter_declaration [640, 63] - [640, 71]
              type: (primitive_type [640, 63] - [640, 66])
              declarator: (identifier [640, 67] - [640, 71]))
            (parameter_declaration [640, 73] - [640, 87]
              type: (primitive_type [640, 73] - [640, 76])
              declarator: (identifier [640, 77] - [640, 87]))
            (parameter_declaration [640, 89] - [640, 103]
              type: (primitive_type [640, 89] - [640, 93])
              declarator: (identifier [640, 94] - [640, 103]))))
        body: (compound_statement [640, 105] - [651, 2]
          (expression_statement [641, 2] - [641, 16]
            (assignment_expression [641, 2] - [641, 15]
              left: (identifier [641, 2] - [641, 8])
              right: (identifier [641, 11] - [641, 15])))
          (expression_statement [642, 2] - [642, 28]
            (assignment_expression [642, 2] - [642, 27]
              left: (identifier [642, 2] - [642, 14])
              right: (identifier [642, 17] - [642, 27])))
          (expression_statement [643, 2] - [643, 16]
            (assignment_expression [643, 2] - [643, 15]
              left: (identifier [643, 2] - [643, 8])
              right: (identifier [643, 11] - [643, 15])))
          (expression_statement [644, 2] - [644, 28]
            (assignment_expression [644, 2] - [644, 27]
              left: (identifier [644, 2] - [644, 14])
              right: (identifier [644, 17] - [644, 27])))
          (comment [646, 2] - [646, 50])
          (comment [647, 2] - [647, 28])
          (expression_statement [648, 2] - [648, 18]
            (call_expression [648, 2] - [648, 17]
              function: (identifier [648, 2] - [648, 15])
              arguments: (argument_list [648, 15] - [648, 17])))
          (expression_statement [649, 2] - [649, 19]
            (call_expression [649, 2] - [649, 18]
              function: (identifier [649, 2] - [649, 16])
              arguments: (argument_list [649, 16] - [649, 18])))
          (expression_statement [650, 2] - [650, 17]
            (call_expression [650, 2] - [650, 16]
              function: (identifier [650, 2] - [650, 14])
              arguments: (argument_list [650, 14] - [650, 16])))))
      (expression_statement [651, 2] - [651, 3])
      (function_definition [653, 1] - [659, 2]
        declarator: (function_declarator [653, 1] - [653, 30]
          declarator: (qualified_identifier [653, 1] - [653, 28]
            scope: (namespace_identifier [653, 1] - [653, 13])
            name: (destructor_name [653, 15] - [653, 28]
              (identifier [653, 16] - [653, 28])))
          parameters: (parameter_list [653, 28] - [653, 30]))
        body: (compound_statement [653, 31] - [659, 2]
          (comment [654, 2] - [654, 52])
          (comment [655, 2] - [655, 27])
          (expression_statement [656, 2] - [656, 17]
            (call_expression [656, 2] - [656, 16]
              function: (identifier [656, 2] - [656, 14])
              arguments: (argument_list [656, 14] - [656, 16])))
          (expression_statement [657, 2] - [657, 18]
            (call_expression [657, 2] - [657, 17]
              function: (identifier [657, 2] - [657, 15])
              arguments: (argument_list [657, 15] - [657, 17])))
          (expression_statement [658, 2] - [658, 16]
            (call_expression [658, 2] - [658, 15]
              function: (identifier [658, 2] - [658, 13])
              arguments: (argument_list [658, 13] - [658, 15])))))
      (expression_statement [659, 2] - [659, 3])
      (function_definition [661, 1] - [699, 2]
        type: (primitive_type [661, 1] - [661, 5])
        declarator: (function_declarator [661, 6] - [662, 28]
          declarator: (qualified_identifier [661, 6] - [661, 35]
            scope: (namespace_identifier [661, 6] - [661, 18])
            name: (identifier [661, 20] - [661, 35]))
          parameters: (parameter_list [661, 35] - [662, 28]
            (parameter_declaration [661, 36] - [661, 62]
              (type_qualifier [661, 36] - [661, 41])
              type: (qualified_identifier [661, 42] - [661, 53]
                scope: (namespace_identifier [661, 42] - [661, 45])
                name: (type_identifier [661, 47] - [661, 53]))
              declarator: (reference_declarator [661, 53] - [661, 62]
                (identifier [661, 55] - [661, 62])))
            (parameter_declaration [661, 64] - [661, 97]
              (type_qualifier [661, 64] - [661, 69])
              type: (qualified_identifier [661, 70] - [661, 81]
                scope: (namespace_identifier [661, 70] - [661, 73])
                name: (type_identifier [661, 75] - [661, 81]))
              declarator: (reference_declarator [661, 81] - [661, 97]
                (identifier [661, 83] - [661, 97])))
            (parameter_declaration [662, 2] - [662, 27]
              (type_qualifier [662, 2] - [662, 7])
              type: (sized_type_specifier [662, 8] - [662, 22])
              declarator: (identifier [662, 23] - [662, 27]))))
        body: (compound_statement [662, 29] - [699, 2]
          (if_statement [663, 2] - [668, 3]
            condition: (condition_clause [663, 5] - [663, 19]
              value: (unary_expression [663, 6] - [663, 18]
                argument: (identifier [663, 7] - [663, 18])))
            consequence: (compound_statement [664, 2] - [668, 3]
              (declaration [665, 3] - [665, 59]
                type: (type_identifier [665, 3] - [665, 15])
                declarator: (init_declarator [665, 16] - [665, 58]
                  declarator: (identifier [665, 16] - [665, 32])
                  value: (call_expression [665, 35] - [665, 58]
                    function: (identifier [665, 35] - [665, 49])
                    arguments: (argument_list [665, 49] - [665, 58]
                      (identifier [665, 50] - [665, 57])))))
              (if_statement [666, 3] - [667, 17]
                condition: (condition_clause [666, 6] - [666, 107]
                  value: (binary_expression [666, 7] - [666, 106]
                    left: (parenthesized_expression [666, 7] - [666, 54]
                      (binary_expression [666, 8] - [666, 53]
                        left: (field_expression [666, 8] - [666, 32]
                          argument: (identifier [666, 8] - [666, 24])
                          field: (field_identifier [666, 25] - [666, 32]))
                        right: (identifier [666, 35] - [666, 53])))
                    right: (parenthesized_expression [666, 57] - [666, 106]
                      (binary_expression [666, 58] - [666, 105]
                        left: (field_expression [666, 58] - [666, 82]
                          argument: (identifier [666, 58] - [666, 74])
                          field: (field_identifier [666, 75] - [666, 82]))
                        right: (identifier [666, 86] - [666, 105])))))
                consequence: (return_statement [667, 4] - [667, 17]
                  (false [667, 11] - [667, 16])))))
          (preproc_ifdef [670, 0] - [672, 6]
            name: (identifier [670, 7] - [670, 28])
            (expression_statement [671, 2] - [671, 104]
              (call_expression [671, 2] - [671, 103]
                function: (identifier [671, 2] - [671, 18])
                arguments: (argument_list [671, 18] - [671, 103]
                  (string_literal [671, 19] - [671, 55]
                    (escape_sequence [671, 52] - [671, 54]))
                  (call_expression [671, 57] - [671, 72]
                    function: (field_expression [671, 57] - [671, 70]
                      argument: (identifier [671, 57] - [671, 64])
                      field: (field_identifier [671, 65] - [671, 70]))
                    arguments: (argument_list [671, 70] - [671, 72]))
                  (call_expression [671, 74] - [671, 96]
                    function: (field_expression [671, 74] - [671, 94]
                      argument: (identifier [671, 74] - [671, 88])
                      field: (field_identifier [671, 89] - [671, 94]))
                    arguments: (argument_list [671, 94] - [671, 96]))
                  (identifier [671, 98] - [671, 102])))))
          (comment [672, 7] - [672, 31])
          (declaration [673, 2] - [673, 30]
            type: (qualified_identifier [673, 2] - [673, 18]
              scope: (namespace_identifier [673, 2] - [673, 6])
              name: (type_identifier [673, 8] - [673, 18]))
            declarator: (identifier [673, 19] - [673, 29]))
          (declaration [674, 2] - [674, 43]
            type: (qualified_identifier [674, 2] - [674, 23]
              scope: (namespace_identifier [674, 2] - [674, 6])
              name: (qualified_identifier [674, 8] - [674, 23]
                scope: (namespace_identifier [674, 8] - [674, 10])
                name: (qualified_identifier [674, 12] - [674, 23]
                  scope: (namespace_identifier [674, 12] - [674, 15])
                  name: (type_identifier [674, 17] - [674, 23]))))
            declarator: (function_declarator [674, 24] - [674, 42]
              declarator: (identifier [674, 24] - [674, 30])
              parameters: (parameter_list [674, 30] - [674, 42]
                (parameter_declaration [674, 31] - [674, 41]
                  type: (type_identifier [674, 31] - [674, 41])))))
          (comment [675, 2] - [675, 69])
          (comment [676, 2] - [676, 54])
          (declaration [677, 2] - [677, 94]
            type: (auto [677, 2] - [677, 6])
            declarator: (init_declarator [677, 7] - [677, 93]
              declarator: (identifier [677, 7] - [677, 13])
              value: (call_expression [677, 16] - [677, 93]
                function: (qualified_identifier [677, 16] - [677, 39]
                  scope: (namespace_identifier [677, 16] - [677, 20])
                  name: (qualified_identifier [677, 22] - [677, 39]
                    scope: (namespace_identifier [677, 22] - [677, 24])
                    name: (qualified_identifier [677, 26] - [677, 39]
                      scope: (namespace_identifier [677, 26] - [677, 29])
                      name: (identifier [677, 31] - [677, 39]))))
                arguments: (argument_list [677, 39] - [677, 93]
                  (call_expression [677, 40] - [677, 86]
                    function: (qualified_identifier [677, 40] - [677, 70]
                      scope: (namespace_identifier [677, 40] - [677, 44])
                      name: (qualified_identifier [677, 46] - [677, 70]
                        scope: (namespace_identifier [677, 46] - [677, 48])
                        name: (qualified_identifier [677, 50] - [677, 70]
                          scope: (namespace_identifier [677, 50] - [677, 57])
                          name: (identifier [677, 59] - [677, 70]))))
                    arguments: (argument_list [677, 70] - [677, 86]
                      (identifier [677, 71] - [677, 85])))
                  (identifier [677, 88] - [677, 92])))))
          (try_statement [678, 2] - [697, 3]
            body: (compound_statement [678, 6] - [687, 3]
              (comment [679, 3] - [679, 48])
              (comment [680, 3] - [680, 30])
              (if_statement [681, 3] - [684, 37]
                condition: (condition_clause [681, 5] - [681, 31]
                  value: (call_expression [681, 6] - [681, 30]
                    function: (field_expression [681, 6] - [681, 28]
                      argument: (call_expression [681, 6] - [681, 22]
                        function: (field_expression [681, 6] - [681, 20]
                          argument: (identifier [681, 6] - [681, 12])
                          field: (field_identifier [681, 13] - [681, 20]))
                        arguments: (argument_list [681, 20] - [681, 22]))
                      field: (field_identifier [681, 23] - [681, 28]))
                    arguments: (argument_list [681, 28] - [681, 30])))
                consequence: (expression_statement [682, 4] - [682, 37]
                  (call_expression [682, 4] - [682, 36]
                    function: (field_expression [682, 4] - [682, 15]
                      argument: (identifier [682, 4] - [682, 10])
                      field: (field_identifier [682, 11] - [682, 15]))
                    arguments: (argument_list [682, 15] - [682, 36]
                      (call_expression [682, 16] - [682, 35]
                        function: (qualified_identifier [682, 16] - [682, 33]
                          scope: (namespace_identifier [682, 16] - [682, 20])
                          name: (qualified_identifier [682, 22] - [682, 33]
                            scope: (namespace_identifier [682, 22] - [682, 24])
                            name: (qualified_identifier [682, 26] - [682, 33]
                              scope: (namespace_identifier [682, 26] - [682, 29])
                              name: (identifier [682, 31] - [682, 33]))))
                        arguments: (argument_list [682, 33] - [682, 35])))))
                alternative: (expression_statement [684, 4] - [684, 37]
                  (call_expression [684, 4] - [684, 36]
                    function: (field_expression [684, 4] - [684, 15]
                      argument: (identifier [684, 4] - [684, 10])
                      field: (field_identifier [684, 11] - [684, 15]))
                    arguments: (argument_list [684, 15] - [684, 36]
                      (call_expression [684, 16] - [684, 35]
                        function: (qualified_identifier [684, 16] - [684, 33]
                          scope: (namespace_identifier [684, 16] - [684, 20])
                          name: (qualified_identifier [684, 22] - [684, 33]
                            scope: (namespace_identifier [684, 22] - [684, 24])
                            name: (qualified_identifier [684, 26] - [684, 33]
                              scope: (namespace_identifier [684, 26] - [684, 29])
                              name: (identifier [684, 31] - [684, 33]))))
                        arguments: (argument_list [684, 33] - [684, 35]))))))
              (comment [685, 3] - [685, 54])
              (expression_statement [686, 3] - [686, 49]
                (call_expression [686, 3] - [686, 48]
                  function: (field_expression [686, 3] - [686, 17]
                    argument: (identifier [686, 3] - [686, 9])
                    field: (field_identifier [686, 10] - [686, 17]))
                  arguments: (argument_list [686, 17] - [686, 48]
                    (call_expression [686, 18] - [686, 39]
                      function: (qualified_identifier [686, 18] - [686, 30]
                        scope: (namespace_identifier [686, 18] - [686, 22])
                        name: (identifier [686, 24] - [686, 30]))
                      arguments: (argument_list [686, 30] - [686, 39]
                        (identifier [686, 31] - [686, 38])))
                    (identifier [686, 41] - [686, 47])))))
            (ERROR [688, 0] - [690, 5]
              (identifier [688, 7] - [688, 18])
              (parameter_list [689, 8] - [689, 40]
                (parameter_declaration [689, 9] - [689, 39]
                  (type_qualifier [689, 9] - [689, 14])
                  type: (qualified_identifier [689, 15] - [689, 35]
                    scope: (namespace_identifier [689, 15] - [689, 21])
                    name: (type_identifier [689, 23] - [689, 35]))
                  declarator: (reference_declarator [689, 35] - [689, 39]
                    (identifier [689, 37] - [689, 39])))))
            (catch_clause [691, 2] - [697, 3]
              parameters: (parameter_list [691, 8] - [691, 27]
                (parameter_declaration [691, 9] - [691, 26]
                  type: (qualified_identifier [691, 9] - [691, 23]
                    scope: (namespace_identifier [691, 9] - [691, 12])
                    name: (type_identifier [691, 14] - [691, 23]))
                  declarator: (reference_declarator [691, 23] - [691, 26]
                    (identifier [691, 25] - [691, 26]))))
              (ERROR [692, 0] - [692, 6])
              body: (compound_statement [693, 2] - [697, 3]
                (comment [694, 3] - [694, 24])
                (comment [695, 3] - [695, 62])
                (return_statement [696, 3] - [696, 16]
                  (false [696, 10] - [696, 15])))))
          (return_statement [698, 2] - [698, 14]
            (true [698, 9] - [698, 13]))))
      (function_definition [701, 1] - [704, 2]
        type: (primitive_type [701, 1] - [701, 5])
        declarator: (function_declarator [701, 6] - [701, 36]
          declarator: (qualified_identifier [701, 6] - [701, 34]
            scope: (namespace_identifier [701, 6] - [701, 18])
            name: (identifier [701, 20] - [701, 34]))
          parameters: (parameter_list [701, 34] - [701, 36]))
        body: (compound_statement [701, 37] - [704, 2]
          (expression_statement [702, 2] - [702, 27]
            (assignment_expression [702, 2] - [702, 26]
              left: (identifier [702, 2] - [702, 19])
              right: (true [702, 22] - [702, 26])))
          (expression_statement [703, 2] - [703, 65]
            (assignment_expression [703, 2] - [703, 64]
              left: (identifier [703, 2] - [703, 18])
              right: (call_expression [703, 21] - [703, 64]
                function: (qualified_identifier [703, 21] - [703, 32]
                  scope: (namespace_identifier [703, 21] - [703, 24])
                  name: (identifier [703, 26] - [703, 32]))
                arguments: (argument_list [703, 32] - [703, 64]
                  (pointer_expression [703, 33] - [703, 57]
                    argument: (qualified_identifier [703, 34] - [703, 57]
                      scope: (namespace_identifier [703, 34] - [703, 46])
                      name: (identifier [703, 48] - [703, 57])))
                  (this [703, 59] - [703, 63])))))))
      (function_definition [706, 1] - [711, 2]
        type: (primitive_type [706, 1] - [706, 5])
        declarator: (function_declarator [706, 6] - [706, 35]
          declarator: (qualified_identifier [706, 6] - [706, 33]
            scope: (namespace_identifier [706, 6] - [706, 18])
            name: (identifier [706, 20] - [706, 33]))
          parameters: (parameter_list [706, 33] - [706, 35]))
        body: (compound_statement [706, 36] - [711, 2]
          (expression_statement [707, 2] - [707, 28]
            (assignment_expression [707, 2] - [707, 27]
              left: (identifier [707, 2] - [707, 19])
              right: (false [707, 22] - [707, 27])))
          (expression_statement [708, 2] - [708, 47]
            (call_expression [708, 2] - [708, 46]
              function: (identifier [708, 2] - [708, 17])
              arguments: (argument_list [708, 17] - [708, 46]
                (string_literal [708, 18] - [708, 24])
                (string_literal [708, 26] - [708, 37])
                (identifier [708, 39] - [708, 45]))))
          (expression_statement [709, 2] - [709, 25]
            (call_expression [709, 2] - [709, 24]
              function: (identifier [709, 2] - [709, 19])
              arguments: (argument_list [709, 19] - [709, 24]
                (number_literal [709, 20] - [709, 23]))))
          (expression_statement [710, 2] - [710, 26]
            (call_expression [710, 2] - [710, 25]
              function: (field_expression [710, 2] - [710, 23]
                argument: (identifier [710, 2] - [710, 18])
                field: (field_identifier [710, 19] - [710, 23]))
              arguments: (argument_list [710, 23] - [710, 25])))))
      (expression_statement [711, 2] - [711, 3])
      (function_definition [713, 1] - [716, 2]
        type: (primitive_type [713, 1] - [713, 5])
        declarator: (function_declarator [713, 6] - [713, 35]
          declarator: (qualified_identifier [713, 6] - [713, 33]
            scope: (namespace_identifier [713, 6] - [713, 18])
            name: (identifier [713, 20] - [713, 33]))
          parameters: (parameter_list [713, 33] - [713, 35]))
        body: (compound_statement [713, 36] - [716, 2]
          (expression_statement [714, 2] - [714, 26]
            (assignment_expression [714, 2] - [714, 25]
              left: (identifier [714, 2] - [714, 18])
              right: (true [714, 21] - [714, 25])))
          (expression_statement [715, 2] - [715, 63]
            (assignment_expression [715, 2] - [715, 62]
              left: (identifier [715, 2] - [715, 17])
              right: (call_expression [715, 20] - [715, 62]
                function: (qualified_identifier [715, 20] - [715, 31]
                  scope: (namespace_identifier [715, 20] - [715, 23])
                  name: (identifier [715, 25] - [715, 31]))
                arguments: (argument_list [715, 31] - [715, 62]
                  (pointer_expression [715, 32] - [715, 55]
                    argument: (qualified_identifier [715, 33] - [715, 55]
                      scope: (namespace_identifier [715, 33] - [715, 45])
                      name: (identifier [715, 47] - [715, 55])))
                  (this [715, 57] - [715, 61])))))))
      (function_definition [718, 1] - [722, 2]
        type: (primitive_type [718, 1] - [718, 5])
        declarator: (function_declarator [718, 6] - [718, 34]
          declarator: (qualified_identifier [718, 6] - [718, 32]
            scope: (namespace_identifier [718, 6] - [718, 18])
            name: (identifier [718, 20] - [718, 32]))
          parameters: (parameter_list [718, 32] - [718, 34]))
        body: (compound_statement [718, 35] - [722, 2]
          (expression_statement [719, 2] - [719, 27]
            (assignment_expression [719, 2] - [719, 26]
              left: (identifier [719, 2] - [719, 18])
              right: (false [719, 21] - [719, 26])))
          (expression_statement [720, 2] - [720, 25]
            (call_expression [720, 2] - [720, 24]
              function: (identifier [720, 2] - [720, 19])
              arguments: (argument_list [720, 19] - [720, 24]
                (number_literal [720, 20] - [720, 23]))))
          (expression_statement [721, 2] - [721, 25]
            (call_expression [721, 2] - [721, 24]
              function: (field_expression [721, 2] - [721, 22]
                argument: (identifier [721, 2] - [721, 17])
                field: (field_identifier [721, 18] - [721, 22]))
              arguments: (argument_list [721, 22] - [721, 24])))))
      (expression_statement [722, 2] - [722, 3])
      (function_definition [724, 1] - [727, 2]
        type: (primitive_type [724, 1] - [724, 5])
        declarator: (function_declarator [724, 6] - [724, 34]
          declarator: (qualified_identifier [724, 6] - [724, 32]
            scope: (namespace_identifier [724, 6] - [724, 18])
            name: (identifier [724, 20] - [724, 32]))
          parameters: (parameter_list [724, 32] - [724, 34]))
        body: (compound_statement [724, 35] - [727, 2]
          (expression_statement [725, 2] - [725, 25]
            (assignment_expression [725, 2] - [725, 24]
              left: (identifier [725, 2] - [725, 17])
              right: (true [725, 20] - [725, 24])))
          (expression_statement [726, 2] - [726, 61]
            (assignment_expression [726, 2] - [726, 60]
              left: (identifier [726, 2] - [726, 16])
              right: (call_expression [726, 19] - [726, 60]
                function: (qualified_identifier [726, 19] - [726, 30]
                  scope: (namespace_identifier [726, 19] - [726, 22])
                  name: (identifier [726, 24] - [726, 30]))
                arguments: (argument_list [726, 30] - [726, 60]
                  (pointer_expression [726, 31] - [726, 53]
                    argument: (qualified_identifier [726, 32] - [726, 53]
                      scope: (namespace_identifier [726, 32] - [726, 44])
                      name: (identifier [726, 46] - [726, 53])))
                  (this [726, 55] - [726, 59])))))))
      (function_definition [729, 1] - [733, 2]
        type: (primitive_type [729, 1] - [729, 5])
        declarator: (function_declarator [729, 6] - [729, 33]
          declarator: (qualified_identifier [729, 6] - [729, 31]
            scope: (namespace_identifier [729, 6] - [729, 18])
            name: (identifier [729, 20] - [729, 31]))
          parameters: (parameter_list [729, 31] - [729, 33]))
        body: (compound_statement [729, 34] - [733, 2]
          (expression_statement [730, 2] - [730, 26]
            (assignment_expression [730, 2] - [730, 25]
              left: (identifier [730, 2] - [730, 17])
              right: (false [730, 20] - [730, 25])))
          (expression_statement [731, 2] - [731, 25]
            (call_expression [731, 2] - [731, 24]
              function: (identifier [731, 2] - [731, 19])
              arguments: (argument_list [731, 19] - [731, 24]
                (number_literal [731, 20] - [731, 23]))))
          (expression_statement [732, 2] - [732, 24]
            (call_expression [732, 2] - [732, 23]
              function: (field_expression [732, 2] - [732, 21]
                argument: (identifier [732, 2] - [732, 16])
                field: (field_identifier [732, 17] - [732, 21]))
              arguments: (argument_list [732, 21] - [732, 23])))))
      (expression_statement [733, 2] - [733, 3])
      (function_definition [735, 1] - [740, 2]
        type: (primitive_type [735, 1] - [735, 5])
        declarator: (function_declarator [735, 6] - [735, 79]
          declarator: (qualified_identifier [735, 6] - [735, 37]
            scope: (namespace_identifier [735, 6] - [735, 18])
            name: (identifier [735, 20] - [735, 37]))
          parameters: (parameter_list [735, 37] - [735, 79]
            (parameter_declaration [735, 38] - [735, 68]
              type: (qualified_identifier [735, 38] - [735, 61]
                scope: (namespace_identifier [735, 38] - [735, 42])
                name: (qualified_identifier [735, 44] - [735, 61]
                  scope: (namespace_identifier [735, 44] - [735, 46])
                  name: (qualified_identifier [735, 48] - [735, 61]
                    scope: (namespace_identifier [735, 48] - [735, 51])
                    name: (type_identifier [735, 53] - [735, 61]))))
              declarator: (identifier [735, 62] - [735, 68]))
            (parameter_declaration [735, 70] - [735, 78]
              type: (primitive_type [735, 70] - [735, 73])
              declarator: (identifier [735, 74] - [735, 78]))))
        body: (compound_statement [735, 80] - [740, 2]
          (declaration [736, 2] - [736, 23]
            type: (type_identifier [736, 2] - [736, 14])
            declarator: (identifier [736, 15] - [736, 22]))
          (expression_statement [737, 2] - [737, 30]
            (assignment_expression [737, 2] - [737, 29]
              left: (field_expression [737, 2] - [737, 23]
                argument: (identifier [737, 2] - [737, 9])
                field: (field_identifier [737, 10] - [737, 23]))
              right: (number_literal [737, 26] - [737, 29])))
          (expression_statement [739, 2] - [739, 191]
            (call_expression [739, 2] - [739, 190]
              function: (identifier [739, 2] - [739, 14])
              arguments: (argument_list [739, 14] - [739, 190]
                (call_expression [739, 15] - [739, 153]
                  function: (identifier [739, 15] - [739, 27])
                  arguments: (argument_list [739, 27] - [739, 153]
                    (identifier [739, 28] - [739, 47])
                    (identifier [739, 49] - [739, 56])
                    (number_literal [739, 58] - [739, 60])
                    (identifier [739, 62] - [739, 66])
                    (call_expression [739, 68] - [739, 104]
                      function: (field_expression [739, 68] - [739, 102]
                        argument: (call_expression [739, 68] - [739, 96]
                          function: (field_expression [739, 68] - [739, 94]
                            argument: (call_expression [739, 68] - [739, 84]
                              function: (field_expression [739, 68] - [739, 82]
                                argument: (identifier [739, 68] - [739, 74])
                                field: (field_identifier [739, 75] - [739, 82]))
                              arguments: (argument_list [739, 82] - [739, 84]))
                            field: (field_identifier [739, 85] - [739, 94]))
                          arguments: (argument_list [739, 94] - [739, 96]))
                        field: (field_identifier [739, 97] - [739, 102]))
                      arguments: (argument_list [739, 102] - [739, 104]))
                    (binary_expression [739, 106] - [739, 152]
                      left: (number_literal [739, 106] - [739, 107])
                      right: (call_expression [739, 108] - [739, 152]
                        function: (identifier [739, 108] - [739, 114])
                        arguments: (argument_list [739, 114] - [739, 152]
                          (call_expression [739, 115] - [739, 151]
                            function: (field_expression [739, 115] - [739, 149]
                              argument: (call_expression [739, 115] - [739, 143]
                                function: (field_expression [739, 115] - [739, 141]
                                  argument: (call_expression [739, 115] - [739, 131]
                                    function: (field_expression [739, 115] - [739, 129]
                                      argument: (identifier [739, 115] - [739, 121])
                                      field: (field_identifier [739, 122] - [739, 129]))
                                    arguments: (argument_list [739, 129] - [739, 131]))
                                  field: (field_identifier [739, 132] - [739, 141]))
                                arguments: (argument_list [739, 141] - [739, 143]))
                              field: (field_identifier [739, 144] - [739, 149]))
                            arguments: (argument_list [739, 149] - [739, 151])))))))
                (call_expression [739, 155] - [739, 183]
                  function: (field_expression [739, 155] - [739, 181]
                    argument: (call_expression [739, 155] - [739, 171]
                      function: (field_expression [739, 155] - [739, 169]
                        argument: (identifier [739, 155] - [739, 161])
                        field: (field_identifier [739, 162] - [739, 169]))
                      arguments: (argument_list [739, 169] - [739, 171]))
                    field: (field_identifier [739, 172] - [739, 181]))
                  arguments: (argument_list [739, 181] - [739, 183]))
                (identifier [739, 185] - [739, 189]))))))
      (expression_statement [740, 2] - [740, 3])
      (function_definition [742, 1] - [747, 2]
        type: (primitive_type [742, 1] - [742, 5])
        declarator: (function_declarator [742, 6] - [742, 49]
          declarator: (qualified_identifier [742, 6] - [742, 30]
            scope: (namespace_identifier [742, 6] - [742, 18])
            name: (identifier [742, 20] - [742, 30]))
          parameters: (parameter_list [742, 30] - [742, 49]
            (parameter_declaration [742, 31] - [742, 48]
              type: (type_identifier [742, 31] - [742, 41])
              declarator: (identifier [742, 42] - [742, 48]))))
        body: (compound_statement [742, 50] - [747, 2]
          (for_statement [743, 2] - [745, 16]
            initializer: (declaration [743, 7] - [743, 17]
              type: (primitive_type [743, 7] - [743, 10])
              declarator: (init_declarator [743, 11] - [743, 16]
                declarator: (identifier [743, 11] - [743, 12])
                value: (number_literal [743, 15] - [743, 16])))
            condition: (binary_expression [743, 18] - [743, 39]
              left: (identifier [743, 18] - [743, 19])
              right: (call_expression [743, 22] - [743, 39]
                function: (field_expression [743, 22] - [743, 37]
                  argument: (identifier [743, 22] - [743, 32])
                  field: (field_identifier [743, 33] - [743, 37]))
                arguments: (argument_list [743, 37] - [743, 39])))
            update: (update_expression [743, 41] - [743, 44]
              argument: (identifier [743, 41] - [743, 42]))
            (if_statement [744, 3] - [745, 16]
              condition: (condition_clause [744, 6] - [744, 86]
                value: (binary_expression [744, 7] - [744, 85]
                  left: (parenthesized_expression [744, 7] - [744, 46]
                    (binary_expression [744, 8] - [744, 45]
                      left: (field_expression [744, 8] - [744, 28]
                        argument: (subscript_expression [744, 8] - [744, 21]
                          argument: (identifier [744, 8] - [744, 18])
                          index: (identifier [744, 19] - [744, 20]))
                        field: (field_identifier [744, 22] - [744, 28]))
                      right: (field_expression [744, 32] - [744, 45]
                        argument: (identifier [744, 32] - [744, 38])
                        field: (field_identifier [744, 39] - [744, 45]))))
                  right: (parenthesized_expression [744, 50] - [744, 85]
                    (binary_expression [744, 51] - [744, 84]
                      left: (field_expression [744, 51] - [744, 69]
                        argument: (subscript_expression [744, 51] - [744, 64]
                          argument: (identifier [744, 51] - [744, 61])
                          index: (identifier [744, 62] - [744, 63]))
                        field: (field_identifier [744, 65] - [744, 69]))
                      right: (field_expression [744, 73] - [744, 84]
                        argument: (identifier [744, 73] - [744, 79])
                        field: (field_identifier [744, 80] - [744, 84]))))))
              consequence: (return_statement [745, 4] - [745, 16]
                (true [745, 11] - [745, 15]))))
          (return_statement [746, 2] - [746, 15]
            (false [746, 9] - [746, 14]))))
      (function_definition [749, 1] - [751, 2]
        type: (primitive_type [749, 1] - [749, 5])
        declarator: (function_declarator [749, 6] - [749, 47]
          declarator: (qualified_identifier [749, 6] - [749, 28]
            scope: (namespace_identifier [749, 6] - [749, 18])
            name: (identifier [749, 20] - [749, 28]))
          parameters: (parameter_list [749, 28] - [749, 47]
            (parameter_declaration [749, 29] - [749, 46]
              type: (type_identifier [749, 29] - [749, 39])
              declarator: (identifier [749, 40] - [749, 46]))))
        body: (compound_statement [749, 48] - [751, 2]
          (expression_statement [750, 2] - [750, 31]
            (call_expression [750, 2] - [750, 30]
              function: (field_expression [750, 2] - [750, 22]
                argument: (identifier [750, 2] - [750, 12])
                field: (field_identifier [750, 13] - [750, 22]))
              arguments: (argument_list [750, 22] - [750, 30]
                (identifier [750, 23] - [750, 29]))))))
      (function_definition [753, 1] - [936, 2]
        type: (primitive_type [753, 1] - [753, 5])
        declarator: (function_declarator [753, 6] - [753, 29]
          declarator: (qualified_identifier [753, 6] - [753, 27]
            scope: (namespace_identifier [753, 6] - [753, 18])
            name: (identifier [753, 20] - [753, 27]))
          parameters: (parameter_list [753, 27] - [753, 29]))
        body: (compound_statement [753, 30] - [936, 2]
          (while_statement [754, 2] - [935, 3]
            condition: (condition_clause [754, 8] - [754, 25]
              value: (identifier [754, 9] - [754, 24]))
            body: (compound_statement [755, 2] - [935, 3]
              (if_statement [756, 3] - [763, 4]
                condition: (condition_clause [756, 6] - [756, 20]
                  value: (unary_expression [756, 7] - [756, 19]
                    argument: (identifier [756, 8] - [756, 19])))
                consequence: (compound_statement [757, 3] - [763, 4]
                  (declaration [758, 4] - [758, 25]
                    type: (type_identifier [758, 4] - [758, 16])
                    declarator: (identifier [758, 17] - [758, 24]))
                  (expression_statement [759, 4] - [759, 32]
                    (assignment_expression [759, 4] - [759, 31]
                      left: (field_expression [759, 4] - [759, 25]
                        argument: (identifier [759, 4] - [759, 11])
                        field: (field_identifier [759, 12] - [759, 25]))
                      right: (number_literal [759, 28] - [759, 31])))
                  (expression_statement [760, 4] - [760, 84]
                    (call_expression [760, 4] - [760, 83]
                      function: (identifier [760, 4] - [760, 16])
                      arguments: (argument_list [760, 16] - [760, 83]
                        (call_expression [760, 17] - [760, 82]
                          function: (identifier [760, 17] - [760, 29])
                          arguments: (argument_list [760, 29] - [760, 82]
                            (identifier [760, 30] - [760, 48])
                            (identifier [760, 50] - [760, 57])
                            (call_expression [760, 59] - [760, 73]
                              function: (identifier [760, 59] - [760, 71])
                              arguments: (argument_list [760, 71] - [760, 73]))
                            (identifier [760, 75] - [760, 81]))))))
                  (expression_statement [761, 4] - [761, 27]
                    (call_expression [761, 4] - [761, 26]
                      function: (identifier [761, 4] - [761, 21])
                      arguments: (argument_list [761, 21] - [761, 26]
                        (number_literal [761, 22] - [761, 25]))))
                  (continue_statement [762, 4] - [762, 13])))
              (comment [765, 3] - [765, 9])
              (if_statement [766, 3] - [772, 4]
                condition: (condition_clause [766, 6] - [766, 29]
                  value: (unary_expression [766, 7] - [766, 28]
                    argument: (identifier [766, 8] - [766, 28])))
                consequence: (compound_statement [767, 3] - [772, 4]
                  (declaration [768, 4] - [768, 25]
                    type: (type_identifier [768, 4] - [768, 16])
                    declarator: (identifier [768, 17] - [768, 24]))
                  (expression_statement [769, 4] - [769, 32]
                    (assignment_expression [769, 4] - [769, 31]
                      left: (field_expression [769, 4] - [769, 25]
                        argument: (identifier [769, 4] - [769, 11])
                        field: (field_identifier [769, 12] - [769, 25]))
                      right: (number_literal [769, 28] - [769, 31])))
                  (expression_statement [770, 4] - [770, 95]
                    (call_expression [770, 4] - [770, 94]
                      function: (identifier [770, 4] - [770, 16])
                      arguments: (argument_list [770, 16] - [770, 94]
                        (call_expression [770, 17] - [770, 93]
                          function: (identifier [770, 17] - [770, 29])
                          arguments: (argument_list [770, 29] - [770, 93]
                            (identifier [770, 30] - [770, 59])
                            (identifier [770, 61] - [770, 68])
                            (call_expression [770, 70] - [770, 84]
                              function: (identifier [770, 70] - [770, 82])
                              arguments: (argument_list [770, 82] - [770, 84]))
                            (identifier [770, 86] - [770, 92]))))))
                  (expression_statement [771, 4] - [771, 28]
                    (call_expression [771, 4] - [771, 27]
                      function: (identifier [771, 4] - [771, 21])
                      arguments: (argument_list [771, 21] - [771, 27]
                        (number_literal [771, 22] - [771, 26]))))))
              (comment [773, 3] - [773, 9])
              (preproc_ifdef [774, 0] - [776, 6]
                name: (identifier [774, 7] - [774, 28])
                (comment [775, 1] - [775, 81]))
              (comment [776, 7] - [776, 31])
              (expression_statement [778, 3] - [778, 31]
                (call_expression [778, 3] - [778, 30]
                  function: (field_expression [778, 3] - [778, 28]
                    argument: (identifier [778, 3] - [778, 23])
                    field: (field_identifier [778, 24] - [778, 28]))
                  arguments: (argument_list [778, 28] - [778, 30])))
              (for_range_loop [779, 3] - [811, 4]
                type: (type_identifier [779, 8] - [779, 22])
                declarator: (identifier [779, 23] - [779, 36])
                right: (identifier [779, 39] - [779, 56])
                (comment [779, 57] - [779, 63])
                body: (compound_statement [780, 3] - [811, 4]
                  (switch_statement [781, 4] - [810, 5]
                    condition: (condition_clause [781, 11] - [781, 52]
                      value: (field_expression [781, 12] - [781, 51]
                        argument: (field_expression [781, 12] - [781, 36]
                          argument: (identifier [781, 12] - [781, 25])
                          field: (field_identifier [781, 26] - [781, 36]))
                        field: (field_identifier [781, 38] - [781, 51])))
                    body: (compound_statement [782, 4] - [810, 5]
                      (case_statement [783, 5] - [809, 6]
                        value: (number_literal [783, 10] - [783, 14])
                        (compound_statement [783, 16] - [809, 6]
                          (comment [783, 17] - [783, 69])
                          (if_statement [784, 6] - [807, 7]
                            condition: (condition_clause [784, 9] - [784, 28]
                              value: (binary_expression [784, 10] - [784, 27]
                                left: (call_expression [784, 10] - [784, 23]
                                  function: (identifier [784, 10] - [784, 21])
                                  arguments: (argument_list [784, 21] - [784, 23]))
                                right: (number_literal [784, 26] - [784, 27])))
                            consequence: (compound_statement [785, 6] - [807, 7]
                              (declaration [786, 7] - [786, 68]
                                type: (type_identifier [786, 7] - [786, 19])
                                declarator: (init_declarator [786, 20] - [786, 67]
                                  declarator: (identifier [786, 20] - [786, 36])
                                  value: (call_expression [786, 39] - [786, 67]
                                    function: (identifier [786, 39] - [786, 53])
                                    arguments: (argument_list [786, 53] - [786, 67]
                                      (call_expression [786, 54] - [786, 66]
                                        function: (identifier [786, 54] - [786, 64])
                                        arguments: (argument_list [786, 64] - [786, 66]))))))
                              (if_statement [787, 7] - [791, 8]
                                condition: (condition_clause [787, 10] - [787, 106]
                                  value: (binary_expression [787, 11] - [787, 105]
                                    left: (parenthesized_expression [787, 11] - [787, 57]
                                      (binary_expression [787, 12] - [787, 56]
                                        left: (field_expression [787, 12] - [787, 36]
                                          argument: (identifier [787, 12] - [787, 28])
                                          field: (field_identifier [787, 29] - [787, 36]))
                                        right: (identifier [787, 40] - [787, 56])))
                                    right: (parenthesized_expression [787, 59] - [787, 105]
                                      (binary_expression [787, 60] - [787, 104]
                                        left: (field_expression [787, 60] - [787, 98]
                                          argument: (field_expression [787, 60] - [787, 84]
                                            argument: (identifier [787, 60] - [787, 76])
                                            field: (field_identifier [787, 77] - [787, 84]))
                                          field: (field_identifier [787, 85] - [787, 98]))
                                        right: (number_literal [787, 100] - [787, 104])))))
                                consequence: (compound_statement [788, 7] - [791, 8]
                                  (expression_statement [789, 8] - [789, 169]
                                    (call_expression [789, 8] - [789, 168]
                                      function: (identifier [789, 8] - [789, 18])
                                      arguments: (argument_list [789, 18] - [789, 168]
                                        (call_expression [789, 19] - [789, 167]
                                          function: (identifier [789, 19] - [789, 31])
                                          arguments: (argument_list [789, 31] - [789, 167]
                                            (field_expression [789, 32] - [789, 56]
                                              argument: (identifier [789, 32] - [789, 48])
                                              field: (field_identifier [789, 49] - [789, 56]))
                                            (field_expression [789, 58] - [789, 82]
                                              argument: (identifier [789, 58] - [789, 74])
                                              field: (field_identifier [789, 75] - [789, 82]))
                                            (field_expression [789, 84] - [789, 106]
                                              argument: (identifier [789, 84] - [789, 100])
                                              field: (field_identifier [789, 101] - [789, 106]))
                                            (identifier [789, 108] - [789, 120])
                                            (field_expression [789, 122] - [789, 143]
                                              argument: (identifier [789, 122] - [789, 138])
                                              field: (field_identifier [789, 139] - [789, 143]))
                                            (field_expression [789, 145] - [789, 166]
                                              argument: (identifier [789, 145] - [789, 161])
                                              field: (field_identifier [789, 162] - [789, 166])))))))
                                  (break_statement [790, 8] - [790, 14])))
                              (if_statement [792, 7] - [798, 8]
                                condition: (condition_clause [792, 10] - [792, 81]
                                  value: (binary_expression [792, 11] - [792, 80]
                                    left: (field_expression [792, 11] - [792, 55]
                                      argument: (field_expression [792, 11] - [792, 35]
                                        argument: (identifier [792, 11] - [792, 24])
                                        field: (field_identifier [792, 25] - [792, 35]))
                                      field: (field_identifier [792, 37] - [792, 55]))
                                    right: (field_expression [792, 59] - [792, 80]
                                      argument: (identifier [792, 59] - [792, 75])
                                      field: (field_identifier [792, 76] - [792, 80]))))
                                consequence: (compound_statement [793, 7] - [798, 8]
                                  (comment [794, 8] - [794, 56])
                                  (comment [795, 8] - [795, 21])
                                  (comment [796, 8] - [796, 25])
                                  (break_statement [797, 8] - [797, 14])))
                              (expression_statement [799, 7] - [799, 76]
                                (assignment_expression [799, 7] - [799, 75]
                                  left: (field_expression [799, 7] - [799, 51]
                                    argument: (field_expression [799, 7] - [799, 31]
                                      argument: (identifier [799, 7] - [799, 20])
                                      field: (field_identifier [799, 21] - [799, 31]))
                                    field: (field_identifier [799, 33] - [799, 51]))
                                  right: (field_expression [799, 54] - [799, 75]
                                    argument: (identifier [799, 54] - [799, 70])
                                    field: (field_identifier [799, 71] - [799, 75]))))
                              (expression_statement [800, 7] - [800, 102]
                                (call_expression [800, 7] - [800, 101]
                                  function: (identifier [800, 7] - [800, 13])
                                  arguments: (argument_list [800, 13] - [800, 101]
                                    (field_expression [800, 14] - [800, 54]
                                      argument: (field_expression [800, 14] - [800, 52]
                                        argument: (field_expression [800, 14] - [800, 38]
                                          argument: (identifier [800, 14] - [800, 27])
                                          field: (field_identifier [800, 28] - [800, 38]))
                                        field: (field_identifier [800, 40] - [800, 52]))
                                      field: (field_identifier [800, 53] - [800, 54]))
                                    (field_expression [800, 56] - [800, 77]
                                      argument: (identifier [800, 56] - [800, 72])
                                      field: (field_identifier [800, 73] - [800, 77]))
                                    (field_expression [800, 79] - [800, 100]
                                      argument: (identifier [800, 79] - [800, 95])
                                      field: (field_identifier [800, 96] - [800, 100])))))
                              (expression_statement [801, 7] - [801, 55]
                                (assignment_expression [801, 7] - [801, 54]
                                  left: (field_expression [801, 7] - [801, 48]
                                    argument: (field_expression [801, 7] - [801, 31]
                                      argument: (identifier [801, 7] - [801, 20])
                                      field: (field_identifier [801, 21] - [801, 31]))
                                    field: (field_identifier [801, 33] - [801, 48]))
                                  right: (number_literal [801, 51] - [801, 54])))
                              (preproc_ifdef [802, 1] - [805, 7]
                                name: (identifier [802, 8] - [802, 29])
                                (expression_statement [803, 7] - [803, 145]
                                  (call_expression [803, 7] - [803, 144]
                                    function: (identifier [803, 7] - [803, 23])
                                    arguments: (argument_list [803, 23] - [803, 144]
                                      (string_literal [803, 24] - [803, 66]
                                        (escape_sequence [803, 63] - [803, 65]))
                                      (field_expression [803, 68] - [803, 112]
                                        argument: (field_expression [803, 68] - [803, 92]
                                          argument: (identifier [803, 68] - [803, 81])
                                          field: (field_identifier [803, 82] - [803, 92]))
                                        field: (field_identifier [803, 94] - [803, 112]))
                                      (number_literal [803, 114] - [803, 116])
                                      (comment [803, 116] - [803, 143]))))
                                (expression_statement [804, 7] - [804, 76]
                                  (call_expression [804, 7] - [804, 75]
                                    function: (identifier [804, 7] - [804, 23])
                                    arguments: (argument_list [804, 23] - [804, 75]
                                      (string_literal [804, 24] - [804, 74]
                                        (escape_sequence [804, 71] - [804, 73]))))))
                              (comment [805, 8] - [805, 32])
                              (expression_statement [806, 7] - [806, 45]
                                (call_expression [806, 7] - [806, 44]
                                  function: (identifier [806, 7] - [806, 23])
                                  arguments: (argument_list [806, 23] - [806, 44]
                                    (field_expression [806, 24] - [806, 43]
                                      argument: (identifier [806, 24] - [806, 37])
                                      field: (field_identifier [806, 38] - [806, 43])))))))
                          (break_statement [808, 6] - [808, 12])))))))
              (declaration [812, 3] - [812, 30]
                type: (type_identifier [812, 3] - [812, 10])
                declarator: (init_declarator [812, 11] - [812, 29]
                  declarator: (identifier [812, 11] - [812, 19])
                  value: (call_expression [812, 22] - [812, 29]
                    function: (identifier [812, 22] - [812, 27])
                    arguments: (argument_list [812, 27] - [812, 29]))))
              (for_range_loop [813, 3] - [931, 4]
                type: (type_identifier [813, 8] - [813, 22])
                declarator: (identifier [813, 23] - [813, 36])
                right: (identifier [813, 39] - [813, 56])
                body: (compound_statement [814, 3] - [931, 4]
                  (if_statement [815, 4] - [930, 5]
                    condition: (condition_clause [815, 7] - [815, 67]
                      value: (binary_expression [815, 8] - [815, 66]
                        left: (identifier [815, 8] - [815, 16])
                        right: (binary_expression [815, 19] - [815, 66]
                          left: (field_expression [815, 19] - [815, 42]
                            argument: (identifier [815, 19] - [815, 32])
                            field: (field_identifier [815, 33] - [815, 42]))
                          right: (field_expression [815, 45] - [815, 66]
                            argument: (identifier [815, 45] - [815, 58])
                            field: (field_identifier [815, 59] - [815, 66])))))
                    (comment [815, 67] - [815, 83])
                    consequence: (compound_statement [816, 4] - [930, 5]
                      (declaration [817, 5] - [817, 34]
                        type: (primitive_type [817, 5] - [817, 9])
                        declarator: (init_declarator [817, 10] - [817, 33]
                          declarator: (identifier [817, 10] - [817, 26])
                          value: (true [817, 29] - [817, 33])))
                      (preproc_ifdef [818, 0] - [820, 6]
                        name: (identifier [818, 7] - [818, 28])
                        (expression_statement [819, 5] - [819, 111]
                          (call_expression [819, 5] - [819, 110]
                            function: (identifier [819, 5] - [819, 21])
                            arguments: (argument_list [819, 21] - [819, 110]
                              (string_literal [819, 22] - [819, 68]
                                (escape_sequence [819, 65] - [819, 67]))
                              (field_expression [819, 70] - [819, 109]
                                argument: (field_expression [819, 70] - [819, 94]
                                  argument: (identifier [819, 70] - [819, 83])
                                  field: (field_identifier [819, 84] - [819, 94]))
                                field: (field_identifier [819, 96] - [819, 109]))))))
                      (comment [820, 7] - [820, 34])
                      (switch_statement [821, 5] - [927, 6]
                        condition: (condition_clause [821, 12] - [821, 53]
                          value: (field_expression [821, 13] - [821, 52]
                            argument: (field_expression [821, 13] - [821, 37]
                              argument: (identifier [821, 13] - [821, 26])
                              field: (field_identifier [821, 27] - [821, 37]))
                            field: (field_identifier [821, 39] - [821, 52])))
                        body: (compound_statement [822, 5] - [927, 6]
                          (case_statement [823, 5] - [832, 6]
                            value: (number_literal [823, 10] - [823, 14])
                            (compound_statement [823, 16] - [832, 6]
                              (comment [823, 17] - [823, 26])
                              (expression_statement [824, 6] - [824, 52]
                                (assignment_expression [824, 6] - [824, 51]
                                  left: (field_expression [824, 6] - [824, 45]
                                    argument: (field_expression [824, 6] - [824, 30]
                                      argument: (identifier [824, 6] - [824, 19])
                                      field: (field_identifier [824, 20] - [824, 30]))
                                    field: (field_identifier [824, 32] - [824, 45]))
                                  right: (number_literal [824, 48] - [824, 51])))
                              (expression_statement [825, 6] - [825, 56]
                                (call_expression [825, 6] - [825, 55]
                                  function: (identifier [825, 6] - [825, 12])
                                  arguments: (argument_list [825, 12] - [825, 55]
                                    (field_expression [825, 13] - [825, 50]
                                      argument: (field_expression [825, 13] - [825, 37]
                                        argument: (identifier [825, 13] - [825, 26])
                                        field: (field_identifier [825, 27] - [825, 37]))
                                      field: (field_identifier [825, 39] - [825, 50]))
                                    (string_literal [825, 52] - [825, 54]))))
                              (expression_statement [826, 6] - [826, 60]
                                (call_expression [826, 6] - [826, 59]
                                  function: (identifier [826, 6] - [826, 12])
                                  arguments: (argument_list [826, 12] - [826, 59]
                                    (field_expression [826, 13] - [826, 54]
                                      argument: (field_expression [826, 13] - [826, 37]
                                        argument: (identifier [826, 13] - [826, 26])
                                        field: (field_identifier [826, 27] - [826, 37]))
                                      field: (field_identifier [826, 39] - [826, 54]))
                                    (string_literal [826, 56] - [826, 58]))))
                              (expression_statement [827, 6] - [827, 54]
                                (assignment_expression [827, 6] - [827, 53]
                                  left: (field_expression [827, 6] - [827, 47]
                                    argument: (field_expression [827, 6] - [827, 30]
                                      argument: (identifier [827, 6] - [827, 19])
                                      field: (field_identifier [827, 20] - [827, 30]))
                                    field: (field_identifier [827, 32] - [827, 47]))
                                  right: (number_literal [827, 50] - [827, 53])))
                              (preproc_ifdef [828, 0] - [830, 6]
                                name: (identifier [828, 7] - [828, 28])
                                (expression_statement [829, 6] - [829, 74]
                                  (call_expression [829, 6] - [829, 73]
                                    function: (identifier [829, 6] - [829, 22])
                                    arguments: (argument_list [829, 22] - [829, 73]
                                      (string_literal [829, 23] - [829, 72]
                                        (escape_sequence [829, 69] - [829, 71]))))))
                              (comment [830, 7] - [830, 31])
                              (break_statement [831, 6] - [831, 12])))
                          (case_statement [833, 5] - [840, 6]
                            value: (number_literal [833, 10] - [833, 14])
                            (compound_statement [833, 16] - [840, 6]
                              (comment [833, 17] - [833, 24])
                              (expression_statement [834, 6] - [834, 52]
                                (assignment_expression [834, 6] - [834, 51]
                                  left: (field_expression [834, 6] - [834, 47]
                                    argument: (field_expression [834, 6] - [834, 30]
                                      argument: (identifier [834, 6] - [834, 19])
                                      field: (field_identifier [834, 20] - [834, 30]))
                                    field: (field_identifier [834, 32] - [834, 47]))
                                  right: (number_literal [834, 50] - [834, 51])))
                              (expression_statement [835, 6] - [835, 38]
                                (assignment_expression [835, 6] - [835, 37]
                                  left: (field_expression [835, 6] - [835, 30]
                                    argument: (identifier [835, 6] - [835, 19])
                                    field: (field_identifier [835, 20] - [835, 30]))
                                  right: (null [835, 33] - [835, 37])))
                              (preproc_ifdef [836, 0] - [838, 6]
                                name: (identifier [836, 7] - [836, 28])
                                (expression_statement [837, 6] - [837, 72]
                                  (call_expression [837, 6] - [837, 71]
                                    function: (identifier [837, 6] - [837, 22])
                                    arguments: (argument_list [837, 22] - [837, 71]
                                      (string_literal [837, 23] - [837, 70]
                                        (escape_sequence [837, 67] - [837, 69]))))))
                              (comment [838, 7] - [838, 31])
                              (break_statement [839, 6] - [839, 12])))
                          (case_statement [841, 5] - [852, 6]
                            value: (number_literal [841, 10] - [841, 14])
                            (compound_statement [841, 16] - [852, 6]
                              (comment [841, 17] - [841, 41])
                              (if_statement [842, 6] - [847, 7]
                                condition: (condition_clause [842, 9] - [842, 34]
                                  value: (binary_expression [842, 10] - [842, 33]
                                    left: (call_expression [842, 10] - [842, 20]
                                      function: (identifier [842, 10] - [842, 18])
                                      arguments: (argument_list [842, 18] - [842, 20]))
                                    right: (identifier [842, 24] - [842, 33])))
                                consequence: (compound_statement [843, 6] - [847, 7]
                                  (expression_statement [844, 7] - [844, 42]
                                    (assignment_expression [844, 7] - [844, 41]
                                      left: (field_expression [844, 7] - [844, 30]
                                        argument: (identifier [844, 7] - [844, 20])
                                        field: (field_identifier [844, 21] - [844, 30]))
                                      right: (identifier [844, 33] - [844, 41])))
                                  (expression_statement [845, 7] - [845, 32]
                                    (assignment_expression [845, 7] - [845, 31]
                                      left: (identifier [845, 7] - [845, 23])
                                      right: (false [845, 26] - [845, 31])))
                                  (expression_statement [846, 7] - [846, 217]
                                    (call_expression [846, 7] - [846, 216]
                                      function: (identifier [846, 7] - [846, 19])
                                      arguments: (argument_list [846, 19] - [846, 216]
                                        (call_expression [846, 20] - [846, 215]
                                          function: (identifier [846, 20] - [846, 32])
                                          arguments: (argument_list [846, 32] - [846, 215]
                                            (identifier [846, 33] - [846, 57])
                                            (call_expression [846, 59] - [846, 99]
                                              function: (identifier [846, 59] - [846, 72])
                                              arguments: (argument_list [846, 72] - [846, 99]
                                                (pointer_expression [846, 73] - [846, 98]
                                                  argument: (field_expression [846, 74] - [846, 98]
                                                    argument: (identifier [846, 74] - [846, 87])
                                                    field: (field_identifier [846, 88] - [846, 98])))))
                                            (field_expression [846, 101] - [846, 120]
                                              argument: (identifier [846, 101] - [846, 114])
                                              field: (field_identifier [846, 115] - [846, 120]))
                                            (identifier [846, 122] - [846, 128])
                                            (field_expression [846, 130] - [846, 167]
                                              argument: (field_expression [846, 130] - [846, 154]
                                                argument: (identifier [846, 130] - [846, 143])
                                                field: (field_identifier [846, 144] - [846, 154]))
                                              field: (field_identifier [846, 156] - [846, 167]))
                                            (sizeof_expression [846, 169] - [846, 214]
                                              value: (parenthesized_expression [846, 175] - [846, 214]
                                                (field_expression [846, 176] - [846, 213]
                                                  argument: (field_expression [846, 176] - [846, 200]
                                                    argument: (identifier [846, 176] - [846, 189])
                                                    field: (field_identifier [846, 190] - [846, 200]))
                                                  field: (field_identifier [846, 202] - [846, 213])))))))))))
                              (preproc_ifdef [848, 0] - [850, 6]
                                name: (identifier [848, 7] - [848, 28])
                                (expression_statement [849, 6] - [849, 72]
                                  (call_expression [849, 6] - [849, 71]
                                    function: (identifier [849, 6] - [849, 22])
                                    arguments: (argument_list [849, 22] - [849, 71]
                                      (string_literal [849, 23] - [849, 70]
                                        (escape_sequence [849, 67] - [849, 69]))))))
                              (comment [850, 7] - [850, 31])
                              (break_statement [851, 6] - [851, 12])))
                          (case_statement [853, 5] - [858, 6]
                            value: (number_literal [853, 10] - [853, 14])
                            (compound_statement [853, 16] - [858, 6]
                              (comment [853, 17] - [853, 41])
                              (preproc_ifdef [854, 0] - [856, 6]
                                name: (identifier [854, 7] - [854, 28])
                                (expression_statement [855, 6] - [855, 74]
                                  (call_expression [855, 6] - [855, 73]
                                    function: (identifier [855, 6] - [855, 22])
                                    arguments: (argument_list [855, 22] - [855, 73]
                                      (string_literal [855, 23] - [855, 72]
                                        (escape_sequence [855, 69] - [855, 71]))))))
                              (comment [856, 7] - [856, 31])
                              (break_statement [857, 6] - [857, 12])))
                          (case_statement [859, 5] - [865, 6]
                            value: (number_literal [859, 10] - [859, 14])
                            (compound_statement [859, 16] - [865, 6]
                              (comment [859, 17] - [859, 42])
                              (expression_statement [860, 6] - [860, 52]
                                (assignment_expression [860, 6] - [860, 51]
                                  left: (field_expression [860, 6] - [860, 47]
                                    argument: (field_expression [860, 6] - [860, 30]
                                      argument: (identifier [860, 6] - [860, 19])
                                      field: (field_identifier [860, 20] - [860, 30]))
                                    field: (field_identifier [860, 32] - [860, 47]))
                                  right: (number_literal [860, 50] - [860, 51])))
                              (preproc_ifdef [861, 0] - [863, 6]
                                name: (identifier [861, 7] - [861, 28])
                                (expression_statement [862, 6] - [862, 72]
                                  (call_expression [862, 6] - [862, 71]
                                    function: (identifier [862, 6] - [862, 22])
                                    arguments: (argument_list [862, 22] - [862, 71]
                                      (string_literal [862, 23] - [862, 70]
                                        (escape_sequence [862, 67] - [862, 69]))))))
                              (comment [863, 7] - [863, 31])
                              (break_statement [864, 6] - [864, 12])))
                          (case_statement [866, 5] - [883, 6]
                            value: (number_literal [866, 10] - [866, 14])
                            (compound_statement [866, 16] - [883, 6]
                              (comment [866, 17] - [866, 69])
                              (if_statement [867, 6] - [875, 7]
                                condition: (condition_clause [867, 9] - [867, 28]
                                  value: (binary_expression [867, 10] - [867, 27]
                                    left: (call_expression [867, 10] - [867, 23]
                                      function: (identifier [867, 10] - [867, 21])
                                      arguments: (argument_list [867, 21] - [867, 23]))
                                    right: (number_literal [867, 26] - [867, 27])))
                                consequence: (compound_statement [868, 6] - [875, 7]
                                  (declaration [869, 7] - [869, 68]
                                    type: (type_identifier [869, 7] - [869, 19])
                                    declarator: (init_declarator [869, 20] - [869, 67]
                                      declarator: (identifier [869, 20] - [869, 36])
                                      value: (call_expression [869, 39] - [869, 67]
                                        function: (identifier [869, 39] - [869, 53])
                                        arguments: (argument_list [869, 53] - [869, 67]
                                          (call_expression [869, 54] - [869, 66]
                                            function: (identifier [869, 54] - [869, 64])
                                            arguments: (argument_list [869, 64] - [869, 66]))))))
                                  (if_statement [870, 7] - [874, 8]
                                    condition: (condition_clause [870, 10] - [870, 110]
                                      value: (binary_expression [870, 11] - [870, 109]
                                        left: (parenthesized_expression [870, 11] - [870, 57]
                                          (binary_expression [870, 12] - [870, 56]
                                            left: (field_expression [870, 12] - [870, 36]
                                              argument: (identifier [870, 12] - [870, 28])
                                              field: (field_identifier [870, 29] - [870, 36]))
                                            right: (identifier [870, 40] - [870, 56])))
                                        right: (parenthesized_expression [870, 61] - [870, 109]
                                          (binary_expression [870, 62] - [870, 108]
                                            left: (field_expression [870, 62] - [870, 100]
                                              argument: (field_expression [870, 62] - [870, 86]
                                                argument: (identifier [870, 62] - [870, 78])
                                                field: (field_identifier [870, 79] - [870, 86]))
                                              field: (field_identifier [870, 87] - [870, 100]))
                                            right: (number_literal [870, 104] - [870, 108])))))
                                    consequence: (compound_statement [871, 7] - [874, 8]
                                      (expression_statement [872, 8] - [872, 169]
                                        (call_expression [872, 8] - [872, 168]
                                          function: (identifier [872, 8] - [872, 18])
                                          arguments: (argument_list [872, 18] - [872, 168]
                                            (call_expression [872, 19] - [872, 167]
                                              function: (identifier [872, 19] - [872, 31])
                                              arguments: (argument_list [872, 31] - [872, 167]
                                                (field_expression [872, 32] - [872, 56]
                                                  argument: (identifier [872, 32] - [872, 48])
                                                  field: (field_identifier [872, 49] - [872, 56]))
                                                (field_expression [872, 58] - [872, 82]
                                                  argument: (identifier [872, 58] - [872, 74])
                                                  field: (field_identifier [872, 75] - [872, 82]))
                                                (field_expression [872, 84] - [872, 106]
                                                  argument: (identifier [872, 84] - [872, 100])
                                                  field: (field_identifier [872, 101] - [872, 106]))
                                                (identifier [872, 108] - [872, 120])
                                                (field_expression [872, 122] - [872, 143]
                                                  argument: (identifier [872, 122] - [872, 138])
                                                  field: (field_identifier [872, 139] - [872, 143]))
                                                (field_expression [872, 145] - [872, 166]
                                                  argument: (identifier [872, 145] - [872, 161])
                                                  field: (field_identifier [872, 162] - [872, 166])))))))
                                      (break_statement [873, 8] - [873, 14])))))
                              (expression_statement [876, 6] - [876, 55]
                                (assignment_expression [876, 6] - [876, 54]
                                  left: (field_expression [876, 6] - [876, 50]
                                    argument: (field_expression [876, 6] - [876, 30]
                                      argument: (identifier [876, 6] - [876, 19])
                                      field: (field_identifier [876, 20] - [876, 30]))
                                    field: (field_identifier [876, 32] - [876, 50]))
                                  right: (number_literal [876, 53] - [876, 54])))
                              (expression_statement [877, 6] - [877, 52]
                                (assignment_expression [877, 6] - [877, 51]
                                  left: (field_expression [877, 6] - [877, 47]
                                    argument: (field_expression [877, 6] - [877, 30]
                                      argument: (identifier [877, 6] - [877, 19])
                                      field: (field_identifier [877, 20] - [877, 30]))
                                    field: (field_identifier [877, 32] - [877, 47]))
                                  right: (number_literal [877, 50] - [877, 51])))
                              (comment [877, 52] - [877, 66])
                              (preproc_ifdef [878, 0] - [881, 6]
                                name: (identifier [878, 7] - [878, 28])
                                (expression_statement [879, 6] - [879, 154]
                                  (call_expression [879, 6] - [879, 153]
                                    function: (identifier [879, 6] - [879, 22])
                                    arguments: (argument_list [879, 22] - [879, 153]
                                      (string_literal [879, 23] - [879, 75]
                                        (escape_sequence [879, 72] - [879, 74]))
                                      (field_expression [879, 77] - [879, 121]
                                        argument: (field_expression [879, 77] - [879, 101]
                                          argument: (identifier [879, 77] - [879, 90])
                                          field: (field_identifier [879, 91] - [879, 101]))
                                        field: (field_identifier [879, 103] - [879, 121]))
                                      (number_literal [879, 123] - [879, 125])
                                      (comment [879, 125] - [879, 152]))))
                                (expression_statement [880, 6] - [880, 85]
                                  (call_expression [880, 6] - [880, 84]
                                    function: (identifier [880, 6] - [880, 22])
                                    arguments: (argument_list [880, 22] - [880, 84]
                                      (string_literal [880, 23] - [880, 83]
                                        (escape_sequence [880, 80] - [880, 82]))))))
                              (comment [881, 7] - [881, 31])
                              (break_statement [882, 6] - [882, 12])))
                          (case_statement [884, 5] - [914, 6]
                            value: (number_literal [884, 10] - [884, 14])
                            (compound_statement [884, 16] - [914, 6]
                              (comment [884, 17] - [884, 28])
                              (if_statement [885, 6] - [909, 7]
                                condition: (condition_clause [885, 9] - [885, 45]
                                  value: (binary_expression [885, 10] - [885, 44]
                                    left: (call_expression [885, 10] - [885, 20]
                                      function: (identifier [885, 10] - [885, 18])
                                      arguments: (argument_list [885, 18] - [885, 20]))
                                    right: (identifier [885, 24] - [885, 44])))
                                consequence: (compound_statement [886, 6] - [891, 7]
                                  (expression_statement [887, 7] - [887, 54]
                                    (assignment_expression [887, 7] - [887, 53]
                                      left: (field_expression [887, 7] - [887, 48]
                                        argument: (field_expression [887, 7] - [887, 31]
                                          argument: (identifier [887, 7] - [887, 20])
                                          field: (field_identifier [887, 21] - [887, 31]))
                                        field: (field_identifier [887, 33] - [887, 48]))
                                      right: (number_literal [887, 51] - [887, 53])))
                                  (preproc_ifdef [888, 0] - [890, 6]
                                    name: (identifier [888, 7] - [888, 28])
                                    (expression_statement [889, 7] - [889, 61]
                                      (call_expression [889, 7] - [889, 60]
                                        function: (identifier [889, 7] - [889, 23])
                                        arguments: (argument_list [889, 23] - [889, 60]
                                          (string_literal [889, 24] - [889, 59]
                                            (escape_sequence [889, 56] - [889, 58]))))))
                                  (comment [890, 7] - [890, 31]))
                                alternative: (if_statement [892, 11] - [909, 7]
                                  condition: (condition_clause [892, 14] - [892, 46]
                                    value: (binary_expression [892, 15] - [892, 45]
                                      left: (call_expression [892, 15] - [892, 25]
                                        function: (identifier [892, 15] - [892, 23])
                                        arguments: (argument_list [892, 23] - [892, 25]))
                                      right: (identifier [892, 29] - [892, 45])))
                                  consequence: (compound_statement [893, 6] - [899, 7]
                                    (expression_statement [894, 7] - [894, 61]
                                      (assignment_expression [894, 7] - [894, 60]
                                        left: (identifier [894, 7] - [894, 20])
                                        right: (field_expression [894, 23] - [894, 60]
                                          argument: (field_expression [894, 23] - [894, 47]
                                            argument: (identifier [894, 23] - [894, 36])
                                            field: (field_identifier [894, 37] - [894, 47]))
                                          field: (field_identifier [894, 49] - [894, 60]))))
                                    (expression_statement [895, 7] - [895, 53]
                                      (assignment_expression [895, 7] - [895, 52]
                                        left: (field_expression [895, 7] - [895, 48]
                                          argument: (field_expression [895, 7] - [895, 31]
                                            argument: (identifier [895, 7] - [895, 20])
                                            field: (field_identifier [895, 21] - [895, 31]))
                                          field: (field_identifier [895, 33] - [895, 48]))
                                        right: (number_literal [895, 51] - [895, 52])))
                                    (preproc_ifdef [896, 0] - [898, 6]
                                      name: (identifier [896, 7] - [896, 28])
                                      (expression_statement [897, 7] - [897, 58]
                                        (call_expression [897, 7] - [897, 57]
                                          function: (identifier [897, 7] - [897, 23])
                                          arguments: (argument_list [897, 23] - [897, 57]
                                            (string_literal [897, 24] - [897, 56]
                                              (escape_sequence [897, 53] - [897, 55]))))))
                                    (comment [898, 7] - [898, 31]))
                                  alternative: (compound_statement [901, 6] - [909, 7]
                                    (expression_statement [902, 7] - [902, 42]
                                      (assignment_expression [902, 7] - [902, 41]
                                        left: (field_expression [902, 7] - [902, 30]
                                          argument: (identifier [902, 7] - [902, 20])
                                          field: (field_identifier [902, 21] - [902, 30]))
                                        right: (identifier [902, 33] - [902, 41])))
                                    (expression_statement [903, 7] - [903, 32]
                                      (assignment_expression [903, 7] - [903, 31]
                                        left: (identifier [903, 7] - [903, 23])
                                        right: (false [903, 26] - [903, 31])))
                                    (expression_statement [904, 7] - [904, 216]
                                      (call_expression [904, 7] - [904, 215]
                                        function: (identifier [904, 7] - [904, 19])
                                        arguments: (argument_list [904, 19] - [904, 215]
                                          (call_expression [904, 20] - [904, 214]
                                            function: (identifier [904, 20] - [904, 32])
                                            arguments: (argument_list [904, 32] - [904, 214]
                                              (identifier [904, 33] - [904, 56])
                                              (call_expression [904, 58] - [904, 98]
                                                function: (identifier [904, 58] - [904, 71])
                                                arguments: (argument_list [904, 71] - [904, 98]
                                                  (pointer_expression [904, 72] - [904, 97]
                                                    argument: (field_expression [904, 73] - [904, 97]
                                                      argument: (identifier [904, 73] - [904, 86])
                                                      field: (field_identifier [904, 87] - [904, 97])))))
                                              (field_expression [904, 100] - [904, 119]
                                                argument: (identifier [904, 100] - [904, 113])
                                                field: (field_identifier [904, 114] - [904, 119]))
                                              (identifier [904, 121] - [904, 127])
                                              (field_expression [904, 129] - [904, 166]
                                                argument: (field_expression [904, 129] - [904, 153]
                                                  argument: (identifier [904, 129] - [904, 142])
                                                  field: (field_identifier [904, 143] - [904, 153]))
                                                field: (field_identifier [904, 155] - [904, 166]))
                                              (sizeof_expression [904, 168] - [904, 213]
                                                value: (parenthesized_expression [904, 174] - [904, 213]
                                                  (field_expression [904, 175] - [904, 212]
                                                    argument: (field_expression [904, 175] - [904, 199]
                                                      argument: (identifier [904, 175] - [904, 188])
                                                      field: (field_identifier [904, 189] - [904, 199]))
                                                    field: (field_identifier [904, 201] - [904, 212])))))))))
                                    (comment [905, 7] - [905, 57])
                                    (preproc_ifdef [906, 0] - [908, 6]
                                      name: (identifier [906, 7] - [906, 28])
                                      (expression_statement [907, 7] - [907, 65]
                                        (call_expression [907, 7] - [907, 64]
                                          function: (identifier [907, 7] - [907, 23])
                                          arguments: (argument_list [907, 23] - [907, 64]
                                            (string_literal [907, 24] - [907, 63]
                                              (escape_sequence [907, 60] - [907, 62]))))))
                                    (comment [908, 7] - [908, 31]))))
                              (preproc_ifdef [910, 0] - [912, 6]
                                name: (identifier [910, 7] - [910, 28])
                                (expression_statement [911, 6] - [911, 76]
                                  (call_expression [911, 6] - [911, 75]
                                    function: (identifier [911, 6] - [911, 22])
                                    arguments: (argument_list [911, 22] - [911, 75]
                                      (string_literal [911, 23] - [911, 74]
                                        (escape_sequence [911, 71] - [911, 73]))))))
                              (comment [912, 7] - [912, 31])
                              (break_statement [913, 6] - [913, 12])))
                          (case_statement [915, 5] - [921, 6]
                            value: (number_literal [915, 10] - [915, 14])
                            (compound_statement [915, 16] - [921, 6]
                              (comment [915, 17] - [915, 32])
                              (expression_statement [916, 6] - [916, 52]
                                (assignment_expression [916, 6] - [916, 51]
                                  left: (field_expression [916, 6] - [916, 47]
                                    argument: (field_expression [916, 6] - [916, 30]
                                      argument: (identifier [916, 6] - [916, 19])
                                      field: (field_identifier [916, 20] - [916, 30]))
                                    field: (field_identifier [916, 32] - [916, 47]))
                                  right: (number_literal [916, 50] - [916, 51])))
                              (preproc_ifdef [917, 0] - [919, 6]
                                name: (identifier [917, 7] - [917, 28])
                                (expression_statement [918, 6] - [918, 72]
                                  (call_expression [918, 6] - [918, 71]
                                    function: (identifier [918, 6] - [918, 22])
                                    arguments: (argument_list [918, 22] - [918, 71]
                                      (string_literal [918, 23] - [918, 70]
                                        (escape_sequence [918, 67] - [918, 69]))))))
                              (comment [919, 7] - [919, 31])
                              (break_statement [920, 6] - [920, 12])))
                          (case_statement [923, 5] - [925, 6]
                            (compound_statement [923, 14] - [925, 6]
                              (expression_statement [924, 6] - [924, 52]
                                (assignment_expression [924, 6] - [924, 51]
                                  left: (field_expression [924, 6] - [924, 47]
                                    argument: (field_expression [924, 6] - [924, 30]
                                      argument: (identifier [924, 6] - [924, 19])
                                      field: (field_identifier [924, 20] - [924, 30]))
                                    field: (field_identifier [924, 32] - [924, 47]))
                                  right: (number_literal [924, 50] - [924, 51])))))))
                      (if_statement [928, 5] - [929, 44]
                        condition: (condition_clause [928, 8] - [928, 26]
                          value: (identifier [928, 9] - [928, 25]))
                        consequence: (expression_statement [929, 6] - [929, 44]
                          (call_expression [929, 6] - [929, 43]
                            function: (identifier [929, 6] - [929, 22])
                            arguments: (argument_list [929, 22] - [929, 43]
                              (field_expression [929, 23] - [929, 42]
                                argument: (identifier [929, 23] - [929, 36])
                                field: (field_identifier [929, 37] - [929, 42]))))))))))
              (expression_statement [932, 3] - [932, 33]
                (call_expression [932, 3] - [932, 32]
                  function: (field_expression [932, 3] - [932, 30]
                    argument: (identifier [932, 3] - [932, 23])
                    field: (field_identifier [932, 24] - [932, 30]))
                  arguments: (argument_list [932, 30] - [932, 32])))
              (expression_statement [934, 3] - [934, 24]
                (call_expression [934, 3] - [934, 23]
                  function: (identifier [934, 3] - [934, 20])
                  arguments: (argument_list [934, 20] - [934, 23]
                    (number_literal [934, 21] - [934, 22]))))))))
      (function_definition [938, 1] - [947, 2]
        type: (primitive_type [938, 1] - [938, 5])
        declarator: (function_declarator [938, 6] - [938, 98]
          declarator: (qualified_identifier [938, 6] - [938, 43]
            scope: (namespace_identifier [938, 6] - [938, 18])
            name: (identifier [938, 20] - [938, 43]))
          parameters: (parameter_list [938, 43] - [938, 98]
            (parameter_declaration [938, 44] - [938, 65]
              type: (qualified_identifier [938, 44] - [938, 55]
                scope: (namespace_identifier [938, 44] - [938, 47])
                name: (type_identifier [938, 49] - [938, 55]))
              declarator: (identifier [938, 56] - [938, 65]))
            (parameter_declaration [938, 67] - [938, 97]
              type: (qualified_identifier [938, 67] - [938, 90]
                scope: (namespace_identifier [938, 67] - [938, 71])
                name: (qualified_identifier [938, 73] - [938, 90]
                  scope: (namespace_identifier [938, 73] - [938, 75])
                  name: (qualified_identifier [938, 77] - [938, 90]
                    scope: (namespace_identifier [938, 77] - [938, 80])
                    name: (type_identifier [938, 82] - [938, 90]))))
              declarator: (identifier [938, 91] - [938, 97]))))
        body: (compound_statement [939, 1] - [947, 2]
          (declaration [940, 2] - [940, 60]
            type: (type_identifier [940, 2] - [940, 14])
            declarator: (init_declarator [940, 15] - [940, 59]
              declarator: (identifier [940, 15] - [940, 31])
              value: (call_expression [940, 34] - [940, 59]
                function: (identifier [940, 34] - [940, 48])
                arguments: (argument_list [940, 48] - [940, 59]
                  (identifier [940, 49] - [940, 58])))))
          (if_statement [941, 2] - [945, 3]
            condition: (condition_clause [941, 5] - [941, 53]
              value: (binary_expression [941, 6] - [941, 52]
                left: (field_expression [941, 6] - [941, 30]
                  argument: (identifier [941, 6] - [941, 22])
                  field: (field_identifier [941, 23] - [941, 30]))
                right: (identifier [941, 34] - [941, 52])))
            consequence: (compound_statement [942, 2] - [945, 3]
              (expression_statement [943, 3] - [943, 52]
                (call_expression [943, 3] - [943, 51]
                  function: (identifier [943, 3] - [943, 20])
                  arguments: (argument_list [943, 20] - [943, 51]
                    (identifier [943, 21] - [943, 27])
                    (field_expression [943, 29] - [943, 50]
                      argument: (identifier [943, 29] - [943, 45])
                      field: (field_identifier [943, 46] - [943, 50])))))
              (return_statement [944, 3] - [944, 15]
                (true [944, 10] - [944, 14]))))
          (return_statement [946, 2] - [946, 15]
            (false [946, 9] - [946, 14]))))
      (function_definition [949, 1] - [958, 2]
        type: (primitive_type [949, 1] - [949, 5])
        declarator: (function_declarator [949, 6] - [949, 98]
          declarator: (qualified_identifier [949, 6] - [949, 43]
            scope: (namespace_identifier [949, 6] - [949, 18])
            name: (identifier [949, 20] - [949, 43]))
          parameters: (parameter_list [949, 43] - [949, 98]
            (parameter_declaration [949, 44] - [949, 65]
              type: (qualified_identifier [949, 44] - [949, 55]
                scope: (namespace_identifier [949, 44] - [949, 47])
                name: (type_identifier [949, 49] - [949, 55]))
              declarator: (identifier [949, 56] - [949, 65]))
            (parameter_declaration [949, 67] - [949, 97]
              type: (qualified_identifier [949, 67] - [949, 90]
                scope: (namespace_identifier [949, 67] - [949, 71])
                name: (qualified_identifier [949, 73] - [949, 90]
                  scope: (namespace_identifier [949, 73] - [949, 75])
                  name: (qualified_identifier [949, 77] - [949, 90]
                    scope: (namespace_identifier [949, 77] - [949, 80])
                    name: (type_identifier [949, 82] - [949, 90]))))
              declarator: (identifier [949, 91] - [949, 97]))))
        body: (compound_statement [950, 1] - [958, 2]
          (declaration [951, 2] - [951, 60]
            type: (type_identifier [951, 2] - [951, 14])
            declarator: (init_declarator [951, 15] - [951, 59]
              declarator: (identifier [951, 15] - [951, 31])
              value: (call_expression [951, 34] - [951, 59]
                function: (identifier [951, 34] - [951, 48])
                arguments: (argument_list [951, 48] - [951, 59]
                  (identifier [951, 49] - [951, 58])))))
          (if_statement [952, 2] - [956, 3]
            condition: (condition_clause [952, 5] - [952, 54]
              value: (binary_expression [952, 6] - [952, 53]
                left: (field_expression [952, 6] - [952, 30]
                  argument: (identifier [952, 6] - [952, 22])
                  field: (field_identifier [952, 23] - [952, 30]))
                right: (identifier [952, 34] - [952, 53])))
            consequence: (compound_statement [953, 2] - [956, 3]
              (expression_statement [954, 3] - [954, 22]
                (assignment_expression [954, 3] - [954, 21]
                  left: (identifier [954, 3] - [954, 14])
                  right: (true [954, 17] - [954, 21])))
              (return_statement [955, 3] - [955, 15]
                (true [955, 10] - [955, 14]))))
          (return_statement [957, 2] - [957, 15]
            (false [957, 9] - [957, 14]))))
      (function_definition [960, 1] - [1098, 2]
        type: (primitive_type [960, 1] - [960, 5])
        declarator: (function_declarator [960, 6] - [960, 95]
          declarator: (qualified_identifier [960, 6] - [960, 40]
            scope: (namespace_identifier [960, 6] - [960, 18])
            name: (identifier [960, 20] - [960, 40]))
          parameters: (parameter_list [960, 40] - [960, 95]
            (parameter_declaration [960, 41] - [960, 62]
              type: (qualified_identifier [960, 41] - [960, 52]
                scope: (namespace_identifier [960, 41] - [960, 44])
                name: (type_identifier [960, 46] - [960, 52]))
              declarator: (identifier [960, 53] - [960, 62]))
            (parameter_declaration [960, 64] - [960, 94]
              type: (qualified_identifier [960, 64] - [960, 87]
                scope: (namespace_identifier [960, 64] - [960, 68])
                name: (qualified_identifier [960, 70] - [960, 87]
                  scope: (namespace_identifier [960, 70] - [960, 72])
                  name: (qualified_identifier [960, 74] - [960, 87]
                    scope: (namespace_identifier [960, 74] - [960, 77])
                    name: (type_identifier [960, 79] - [960, 87]))))
              declarator: (identifier [960, 88] - [960, 94]))))
        body: (compound_statement [961, 1] - [1098, 2]
          (preproc_ifdef [962, 1] - [964, 7]
            name: (identifier [962, 8] - [962, 29])
            (comment [963, 2] - [963, 70]))
          (comment [964, 8] - [964, 32])
          (declaration [966, 2] - [966, 60]
            type: (type_identifier [966, 2] - [966, 14])
            declarator: (init_declarator [966, 15] - [966, 59]
              declarator: (identifier [966, 15] - [966, 31])
              value: (call_expression [966, 34] - [966, 59]
                function: (identifier [966, 34] - [966, 48])
                arguments: (argument_list [966, 48] - [966, 59]
                  (identifier [966, 49] - [966, 58])))))
          (comment [968, 2] - [968, 86])
          (preproc_ifdef [969, 1] - [971, 7]
            name: (identifier [969, 8] - [969, 29])
            (expression_statement [970, 2] - [970, 91]
              (call_expression [970, 2] - [970, 90]
                function: (identifier [970, 2] - [970, 18])
                arguments: (argument_list [970, 18] - [970, 90]
                  (string_literal [970, 19] - [970, 43]
                    (escape_sequence [970, 40] - [970, 42]))
                  (call_expression [970, 45] - [970, 89]
                    function: (identifier [970, 45] - [970, 63])
                    arguments: (argument_list [970, 63] - [970, 89]
                      (field_expression [970, 64] - [970, 88]
                        argument: (identifier [970, 64] - [970, 80])
                        field: (field_identifier [970, 81] - [970, 88]))))))))
          (comment [971, 8] - [971, 32])
          (if_statement [973, 2] - [1097, 3]
            condition: (condition_clause [973, 5] - [973, 64]
              value: (binary_expression [973, 6] - [973, 63]
                left: (field_expression [973, 6] - [973, 30]
                  argument: (identifier [973, 6] - [973, 22])
                  field: (field_identifier [973, 23] - [973, 30]))
                right: (identifier [973, 34] - [973, 63])))
            consequence: (compound_statement [974, 2] - [991, 3]
              (declaration [975, 3] - [975, 24]
                type: (type_identifier [975, 3] - [975, 13])
                declarator: (identifier [975, 14] - [975, 23]))
              (expression_statement [976, 3] - [976, 51]
                (assignment_expression [976, 3] - [976, 50]
                  left: (field_expression [976, 3] - [976, 19]
                    argument: (identifier [976, 3] - [976, 12])
                    field: (field_identifier [976, 13] - [976, 19]))
                  right: (call_expression [976, 22] - [976, 50]
                    function: (field_expression [976, 22] - [976, 48]
                      argument: (call_expression [976, 22] - [976, 38]
                        function: (field_expression [976, 22] - [976, 36]
                          argument: (identifier [976, 22] - [976, 28])
                          field: (field_identifier [976, 29] - [976, 36]))
                        arguments: (argument_list [976, 36] - [976, 38]))
                      field: (field_identifier [976, 39] - [976, 48]))
                    arguments: (argument_list [976, 48] - [976, 50]))))
              (expression_statement [977, 3] - [977, 42]
                (assignment_expression [977, 3] - [977, 41]
                  left: (field_expression [977, 3] - [977, 17]
                    argument: (identifier [977, 3] - [977, 12])
                    field: (field_identifier [977, 13] - [977, 17]))
                  right: (field_expression [977, 20] - [977, 41]
                    argument: (identifier [977, 20] - [977, 36])
                    field: (field_identifier [977, 37] - [977, 41]))))
              (if_statement [978, 3] - [981, 4]
                condition: (condition_clause [978, 6] - [978, 30]
                  value: (unary_expression [978, 7] - [978, 29]
                    argument: (call_expression [978, 8] - [978, 29]
                      function: (identifier [978, 8] - [978, 18])
                      arguments: (argument_list [978, 18] - [978, 29]
                        (identifier [978, 19] - [978, 28])))))
                consequence: (compound_statement [979, 3] - [981, 4]
                  (expression_statement [980, 4] - [980, 24]
                    (call_expression [980, 4] - [980, 23]
                      function: (identifier [980, 4] - [980, 12])
                      arguments: (argument_list [980, 12] - [980, 23]
                        (identifier [980, 13] - [980, 22]))))))
              (if_statement [982, 3] - [990, 4]
                condition: (condition_clause [982, 6] - [982, 21]
                  value: (identifier [982, 7] - [982, 20]))
                consequence: (compound_statement [983, 3] - [990, 4]
                  (declaration [984, 4] - [984, 25]
                    type: (type_identifier [984, 4] - [984, 16])
                    declarator: (identifier [984, 17] - [984, 24]))
                  (expression_statement [985, 4] - [985, 32]
                    (assignment_expression [985, 4] - [985, 31]
                      left: (field_expression [985, 4] - [985, 25]
                        argument: (identifier [985, 4] - [985, 11])
                        field: (field_identifier [985, 12] - [985, 25]))
                      right: (number_literal [985, 28] - [985, 31])))
                  (expression_statement [986, 4] - [986, 154]
                    (call_expression [986, 4] - [986, 153]
                      function: (identifier [986, 4] - [986, 16])
                      arguments: (argument_list [986, 16] - [986, 153]
                        (call_expression [986, 17] - [986, 99]
                          function: (identifier [986, 17] - [986, 29])
                          arguments: (argument_list [986, 29] - [986, 99]
                            (identifier [986, 30] - [986, 59])
                            (identifier [986, 61] - [986, 68])
                            (field_expression [986, 70] - [986, 92]
                              argument: (identifier [986, 70] - [986, 86])
                              field: (field_identifier [986, 87] - [986, 92]))
                            (unary_expression [986, 94] - [986, 98]
                              argument: (number_literal [986, 96] - [986, 98]))))
                        (call_expression [986, 101] - [986, 129]
                          function: (field_expression [986, 101] - [986, 127]
                            argument: (call_expression [986, 101] - [986, 117]
                              function: (field_expression [986, 101] - [986, 115]
                                argument: (identifier [986, 101] - [986, 107])
                                field: (field_identifier [986, 108] - [986, 115]))
                              arguments: (argument_list [986, 115] - [986, 117]))
                            field: (field_identifier [986, 118] - [986, 127]))
                          arguments: (argument_list [986, 127] - [986, 129]))
                        (field_expression [986, 131] - [986, 152]
                          argument: (identifier [986, 131] - [986, 147])
                          field: (field_identifier [986, 148] - [986, 152])))))
                  (preproc_ifdef [987, 1] - [989, 7]
                    name: (identifier [987, 8] - [987, 29])
                    (expression_statement [988, 4] - [988, 86]
                      (call_expression [988, 4] - [988, 85]
                        function: (identifier [988, 4] - [988, 20])
                        arguments: (argument_list [988, 20] - [988, 85]
                          (string_literal [988, 21] - [988, 46]
                            (escape_sequence [988, 43] - [988, 45]))
                          (call_expression [988, 48] - [988, 84]
                            function: (field_expression [988, 48] - [988, 82]
                              argument: (call_expression [988, 48] - [988, 76]
                                function: (field_expression [988, 48] - [988, 74]
                                  argument: (call_expression [988, 48] - [988, 64]
                                    function: (field_expression [988, 48] - [988, 62]
                                      argument: (identifier [988, 48] - [988, 54])
                                      field: (field_identifier [988, 55] - [988, 62]))
                                    arguments: (argument_list [988, 62] - [988, 64]))
                                  field: (field_identifier [988, 65] - [988, 74]))
                                arguments: (argument_list [988, 74] - [988, 76]))
                              field: (field_identifier [988, 77] - [988, 82]))
                            arguments: (argument_list [988, 82] - [988, 84]))))))
                  (comment [989, 8] - [989, 32]))))
            alternative: (if_statement [993, 7] - [1097, 3]
              condition: (condition_clause [993, 10] - [993, 63]
                value: (binary_expression [993, 11] - [993, 62]
                  left: (field_expression [993, 11] - [993, 35]
                    argument: (identifier [993, 11] - [993, 27])
                    field: (field_identifier [993, 28] - [993, 35]))
                  right: (identifier [993, 39] - [993, 62])))
              consequence: (compound_statement [993, 64] - [1029, 3]
                (declaration [994, 3] - [994, 24]
                  type: (type_identifier [994, 3] - [994, 13])
                  declarator: (identifier [994, 14] - [994, 23]))
                (expression_statement [995, 3] - [995, 51]
                  (assignment_expression [995, 3] - [995, 50]
                    left: (field_expression [995, 3] - [995, 19]
                      argument: (identifier [995, 3] - [995, 12])
                      field: (field_identifier [995, 13] - [995, 19]))
                    right: (call_expression [995, 22] - [995, 50]
                      function: (field_expression [995, 22] - [995, 48]
                        argument: (call_expression [995, 22] - [995, 38]
                          function: (field_expression [995, 22] - [995, 36]
                            argument: (identifier [995, 22] - [995, 28])
                            field: (field_identifier [995, 29] - [995, 36]))
                          arguments: (argument_list [995, 36] - [995, 38]))
                        field: (field_identifier [995, 39] - [995, 48]))
                      arguments: (argument_list [995, 48] - [995, 50]))))
                (expression_statement [996, 3] - [996, 42]
                  (assignment_expression [996, 3] - [996, 41]
                    left: (field_expression [996, 3] - [996, 17]
                      argument: (identifier [996, 3] - [996, 12])
                      field: (field_identifier [996, 13] - [996, 17]))
                    right: (field_expression [996, 20] - [996, 41]
                      argument: (identifier [996, 20] - [996, 36])
                      field: (field_identifier [996, 37] - [996, 41]))))
                (if_statement [997, 3] - [1028, 4]
                  condition: (condition_clause [997, 6] - [997, 60]
                    value: (parenthesized_expression [997, 7] - [997, 59]
                      (unary_expression [997, 8] - [997, 58]
                        argument: (call_expression [997, 9] - [997, 58]
                          function: (field_expression [997, 9] - [997, 54]
                            argument: (call_expression [997, 9] - [997, 46]
                              function: (identifier [997, 9] - [997, 23])
                              arguments: (argument_list [997, 23] - [997, 46]
                                (field_expression [997, 24] - [997, 45]
                                  argument: (identifier [997, 24] - [997, 40])
                                  field: (field_identifier [997, 41] - [997, 45]))))
                            field: (field_identifier [997, 47] - [997, 54]))
                          arguments: (argument_list [997, 54] - [997, 58]
                            (string_literal [997, 55] - [997, 57]))))))
                  consequence: (compound_statement [998, 3] - [1010, 4]
                    (expression_statement [999, 4] - [999, 53]
                      (call_expression [999, 4] - [999, 52]
                        function: (identifier [999, 4] - [999, 18])
                        arguments: (argument_list [999, 18] - [999, 52]
                          (field_expression [999, 19] - [999, 40]
                            argument: (identifier [999, 19] - [999, 35])
                            field: (field_identifier [999, 36] - [999, 40]))
                          (identifier [999, 42] - [999, 51]))))
                    (declaration [1000, 4] - [1000, 25]
                      type: (type_identifier [1000, 4] - [1000, 16])
                      declarator: (identifier [1000, 17] - [1000, 24]))
                    (expression_statement [1001, 4] - [1001, 32]
                      (assignment_expression [1001, 4] - [1001, 31]
                        left: (field_expression [1001, 4] - [1001, 25]
                          argument: (identifier [1001, 4] - [1001, 11])
                          field: (field_identifier [1001, 12] - [1001, 25]))
                        right: (number_literal [1001, 28] - [1001, 31])))
                    (expression_statement [1002, 4] - [1002, 150]
                      (call_expression [1002, 4] - [1002, 149]
                        function: (identifier [1002, 4] - [1002, 16])
                        arguments: (argument_list [1002, 16] - [1002, 149]
                          (call_expression [1002, 17] - [1002, 95]
                            function: (identifier [1002, 17] - [1002, 29])
                            arguments: (argument_list [1002, 29] - [1002, 95]
                              (identifier [1002, 30] - [1002, 56])
                              (identifier [1002, 58] - [1002, 65])
                              (field_expression [1002, 67] - [1002, 89]
                                argument: (identifier [1002, 67] - [1002, 83])
                                field: (field_identifier [1002, 84] - [1002, 89]))
                              (number_literal [1002, 91] - [1002, 94])))
                          (call_expression [1002, 97] - [1002, 125]
                            function: (field_expression [1002, 97] - [1002, 123]
                              argument: (call_expression [1002, 97] - [1002, 113]
                                function: (field_expression [1002, 97] - [1002, 111]
                                  argument: (identifier [1002, 97] - [1002, 103])
                                  field: (field_identifier [1002, 104] - [1002, 111]))
                                arguments: (argument_list [1002, 111] - [1002, 113]))
                              field: (field_identifier [1002, 114] - [1002, 123]))
                            arguments: (argument_list [1002, 123] - [1002, 125]))
                          (field_expression [1002, 127] - [1002, 148]
                            argument: (identifier [1002, 127] - [1002, 143])
                            field: (field_identifier [1002, 144] - [1002, 148])))))
                    (preproc_ifdef [1003, 1] - [1005, 7]
                      name: (identifier [1003, 8] - [1003, 29])
                      (expression_statement [1004, 4] - [1004, 116]
                        (call_expression [1004, 4] - [1004, 115]
                          function: (identifier [1004, 4] - [1004, 20])
                          arguments: (argument_list [1004, 20] - [1004, 115]
                            (string_literal [1004, 21] - [1004, 61]
                              (escape_sequence [1004, 58] - [1004, 60]))
                            (field_expression [1004, 63] - [1004, 84]
                              argument: (identifier [1004, 63] - [1004, 79])
                              field: (field_identifier [1004, 80] - [1004, 84]))
                            (call_expression [1004, 86] - [1004, 114]
                              function: (field_expression [1004, 86] - [1004, 112]
                                argument: (call_expression [1004, 86] - [1004, 102]
                                  function: (field_expression [1004, 86] - [1004, 100]
                                    argument: (identifier [1004, 86] - [1004, 92])
                                    field: (field_identifier [1004, 93] - [1004, 100]))
                                  arguments: (argument_list [1004, 100] - [1004, 102]))
                                field: (field_identifier [1004, 103] - [1004, 112]))
                              arguments: (argument_list [1004, 112] - [1004, 114]))))))
                    (comment [1005, 8] - [1005, 32])
                    (declaration [1006, 4] - [1006, 22]
                      type: (primitive_type [1006, 4] - [1006, 8])
                      declarator: (array_declarator [1006, 9] - [1006, 21]
                        declarator: (identifier [1006, 9] - [1006, 17])
                        size: (number_literal [1006, 18] - [1006, 20])))
                    (expression_statement [1007, 4] - [1007, 68]
                      (call_expression [1007, 4] - [1007, 67]
                        function: (identifier [1007, 4] - [1007, 11])
                        arguments: (argument_list [1007, 11] - [1007, 67]
                          (identifier [1007, 12] - [1007, 20])
                          (string_literal [1007, 22] - [1007, 40])
                          (subscript_expression [1007, 42] - [1007, 66]
                            argument: (field_expression [1007, 42] - [1007, 63]
                              argument: (identifier [1007, 42] - [1007, 58])
                              field: (field_identifier [1007, 59] - [1007, 63]))
                            index: (number_literal [1007, 64] - [1007, 65])))))
                    (if_statement [1008, 4] - [1009, 26]
                      condition: (condition_clause [1008, 7] - [1008, 49]
                        value: (unary_expression [1008, 8] - [1008, 48]
                          argument: (call_expression [1008, 9] - [1008, 48]
                            function: (identifier [1008, 9] - [1008, 15])
                            arguments: (argument_list [1008, 15] - [1008, 48]
                              (field_expression [1008, 16] - [1008, 37]
                                argument: (identifier [1008, 16] - [1008, 32])
                                field: (field_identifier [1008, 33] - [1008, 37]))
                              (identifier [1008, 39] - [1008, 47])))))
                      (comment [1008, 49] - [1008, 61])
                      consequence: (expression_statement [1009, 5] - [1009, 26]
                        (assignment_expression [1009, 5] - [1009, 25]
                          left: (identifier [1009, 5] - [1009, 18])
                          right: (true [1009, 21] - [1009, 25])))))
                  alternative: (if_statement [1011, 8] - [1028, 4]
                    condition: (condition_clause [1011, 11] - [1011, 63]
                      value: (call_expression [1011, 12] - [1011, 62]
                        function: (identifier [1011, 12] - [1011, 28])
                        arguments: (argument_list [1011, 28] - [1011, 62]
                          (field_expression [1011, 29] - [1011, 50]
                            argument: (identifier [1011, 29] - [1011, 45])
                            field: (field_identifier [1011, 46] - [1011, 50]))
                          (identifier [1011, 52] - [1011, 61]))))
                    consequence: (compound_statement [1012, 3] - [1019, 4]
                      (declaration [1013, 4] - [1013, 25]
                        type: (type_identifier [1013, 4] - [1013, 16])
                        declarator: (identifier [1013, 17] - [1013, 24]))
                      (expression_statement [1014, 4] - [1014, 32]
                        (assignment_expression [1014, 4] - [1014, 31]
                          left: (field_expression [1014, 4] - [1014, 25]
                            argument: (identifier [1014, 4] - [1014, 11])
                            field: (field_identifier [1014, 12] - [1014, 25]))
                          right: (number_literal [1014, 28] - [1014, 31])))
                      (expression_statement [1015, 4] - [1015, 150]
                        (call_expression [1015, 4] - [1015, 149]
                          function: (identifier [1015, 4] - [1015, 16])
                          arguments: (argument_list [1015, 16] - [1015, 149]
                            (call_expression [1015, 17] - [1015, 95]
                              function: (identifier [1015, 17] - [1015, 29])
                              arguments: (argument_list [1015, 29] - [1015, 95]
                                (identifier [1015, 30] - [1015, 56])
                                (identifier [1015, 58] - [1015, 65])
                                (field_expression [1015, 67] - [1015, 89]
                                  argument: (identifier [1015, 67] - [1015, 83])
                                  field: (field_identifier [1015, 84] - [1015, 89]))
                                (number_literal [1015, 91] - [1015, 94])))
                            (call_expression [1015, 97] - [1015, 125]
                              function: (field_expression [1015, 97] - [1015, 123]
                                argument: (call_expression [1015, 97] - [1015, 113]
                                  function: (field_expression [1015, 97] - [1015, 111]
                                    argument: (identifier [1015, 97] - [1015, 103])
                                    field: (field_identifier [1015, 104] - [1015, 111]))
                                  arguments: (argument_list [1015, 111] - [1015, 113]))
                                field: (field_identifier [1015, 114] - [1015, 123]))
                              arguments: (argument_list [1015, 123] - [1015, 125]))
                            (field_expression [1015, 127] - [1015, 148]
                              argument: (identifier [1015, 127] - [1015, 143])
                              field: (field_identifier [1015, 144] - [1015, 148])))))
                      (preproc_ifdef [1016, 0] - [1018, 6]
                        name: (identifier [1016, 7] - [1016, 28])
                        (expression_statement [1017, 4] - [1017, 116]
                          (call_expression [1017, 4] - [1017, 115]
                            function: (identifier [1017, 4] - [1017, 20])
                            arguments: (argument_list [1017, 20] - [1017, 115]
                              (string_literal [1017, 21] - [1017, 61]
                                (escape_sequence [1017, 58] - [1017, 60]))
                              (field_expression [1017, 63] - [1017, 84]
                                argument: (identifier [1017, 63] - [1017, 79])
                                field: (field_identifier [1017, 80] - [1017, 84]))
                              (call_expression [1017, 86] - [1017, 114]
                                function: (field_expression [1017, 86] - [1017, 112]
                                  argument: (call_expression [1017, 86] - [1017, 102]
                                    function: (field_expression [1017, 86] - [1017, 100]
                                      argument: (identifier [1017, 86] - [1017, 92])
                                      field: (field_identifier [1017, 93] - [1017, 100]))
                                    arguments: (argument_list [1017, 100] - [1017, 102]))
                                  field: (field_identifier [1017, 103] - [1017, 112]))
                                arguments: (argument_list [1017, 112] - [1017, 114]))))))
                      (comment [1018, 7] - [1018, 31]))
                    alternative: (compound_statement [1021, 3] - [1028, 4]
                      (declaration [1022, 4] - [1022, 25]
                        type: (type_identifier [1022, 4] - [1022, 16])
                        declarator: (identifier [1022, 17] - [1022, 24]))
                      (expression_statement [1023, 4] - [1023, 32]
                        (assignment_expression [1023, 4] - [1023, 31]
                          left: (field_expression [1023, 4] - [1023, 25]
                            argument: (identifier [1023, 4] - [1023, 11])
                            field: (field_identifier [1023, 12] - [1023, 25]))
                          right: (number_literal [1023, 28] - [1023, 31])))
                      (expression_statement [1024, 4] - [1024, 155]
                        (call_expression [1024, 4] - [1024, 154]
                          function: (identifier [1024, 4] - [1024, 16])
                          arguments: (argument_list [1024, 16] - [1024, 154]
                            (call_expression [1024, 17] - [1024, 100]
                              function: (identifier [1024, 17] - [1024, 29])
                              arguments: (argument_list [1024, 29] - [1024, 100]
                                (identifier [1024, 30] - [1024, 60])
                                (identifier [1024, 62] - [1024, 69])
                                (field_expression [1024, 71] - [1024, 93]
                                  argument: (identifier [1024, 71] - [1024, 87])
                                  field: (field_identifier [1024, 88] - [1024, 93]))
                                (unary_expression [1024, 95] - [1024, 99]
                                  argument: (number_literal [1024, 97] - [1024, 99]))))
                            (call_expression [1024, 102] - [1024, 130]
                              function: (field_expression [1024, 102] - [1024, 128]
                                argument: (call_expression [1024, 102] - [1024, 118]
                                  function: (field_expression [1024, 102] - [1024, 116]
                                    argument: (identifier [1024, 102] - [1024, 108])
                                    field: (field_identifier [1024, 109] - [1024, 116]))
                                  arguments: (argument_list [1024, 116] - [1024, 118]))
                                field: (field_identifier [1024, 119] - [1024, 128]))
                              arguments: (argument_list [1024, 128] - [1024, 130]))
                            (field_expression [1024, 132] - [1024, 153]
                              argument: (identifier [1024, 132] - [1024, 148])
                              field: (field_identifier [1024, 149] - [1024, 153])))))
                      (preproc_ifdef [1025, 1] - [1027, 7]
                        name: (identifier [1025, 8] - [1025, 29])
                        (expression_statement [1026, 4] - [1026, 120]
                          (call_expression [1026, 4] - [1026, 119]
                            function: (identifier [1026, 4] - [1026, 20])
                            arguments: (argument_list [1026, 20] - [1026, 119]
                              (string_literal [1026, 21] - [1026, 65]
                                (escape_sequence [1026, 62] - [1026, 64]))
                              (field_expression [1026, 67] - [1026, 88]
                                argument: (identifier [1026, 67] - [1026, 83])
                                field: (field_identifier [1026, 84] - [1026, 88]))
                              (call_expression [1026, 90] - [1026, 118]
                                function: (field_expression [1026, 90] - [1026, 116]
                                  argument: (call_expression [1026, 90] - [1026, 106]
                                    function: (field_expression [1026, 90] - [1026, 104]
                                      argument: (identifier [1026, 90] - [1026, 96])
                                      field: (field_identifier [1026, 97] - [1026, 104]))
                                    arguments: (argument_list [1026, 104] - [1026, 106]))
                                  field: (field_identifier [1026, 107] - [1026, 116]))
                                arguments: (argument_list [1026, 116] - [1026, 118]))))))
                      (comment [1027, 8] - [1027, 32])))))
              alternative: (if_statement [1030, 7] - [1097, 3]
                condition: (condition_clause [1030, 10] - [1030, 66]
                  value: (binary_expression [1030, 11] - [1030, 65]
                    left: (field_expression [1030, 11] - [1030, 35]
                      argument: (identifier [1030, 11] - [1030, 27])
                      field: (field_identifier [1030, 28] - [1030, 35]))
                    right: (identifier [1030, 39] - [1030, 65])))
                consequence: (compound_statement [1031, 2] - [1037, 3]
                  (expression_statement [1032, 3] - [1032, 48]
                    (call_expression [1032, 3] - [1032, 47]
                      function: (identifier [1032, 3] - [1032, 16])
                      arguments: (argument_list [1032, 16] - [1032, 47]
                        (cast_expression [1032, 17] - [1032, 46]
                          type: (type_descriptor [1032, 18] - [1032, 24]
                            type: (type_identifier [1032, 18] - [1032, 23])
                            declarator: (abstract_pointer_declarator [1032, 23] - [1032, 24]))
                          value: (field_expression [1032, 25] - [1032, 46]
                            argument: (identifier [1032, 25] - [1032, 41])
                            field: (field_identifier [1032, 42] - [1032, 46]))))))
                  (comment [1033, 3] - [1033, 23])
                  (preproc_ifdef [1034, 1] - [1036, 7]
                    name: (identifier [1034, 8] - [1034, 29])
                    (expression_statement [1035, 3] - [1035, 200]
                      (call_expression [1035, 3] - [1035, 199]
                        function: (identifier [1035, 3] - [1035, 19])
                        arguments: (argument_list [1035, 19] - [1035, 199]
                          (string_literal [1035, 20] - [1035, 57]
                            (escape_sequence [1035, 54] - [1035, 56]))
                          (field_expression [1035, 59] - [1035, 114]
                            argument: (parenthesized_expression [1035, 59] - [1035, 97]
                              (cast_expression [1035, 60] - [1035, 96]
                                type: (type_descriptor [1035, 61] - [1035, 74]
                                  type: (type_identifier [1035, 61] - [1035, 73])
                                  declarator: (abstract_pointer_declarator [1035, 73] - [1035, 74]))
                                value: (field_expression [1035, 75] - [1035, 96]
                                  argument: (identifier [1035, 75] - [1035, 91])
                                  field: (field_identifier [1035, 92] - [1035, 96]))))
                            field: (field_identifier [1035, 99] - [1035, 114]))
                          (field_expression [1035, 116] - [1035, 160]
                            argument: (parenthesized_expression [1035, 116] - [1035, 147]
                              (cast_expression [1035, 117] - [1035, 146]
                                type: (type_descriptor [1035, 118] - [1035, 124]
                                  type: (type_identifier [1035, 118] - [1035, 123])
                                  declarator: (abstract_pointer_declarator [1035, 123] - [1035, 124]))
                                value: (field_expression [1035, 125] - [1035, 146]
                                  argument: (identifier [1035, 125] - [1035, 141])
                                  field: (field_identifier [1035, 142] - [1035, 146]))))
                            field: (field_identifier [1035, 149] - [1035, 160]))
                          (call_expression [1035, 162] - [1035, 198]
                            function: (field_expression [1035, 162] - [1035, 196]
                              argument: (call_expression [1035, 162] - [1035, 190]
                                function: (field_expression [1035, 162] - [1035, 188]
                                  argument: (call_expression [1035, 162] - [1035, 178]
                                    function: (field_expression [1035, 162] - [1035, 176]
                                      argument: (identifier [1035, 162] - [1035, 168])
                                      field: (field_identifier [1035, 169] - [1035, 176]))
                                    arguments: (argument_list [1035, 176] - [1035, 178]))
                                  field: (field_identifier [1035, 179] - [1035, 188]))
                                arguments: (argument_list [1035, 188] - [1035, 190]))
                              field: (field_identifier [1035, 191] - [1035, 196]))
                            arguments: (argument_list [1035, 196] - [1035, 198]))))))
                  (comment [1036, 8] - [1036, 32]))
                alternative: (if_statement [1038, 7] - [1097, 3]
                  condition: (condition_clause [1038, 10] - [1038, 64]
                    value: (binary_expression [1038, 11] - [1038, 63]
                      left: (field_expression [1038, 11] - [1038, 35]
                        argument: (identifier [1038, 11] - [1038, 27])
                        field: (field_identifier [1038, 28] - [1038, 35]))
                      right: (identifier [1038, 39] - [1038, 63])))
                  consequence: (compound_statement [1039, 2] - [1066, 3]
                    (declaration [1040, 3] - [1040, 90]
                      type: (type_identifier [1040, 3] - [1040, 13])
                      declarator: (init_declarator [1040, 14] - [1040, 89]
                        declarator: (identifier [1040, 14] - [1040, 27])
                        value: (call_expression [1040, 30] - [1040, 89]
                          function: (identifier [1040, 30] - [1040, 47])
                          arguments: (argument_list [1040, 47] - [1040, 89]
                            (field_expression [1040, 48] - [1040, 88]
                              argument: (field_expression [1040, 48] - [1040, 72]
                                argument: (identifier [1040, 48] - [1040, 64])
                                field: (field_identifier [1040, 65] - [1040, 72]))
                              field: (field_identifier [1040, 73] - [1040, 88]))))))
                    (if_statement [1041, 3] - [1065, 4]
                      condition: (condition_clause [1041, 6] - [1041, 49]
                        value: (call_expression [1041, 7] - [1041, 48]
                          function: (identifier [1041, 7] - [1041, 21])
                          arguments: (argument_list [1041, 21] - [1041, 48]
                            (pointer_expression [1041, 22] - [1041, 47]
                              argument: (field_expression [1041, 23] - [1041, 47]
                                argument: (identifier [1041, 23] - [1041, 39])
                                field: (field_identifier [1041, 40] - [1041, 47]))))))
                      consequence: (compound_statement [1042, 3] - [1049, 4]
                        (expression_statement [1043, 4] - [1043, 159]
                          (call_expression [1043, 4] - [1043, 158]
                            function: (identifier [1043, 4] - [1043, 16])
                            arguments: (argument_list [1043, 16] - [1043, 158]
                              (call_expression [1043, 17] - [1043, 104]
                                function: (identifier [1043, 17] - [1043, 29])
                                arguments: (argument_list [1043, 29] - [1043, 104]
                                  (identifier [1043, 30] - [1043, 53])
                                  (field_expression [1043, 55] - [1043, 79]
                                    argument: (identifier [1043, 55] - [1043, 71])
                                    field: (field_identifier [1043, 72] - [1043, 79]))
                                  (field_expression [1043, 81] - [1043, 103]
                                    argument: (identifier [1043, 81] - [1043, 97])
                                    field: (field_identifier [1043, 98] - [1043, 103]))))
                              (call_expression [1043, 106] - [1043, 134]
                                function: (field_expression [1043, 106] - [1043, 132]
                                  argument: (call_expression [1043, 106] - [1043, 122]
                                    function: (field_expression [1043, 106] - [1043, 120]
                                      argument: (identifier [1043, 106] - [1043, 112])
                                      field: (field_identifier [1043, 113] - [1043, 120]))
                                    arguments: (argument_list [1043, 120] - [1043, 122]))
                                  field: (field_identifier [1043, 123] - [1043, 132]))
                                arguments: (argument_list [1043, 132] - [1043, 134]))
                              (field_expression [1043, 136] - [1043, 157]
                                argument: (identifier [1043, 136] - [1043, 152])
                                field: (field_identifier [1043, 153] - [1043, 157])))))
                        (expression_statement [1044, 4] - [1044, 210]
                          (call_expression [1044, 4] - [1044, 209]
                            function: (identifier [1044, 4] - [1044, 16])
                            arguments: (argument_list [1044, 16] - [1044, 209]
                              (call_expression [1044, 17] - [1044, 166]
                                function: (identifier [1044, 17] - [1044, 29])
                                arguments: (argument_list [1044, 29] - [1044, 166]
                                  (identifier [1044, 30] - [1044, 55])
                                  (field_expression [1044, 57] - [1044, 81]
                                    argument: (identifier [1044, 57] - [1044, 73])
                                    field: (field_identifier [1044, 74] - [1044, 81]))
                                  (field_expression [1044, 83] - [1044, 105]
                                    argument: (identifier [1044, 83] - [1044, 99])
                                    field: (field_identifier [1044, 100] - [1044, 105]))
                                  (identifier [1044, 107] - [1044, 119])
                                  (field_expression [1044, 121] - [1044, 142]
                                    argument: (identifier [1044, 121] - [1044, 137])
                                    field: (field_identifier [1044, 138] - [1044, 142]))
                                  (field_expression [1044, 144] - [1044, 165]
                                    argument: (identifier [1044, 144] - [1044, 160])
                                    field: (field_identifier [1044, 161] - [1044, 165]))))
                              (field_expression [1044, 168] - [1044, 188]
                                argument: (identifier [1044, 168] - [1044, 181])
                                field: (field_identifier [1044, 182] - [1044, 188]))
                              (field_expression [1044, 190] - [1044, 208]
                                argument: (identifier [1044, 190] - [1044, 203])
                                field: (field_identifier [1044, 204] - [1044, 208])))))
                        (comment [1045, 4] - [1045, 24])
                        (preproc_ifdef [1046, 1] - [1048, 7]
                          name: (identifier [1046, 8] - [1046, 29])
                          (expression_statement [1047, 4] - [1047, 183]
                            (call_expression [1047, 4] - [1047, 182]
                              function: (identifier [1047, 4] - [1047, 20])
                              arguments: (argument_list [1047, 20] - [1047, 182]
                                (string_literal [1047, 21] - [1047, 63]
                                  (escape_sequence [1047, 60] - [1047, 62]))
                                (field_expression [1047, 65] - [1047, 105]
                                  argument: (field_expression [1047, 65] - [1047, 89]
                                    argument: (identifier [1047, 65] - [1047, 81])
                                    field: (field_identifier [1047, 82] - [1047, 89]))
                                  field: (field_identifier [1047, 90] - [1047, 105]))
                                (field_expression [1047, 107] - [1047, 143]
                                  argument: (field_expression [1047, 107] - [1047, 131]
                                    argument: (identifier [1047, 107] - [1047, 123])
                                    field: (field_identifier [1047, 124] - [1047, 131]))
                                  field: (field_identifier [1047, 132] - [1047, 143]))
                                (call_expression [1047, 145] - [1047, 181]
                                  function: (field_expression [1047, 145] - [1047, 179]
                                    argument: (call_expression [1047, 145] - [1047, 173]
                                      function: (field_expression [1047, 145] - [1047, 171]
                                        argument: (call_expression [1047, 145] - [1047, 161]
                                          function: (field_expression [1047, 145] - [1047, 159]
                                            argument: (identifier [1047, 145] - [1047, 151])
                                            field: (field_identifier [1047, 152] - [1047, 159]))
                                          arguments: (argument_list [1047, 159] - [1047, 161]))
                                        field: (field_identifier [1047, 162] - [1047, 171]))
                                      arguments: (argument_list [1047, 171] - [1047, 173]))
                                    field: (field_identifier [1047, 174] - [1047, 179]))
                                  arguments: (argument_list [1047, 179] - [1047, 181]))))))
                        (comment [1048, 8] - [1048, 32]))
                      (comment [1049, 4] - [1056, 6])
                      alternative: (compound_statement [1058, 3] - [1065, 4]
                        (expression_statement [1059, 4] - [1059, 164]
                          (call_expression [1059, 4] - [1059, 163]
                            function: (identifier [1059, 4] - [1059, 16])
                            arguments: (argument_list [1059, 16] - [1059, 163]
                              (call_expression [1059, 17] - [1059, 109]
                                function: (identifier [1059, 17] - [1059, 29])
                                arguments: (argument_list [1059, 29] - [1059, 109]
                                  (identifier [1059, 30] - [1059, 53])
                                  (field_expression [1059, 55] - [1059, 79]
                                    argument: (identifier [1059, 55] - [1059, 71])
                                    field: (field_identifier [1059, 72] - [1059, 79]))
                                  (field_expression [1059, 81] - [1059, 103]
                                    argument: (identifier [1059, 81] - [1059, 97])
                                    field: (field_identifier [1059, 98] - [1059, 103]))
                                  (number_literal [1059, 105] - [1059, 108])))
                              (call_expression [1059, 111] - [1059, 139]
                                function: (field_expression [1059, 111] - [1059, 137]
                                  argument: (call_expression [1059, 111] - [1059, 127]
                                    function: (field_expression [1059, 111] - [1059, 125]
                                      argument: (identifier [1059, 111] - [1059, 117])
                                      field: (field_identifier [1059, 118] - [1059, 125]))
                                    arguments: (argument_list [1059, 125] - [1059, 127]))
                                  field: (field_identifier [1059, 128] - [1059, 137]))
                                arguments: (argument_list [1059, 137] - [1059, 139]))
                              (field_expression [1059, 141] - [1059, 162]
                                argument: (identifier [1059, 141] - [1059, 157])
                                field: (field_identifier [1059, 158] - [1059, 162])))))
                        (expression_statement [1060, 4] - [1060, 155]
                          (call_expression [1060, 4] - [1060, 154]
                            function: (identifier [1060, 4] - [1060, 16])
                            arguments: (argument_list [1060, 16] - [1060, 154]
                              (call_expression [1060, 17] - [1060, 111]
                                function: (identifier [1060, 17] - [1060, 29])
                                arguments: (argument_list [1060, 29] - [1060, 111]
                                  (identifier [1060, 30] - [1060, 55])
                                  (field_expression [1060, 57] - [1060, 81]
                                    argument: (identifier [1060, 57] - [1060, 73])
                                    field: (field_identifier [1060, 74] - [1060, 81]))
                                  (field_expression [1060, 83] - [1060, 105]
                                    argument: (identifier [1060, 83] - [1060, 99])
                                    field: (field_identifier [1060, 100] - [1060, 105]))
                                  (number_literal [1060, 107] - [1060, 110])))
                              (field_expression [1060, 113] - [1060, 133]
                                argument: (identifier [1060, 113] - [1060, 126])
                                field: (field_identifier [1060, 127] - [1060, 133]))
                              (field_expression [1060, 135] - [1060, 153]
                                argument: (identifier [1060, 135] - [1060, 148])
                                field: (field_identifier [1060, 149] - [1060, 153])))))
                        (comment [1061, 4] - [1061, 24])
                        (preproc_ifdef [1062, 1] - [1064, 7]
                          name: (identifier [1062, 8] - [1062, 29])
                          (expression_statement [1063, 4] - [1063, 180]
                            (call_expression [1063, 4] - [1063, 179]
                              function: (identifier [1063, 4] - [1063, 20])
                              arguments: (argument_list [1063, 20] - [1063, 179]
                                (string_literal [1063, 21] - [1063, 60]
                                  (escape_sequence [1063, 57] - [1063, 59]))
                                (field_expression [1063, 62] - [1063, 102]
                                  argument: (field_expression [1063, 62] - [1063, 86]
                                    argument: (identifier [1063, 62] - [1063, 78])
                                    field: (field_identifier [1063, 79] - [1063, 86]))
                                  field: (field_identifier [1063, 87] - [1063, 102]))
                                (field_expression [1063, 104] - [1063, 140]
                                  argument: (field_expression [1063, 104] - [1063, 128]
                                    argument: (identifier [1063, 104] - [1063, 120])
                                    field: (field_identifier [1063, 121] - [1063, 128]))
                                  field: (field_identifier [1063, 129] - [1063, 140]))
                                (call_expression [1063, 142] - [1063, 178]
                                  function: (field_expression [1063, 142] - [1063, 176]
                                    argument: (call_expression [1063, 142] - [1063, 170]
                                      function: (field_expression [1063, 142] - [1063, 168]
                                        argument: (call_expression [1063, 142] - [1063, 158]
                                          function: (field_expression [1063, 142] - [1063, 156]
                                            argument: (identifier [1063, 142] - [1063, 148])
                                            field: (field_identifier [1063, 149] - [1063, 156]))
                                          arguments: (argument_list [1063, 156] - [1063, 158]))
                                        field: (field_identifier [1063, 159] - [1063, 168]))
                                      arguments: (argument_list [1063, 168] - [1063, 170]))
                                    field: (field_identifier [1063, 171] - [1063, 176]))
                                  arguments: (argument_list [1063, 176] - [1063, 178]))))))
                        (comment [1064, 8] - [1064, 32]))))
                  alternative: (if_statement [1067, 7] - [1097, 3]
                    condition: (condition_clause [1067, 10] - [1067, 58]
                      value: (binary_expression [1067, 11] - [1067, 57]
                        left: (field_expression [1067, 11] - [1067, 35]
                          argument: (identifier [1067, 11] - [1067, 27])
                          field: (field_identifier [1067, 28] - [1067, 35]))
                        right: (identifier [1067, 39] - [1067, 57])))
                    consequence: (compound_statement [1068, 2] - [1074, 3]
                      (if_statement [1069, 3] - [1070, 44]
                        condition: (condition_clause [1069, 6] - [1069, 37]
                          value: (binary_expression [1069, 7] - [1069, 36]
                            left: (subscript_expression [1069, 7] - [1069, 31]
                              argument: (field_expression [1069, 7] - [1069, 28]
                                argument: (identifier [1069, 7] - [1069, 23])
                                field: (field_identifier [1069, 24] - [1069, 28]))
                              index: (number_literal [1069, 29] - [1069, 30]))
                            right: (number_literal [1069, 35] - [1069, 36])))
                        consequence: (expression_statement [1070, 4] - [1070, 44]
                          (call_expression [1070, 4] - [1070, 43]
                            function: (identifier [1070, 4] - [1070, 20])
                            arguments: (argument_list [1070, 20] - [1070, 43]
                              (field_expression [1070, 21] - [1070, 42]
                                argument: (identifier [1070, 21] - [1070, 37])
                                field: (field_identifier [1070, 38] - [1070, 42]))))))
                      (preproc_ifdef [1071, 1] - [1073, 7]
                        name: (identifier [1071, 8] - [1071, 29])
                        (expression_statement [1072, 3] - [1072, 115]
                          (call_expression [1072, 3] - [1072, 114]
                            function: (identifier [1072, 3] - [1072, 19])
                            arguments: (argument_list [1072, 19] - [1072, 114]
                              (string_literal [1072, 20] - [1072, 52]
                                (escape_sequence [1072, 49] - [1072, 51]))
                              (field_expression [1072, 54] - [1072, 75]
                                argument: (identifier [1072, 54] - [1072, 70])
                                field: (field_identifier [1072, 71] - [1072, 75]))
                              (call_expression [1072, 77] - [1072, 113]
                                function: (field_expression [1072, 77] - [1072, 111]
                                  argument: (call_expression [1072, 77] - [1072, 105]
                                    function: (field_expression [1072, 77] - [1072, 103]
                                      argument: (call_expression [1072, 77] - [1072, 93]
                                        function: (field_expression [1072, 77] - [1072, 91]
                                          argument: (identifier [1072, 77] - [1072, 83])
                                          field: (field_identifier [1072, 84] - [1072, 91]))
                                        arguments: (argument_list [1072, 91] - [1072, 93]))
                                      field: (field_identifier [1072, 94] - [1072, 103]))
                                    arguments: (argument_list [1072, 103] - [1072, 105]))
                                  field: (field_identifier [1072, 106] - [1072, 111]))
                                arguments: (argument_list [1072, 111] - [1072, 113]))))))
                      (comment [1073, 8] - [1073, 32]))
                    alternative: (if_statement [1075, 7] - [1097, 3]
                      condition: (condition_clause [1075, 10] - [1075, 58]
                        value: (binary_expression [1075, 11] - [1075, 57]
                          left: (field_expression [1075, 11] - [1075, 35]
                            argument: (identifier [1075, 11] - [1075, 27])
                            field: (field_identifier [1075, 28] - [1075, 35]))
                          right: (identifier [1075, 39] - [1075, 57])))
                      consequence: (compound_statement [1076, 2] - [1082, 3]
                        (expression_statement [1077, 3] - [1077, 60]
                          (call_expression [1077, 3] - [1077, 59]
                            function: (identifier [1077, 3] - [1077, 16])
                            arguments: (argument_list [1077, 16] - [1077, 59]
                              (call_expression [1077, 17] - [1077, 58]
                                function: (identifier [1077, 17] - [1077, 32])
                                arguments: (argument_list [1077, 32] - [1077, 58]
                                  (field_expression [1077, 33] - [1077, 57]
                                    argument: (identifier [1077, 33] - [1077, 49])
                                    field: (field_identifier [1077, 50] - [1077, 57])))))))
                        (expression_statement [1078, 3] - [1078, 44]
                          (call_expression [1078, 3] - [1078, 43]
                            function: (identifier [1078, 3] - [1078, 20])
                            arguments: (argument_list [1078, 20] - [1078, 43]
                              (field_expression [1078, 21] - [1078, 42]
                                argument: (identifier [1078, 21] - [1078, 37])
                                field: (field_identifier [1078, 38] - [1078, 42])))))
                        (preproc_ifdef [1079, 1] - [1081, 7]
                          name: (identifier [1079, 8] - [1079, 29])
                          (expression_statement [1080, 3] - [1080, 115]
                            (call_expression [1080, 3] - [1080, 114]
                              function: (identifier [1080, 3] - [1080, 19])
                              arguments: (argument_list [1080, 19] - [1080, 114]
                                (string_literal [1080, 20] - [1080, 52]
                                  (escape_sequence [1080, 49] - [1080, 51]))
                                (field_expression [1080, 54] - [1080, 75]
                                  argument: (identifier [1080, 54] - [1080, 70])
                                  field: (field_identifier [1080, 71] - [1080, 75]))
                                (call_expression [1080, 77] - [1080, 113]
                                  function: (field_expression [1080, 77] - [1080, 111]
                                    argument: (call_expression [1080, 77] - [1080, 105]
                                      function: (field_expression [1080, 77] - [1080, 103]
                                        argument: (call_expression [1080, 77] - [1080, 93]
                                          function: (field_expression [1080, 77] - [1080, 91]
                                            argument: (identifier [1080, 77] - [1080, 83])
                                            field: (field_identifier [1080, 84] - [1080, 91]))
                                          arguments: (argument_list [1080, 91] - [1080, 93]))
                                        field: (field_identifier [1080, 94] - [1080, 103]))
                                      arguments: (argument_list [1080, 103] - [1080, 105]))
                                    field: (field_identifier [1080, 106] - [1080, 111]))
                                  arguments: (argument_list [1080, 111] - [1080, 113]))))))
                        (comment [1081, 8] - [1081, 32]))
                      alternative: (if_statement [1083, 7] - [1097, 3]
                        condition: (condition_clause [1083, 10] - [1083, 56]
                          value: (binary_expression [1083, 11] - [1083, 55]
                            left: (field_expression [1083, 11] - [1083, 35]
                              argument: (identifier [1083, 11] - [1083, 27])
                              field: (field_identifier [1083, 28] - [1083, 35]))
                            right: (identifier [1083, 39] - [1083, 55])))
                        consequence: (compound_statement [1084, 2] - [1097, 3]
                          (declaration [1085, 3] - [1085, 24]
                            type: (type_identifier [1085, 3] - [1085, 13])
                            declarator: (identifier [1085, 14] - [1085, 23]))
                          (expression_statement [1086, 3] - [1086, 51]
                            (assignment_expression [1086, 3] - [1086, 50]
                              left: (field_expression [1086, 3] - [1086, 19]
                                argument: (identifier [1086, 3] - [1086, 12])
                                field: (field_identifier [1086, 13] - [1086, 19]))
                              right: (call_expression [1086, 22] - [1086, 50]
                                function: (field_expression [1086, 22] - [1086, 48]
                                  argument: (call_expression [1086, 22] - [1086, 38]
                                    function: (field_expression [1086, 22] - [1086, 36]
                                      argument: (identifier [1086, 22] - [1086, 28])
                                      field: (field_identifier [1086, 29] - [1086, 36]))
                                    arguments: (argument_list [1086, 36] - [1086, 38]))
                                  field: (field_identifier [1086, 39] - [1086, 48]))
                                arguments: (argument_list [1086, 48] - [1086, 50]))))
                          (expression_statement [1087, 3] - [1087, 42]
                            (assignment_expression [1087, 3] - [1087, 41]
                              left: (field_expression [1087, 3] - [1087, 17]
                                argument: (identifier [1087, 3] - [1087, 12])
                                field: (field_identifier [1087, 13] - [1087, 17]))
                              right: (field_expression [1087, 20] - [1087, 41]
                                argument: (identifier [1087, 20] - [1087, 36])
                                field: (field_identifier [1087, 37] - [1087, 41]))))
                          (declaration [1088, 3] - [1088, 48]
                            type: (type_identifier [1088, 3] - [1088, 13])
                            declarator: (init_declarator [1088, 14] - [1088, 47]
                              declarator: (identifier [1088, 14] - [1088, 21])
                              value: (call_expression [1088, 24] - [1088, 47]
                                function: (identifier [1088, 24] - [1088, 36])
                                arguments: (argument_list [1088, 36] - [1088, 47]
                                  (identifier [1088, 37] - [1088, 46])))))
                          (if_statement [1089, 3] - [1093, 4]
                            condition: (condition_clause [1089, 6] - [1089, 33]
                              value: (binary_expression [1089, 7] - [1089, 32]
                                left: (field_expression [1089, 7] - [1089, 21]
                                  argument: (identifier [1089, 7] - [1089, 14])
                                  field: (field_identifier [1089, 15] - [1089, 21]))
                                right: (string_literal [1089, 25] - [1089, 32])))
                            consequence: (compound_statement [1090, 3] - [1093, 4]
                              (expression_statement [1091, 4] - [1091, 189]
                                (call_expression [1091, 4] - [1091, 188]
                                  function: (identifier [1091, 4] - [1091, 16])
                                  arguments: (argument_list [1091, 16] - [1091, 188]
                                    (call_expression [1091, 17] - [1091, 157]
                                      function: (identifier [1091, 17] - [1091, 29])
                                      arguments: (argument_list [1091, 29] - [1091, 157]
                                        (identifier [1091, 30] - [1091, 46])
                                        (field_expression [1091, 48] - [1091, 72]
                                          argument: (identifier [1091, 48] - [1091, 64])
                                          field: (field_identifier [1091, 65] - [1091, 72]))
                                        (field_expression [1091, 74] - [1091, 96]
                                          argument: (identifier [1091, 74] - [1091, 90])
                                          field: (field_identifier [1091, 91] - [1091, 96]))
                                        (identifier [1091, 98] - [1091, 110])
                                        (field_expression [1091, 112] - [1091, 133]
                                          argument: (identifier [1091, 112] - [1091, 128])
                                          field: (field_identifier [1091, 129] - [1091, 133]))
                                        (field_expression [1091, 135] - [1091, 156]
                                          argument: (identifier [1091, 135] - [1091, 151])
                                          field: (field_identifier [1091, 152] - [1091, 156]))))
                                    (field_expression [1091, 159] - [1091, 173]
                                      argument: (identifier [1091, 159] - [1091, 166])
                                      field: (field_identifier [1091, 167] - [1091, 173]))
                                    (field_expression [1091, 175] - [1091, 187]
                                      argument: (identifier [1091, 175] - [1091, 182])
                                      field: (field_identifier [1091, 183] - [1091, 187])))))
                              (expression_statement [1092, 4] - [1092, 155]
                                (call_expression [1092, 4] - [1092, 154]
                                  function: (identifier [1092, 4] - [1092, 16])
                                  arguments: (argument_list [1092, 16] - [1092, 154]
                                    (call_expression [1092, 17] - [1092, 100]
                                      function: (identifier [1092, 17] - [1092, 29])
                                      arguments: (argument_list [1092, 29] - [1092, 100]
                                        (identifier [1092, 30] - [1092, 49])
                                        (field_expression [1092, 51] - [1092, 75]
                                          argument: (identifier [1092, 51] - [1092, 67])
                                          field: (field_identifier [1092, 68] - [1092, 75]))
                                        (field_expression [1092, 77] - [1092, 99]
                                          argument: (identifier [1092, 77] - [1092, 93])
                                          field: (field_identifier [1092, 94] - [1092, 99]))))
                                    (call_expression [1092, 102] - [1092, 130]
                                      function: (field_expression [1092, 102] - [1092, 128]
                                        argument: (call_expression [1092, 102] - [1092, 118]
                                          function: (field_expression [1092, 102] - [1092, 116]
                                            argument: (identifier [1092, 102] - [1092, 108])
                                            field: (field_identifier [1092, 109] - [1092, 116]))
                                          arguments: (argument_list [1092, 116] - [1092, 118]))
                                        field: (field_identifier [1092, 119] - [1092, 128]))
                                      arguments: (argument_list [1092, 128] - [1092, 130]))
                                    (field_expression [1092, 132] - [1092, 153]
                                      argument: (identifier [1092, 132] - [1092, 148])
                                      field: (field_identifier [1092, 149] - [1092, 153])))))))
                          (preproc_ifdef [1094, 1] - [1096, 7]
                            name: (identifier [1094, 8] - [1094, 29])
                            (expression_statement [1095, 3] - [1095, 184]
                              (call_expression [1095, 3] - [1095, 183]
                                function: (identifier [1095, 3] - [1095, 19])
                                arguments: (argument_list [1095, 19] - [1095, 183]
                                  (string_literal [1095, 20] - [1095, 56]
                                    (escape_sequence [1095, 53] - [1095, 55]))
                                  (comment [1095, 58] - [1095, 84])
                                  (call_expression [1095, 85] - [1095, 107]
                                    function: (field_expression [1095, 85] - [1095, 105]
                                      argument: (field_expression [1095, 85] - [1095, 99]
                                        argument: (identifier [1095, 85] - [1095, 92])
                                        field: (field_identifier [1095, 93] - [1095, 99]))
                                      field: (field_identifier [1095, 100] - [1095, 105]))
                                    arguments: (argument_list [1095, 105] - [1095, 107]))
                                  (field_expression [1095, 109] - [1095, 121]
                                    argument: (identifier [1095, 109] - [1095, 116])
                                    field: (field_identifier [1095, 117] - [1095, 121]))
                                  (call_expression [1095, 123] - [1095, 159]
                                    function: (field_expression [1095, 123] - [1095, 157]
                                      argument: (call_expression [1095, 123] - [1095, 151]
                                        function: (field_expression [1095, 123] - [1095, 149]
                                          argument: (call_expression [1095, 123] - [1095, 139]
                                            function: (field_expression [1095, 123] - [1095, 137]
                                              argument: (identifier [1095, 123] - [1095, 129])
                                              field: (field_identifier [1095, 130] - [1095, 137]))
                                            arguments: (argument_list [1095, 137] - [1095, 139]))
                                          field: (field_identifier [1095, 140] - [1095, 149]))
                                        arguments: (argument_list [1095, 149] - [1095, 151]))
                                      field: (field_identifier [1095, 152] - [1095, 157]))
                                    arguments: (argument_list [1095, 157] - [1095, 159]))
                                  (field_expression [1095, 161] - [1095, 182]
                                    argument: (identifier [1095, 161] - [1095, 177])
                                    field: (field_identifier [1095, 178] - [1095, 182]))))))
                          (comment [1096, 8] - [1096, 32])))))))))))
      (function_definition [1100, 1] - [1198, 2]
        type: (primitive_type [1100, 1] - [1100, 5])
        declarator: (function_declarator [1100, 6] - [1100, 95]
          declarator: (qualified_identifier [1100, 6] - [1100, 40]
            scope: (namespace_identifier [1100, 6] - [1100, 18])
            name: (identifier [1100, 20] - [1100, 40]))
          parameters: (parameter_list [1100, 40] - [1100, 95]
            (parameter_declaration [1100, 41] - [1100, 62]
              type: (qualified_identifier [1100, 41] - [1100, 52]
                scope: (namespace_identifier [1100, 41] - [1100, 44])
                name: (type_identifier [1100, 46] - [1100, 52]))
              declarator: (identifier [1100, 53] - [1100, 62]))
            (parameter_declaration [1100, 64] - [1100, 94]
              type: (qualified_identifier [1100, 64] - [1100, 87]
                scope: (namespace_identifier [1100, 64] - [1100, 68])
                name: (qualified_identifier [1100, 70] - [1100, 87]
                  scope: (namespace_identifier [1100, 70] - [1100, 72])
                  name: (qualified_identifier [1100, 74] - [1100, 87]
                    scope: (namespace_identifier [1100, 74] - [1100, 77])
                    name: (type_identifier [1100, 79] - [1100, 87]))))
              declarator: (identifier [1100, 88] - [1100, 94]))))
        body: (compound_statement [1101, 1] - [1198, 2]
          (comment [1102, 2] - [1102, 11])
          (preproc_ifdef [1103, 1] - [1105, 7]
            name: (identifier [1103, 8] - [1103, 29])
            (comment [1104, 1] - [1104, 69]))
          (comment [1105, 8] - [1105, 32])
          (declaration [1106, 2] - [1106, 60]
            type: (type_identifier [1106, 2] - [1106, 14])
            declarator: (init_declarator [1106, 15] - [1106, 59]
              declarator: (identifier [1106, 15] - [1106, 31])
              value: (call_expression [1106, 34] - [1106, 59]
                function: (identifier [1106, 34] - [1106, 48])
                arguments: (argument_list [1106, 48] - [1106, 59]
                  (identifier [1106, 49] - [1106, 58])))))
          (comment [1108, 2] - [1108, 86])
          (preproc_ifdef [1109, 1] - [1111, 7]
            name: (identifier [1109, 8] - [1109, 29])
            (expression_statement [1110, 2] - [1110, 91]
              (call_expression [1110, 2] - [1110, 90]
                function: (identifier [1110, 2] - [1110, 18])
                arguments: (argument_list [1110, 18] - [1110, 90]
                  (string_literal [1110, 19] - [1110, 43]
                    (escape_sequence [1110, 40] - [1110, 42]))
                  (call_expression [1110, 45] - [1110, 89]
                    function: (identifier [1110, 45] - [1110, 63])
                    arguments: (argument_list [1110, 63] - [1110, 89]
                      (field_expression [1110, 64] - [1110, 88]
                        argument: (identifier [1110, 64] - [1110, 80])
                        field: (field_identifier [1110, 81] - [1110, 88]))))))))
          (comment [1111, 8] - [1111, 32])
          (if_statement [1113, 2] - [1197, 3]
            condition: (condition_clause [1113, 5] - [1113, 64]
              value: (binary_expression [1113, 6] - [1113, 63]
                left: (field_expression [1113, 6] - [1113, 30]
                  argument: (identifier [1113, 6] - [1113, 22])
                  field: (field_identifier [1113, 23] - [1113, 30]))
                right: (identifier [1113, 34] - [1113, 63])))
            consequence: (compound_statement [1114, 2] - [1117, 3]
              (expression_statement [1115, 3] - [1115, 31]
                (assignment_expression [1115, 3] - [1115, 30]
                  left: (identifier [1115, 3] - [1115, 23])
                  right: (true [1115, 26] - [1115, 30])))
              (comment [1116, 3] - [1116, 36]))
            alternative: (if_statement [1118, 7] - [1197, 3]
              condition: (condition_clause [1118, 10] - [1118, 66]
                value: (binary_expression [1118, 11] - [1118, 65]
                  left: (field_expression [1118, 11] - [1118, 35]
                    argument: (identifier [1118, 11] - [1118, 27])
                    field: (field_identifier [1118, 28] - [1118, 35]))
                  right: (identifier [1118, 39] - [1118, 65])))
              consequence: (compound_statement [1119, 2] - [1125, 3]
                (expression_statement [1120, 3] - [1120, 30]
                  (call_expression [1120, 3] - [1120, 29]
                    function: (identifier [1120, 3] - [1120, 11])
                    arguments: (argument_list [1120, 11] - [1120, 29]
                      (identifier [1120, 12] - [1120, 28]))))
                (expression_statement [1121, 3] - [1121, 45]
                  (call_expression [1121, 3] - [1121, 44]
                    function: (identifier [1121, 3] - [1121, 17])
                    arguments: (argument_list [1121, 17] - [1121, 44]
                      (field_expression [1121, 18] - [1121, 40]
                        argument: (identifier [1121, 18] - [1121, 34])
                        field: (field_identifier [1121, 35] - [1121, 40]))
                      (number_literal [1121, 42] - [1121, 43]))))
                (preproc_ifdef [1122, 1] - [1124, 7]
                  name: (identifier [1122, 8] - [1122, 29])
                  (expression_statement [1123, 3] - [1123, 51]
                    (call_expression [1123, 3] - [1123, 50]
                      function: (identifier [1123, 3] - [1123, 19])
                      arguments: (argument_list [1123, 19] - [1123, 50]
                        (string_literal [1123, 20] - [1123, 49]
                          (escape_sequence [1123, 46] - [1123, 48]))))))
                (comment [1124, 8] - [1124, 32]))
              alternative: (if_statement [1126, 7] - [1197, 3]
                condition: (condition_clause [1126, 10] - [1126, 70]
                  value: (binary_expression [1126, 11] - [1126, 69]
                    left: (field_expression [1126, 11] - [1126, 35]
                      argument: (identifier [1126, 11] - [1126, 27])
                      field: (field_identifier [1126, 28] - [1126, 35]))
                    right: (identifier [1126, 39] - [1126, 69])))
                consequence: (compound_statement [1127, 2] - [1133, 3]
                  (expression_statement [1128, 3] - [1128, 34]
                    (call_expression [1128, 3] - [1128, 33]
                      function: (identifier [1128, 3] - [1128, 11])
                      arguments: (argument_list [1128, 11] - [1128, 33]
                        (identifier [1128, 12] - [1128, 32]))))
                  (expression_statement [1129, 3] - [1129, 45]
                    (call_expression [1129, 3] - [1129, 44]
                      function: (identifier [1129, 3] - [1129, 17])
                      arguments: (argument_list [1129, 17] - [1129, 44]
                        (field_expression [1129, 18] - [1129, 40]
                          argument: (identifier [1129, 18] - [1129, 34])
                          field: (field_identifier [1129, 35] - [1129, 40]))
                        (number_literal [1129, 42] - [1129, 43]))))
                  (preproc_ifdef [1130, 1] - [1132, 7]
                    name: (identifier [1130, 8] - [1130, 29])
                    (expression_statement [1131, 3] - [1131, 54]
                      (call_expression [1131, 3] - [1131, 53]
                        function: (identifier [1131, 3] - [1131, 19])
                        arguments: (argument_list [1131, 19] - [1131, 53]
                          (string_literal [1131, 20] - [1131, 52]
                            (escape_sequence [1131, 49] - [1131, 51]))))))
                  (comment [1132, 8] - [1132, 32]))
                alternative: (if_statement [1134, 7] - [1197, 3]
                  condition: (condition_clause [1134, 10] - [1134, 63]
                    value: (binary_expression [1134, 11] - [1134, 62]
                      left: (field_expression [1134, 11] - [1134, 35]
                        argument: (identifier [1134, 11] - [1134, 27])
                        field: (field_identifier [1134, 28] - [1134, 35]))
                      right: (identifier [1134, 39] - [1134, 62])))
                  consequence: (compound_statement [1135, 2] - [1160, 3]
                    (expression_statement [1136, 3] - [1136, 30]
                      (call_expression [1136, 3] - [1136, 29]
                        function: (identifier [1136, 3] - [1136, 11])
                        arguments: (argument_list [1136, 11] - [1136, 29]
                          (identifier [1136, 12] - [1136, 28]))))
                    (preproc_ifdef [1138, 1] - [1140, 7]
                      name: (identifier [1138, 8] - [1138, 29])
                      (comment [1139, 3] - [1139, 97]))
                    (comment [1140, 8] - [1140, 32])
                    (expression_statement [1141, 3] - [1141, 31]
                      (call_expression [1141, 3] - [1141, 30]
                        function: (field_expression [1141, 3] - [1141, 28]
                          argument: (identifier [1141, 3] - [1141, 23])
                          field: (field_identifier [1141, 24] - [1141, 28]))
                        arguments: (argument_list [1141, 28] - [1141, 30])))
                    (comment [1142, 3] - [1142, 44])
                    (declaration [1143, 3] - [1143, 67]
                      type: (type_identifier [1143, 3] - [1143, 17])
                      declarator: (init_declarator [1143, 17] - [1143, 66]
                        declarator: (pointer_declarator [1143, 17] - [1143, 26]
                          declarator: (identifier [1143, 19] - [1143, 26]))
                        value: (call_expression [1143, 29] - [1143, 66]
                          function: (identifier [1143, 29] - [1143, 42])
                          arguments: (argument_list [1143, 42] - [1143, 66]
                            (field_expression [1143, 43] - [1143, 65]
                              argument: (identifier [1143, 43] - [1143, 59])
                              field: (field_identifier [1143, 60] - [1143, 65]))))))
                    (if_statement [1144, 3] - [1149, 4]
                      condition: (condition_clause [1144, 6] - [1144, 15]
                        value: (identifier [1144, 7] - [1144, 14]))
                      consequence: (compound_statement [1145, 3] - [1149, 4]
                        (declaration [1146, 4] - [1146, 43]
                          type: (type_identifier [1146, 4] - [1146, 9])
                          declarator: (init_declarator [1146, 9] - [1146, 42]
                            declarator: (pointer_declarator [1146, 9] - [1146, 20]
                              declarator: (identifier [1146, 11] - [1146, 20]))
                            value: (field_expression [1146, 23] - [1146, 42]
                              argument: (identifier [1146, 23] - [1146, 30])
                              field: (field_identifier [1146, 32] - [1146, 42]))))
                        (expression_statement [1147, 4] - [1147, 36]
                          (assignment_expression [1147, 4] - [1147, 35]
                            left: (field_expression [1147, 4] - [1147, 28]
                              argument: (identifier [1147, 4] - [1147, 13])
                              field: (field_identifier [1147, 15] - [1147, 28]))
                            right: (number_literal [1147, 31] - [1147, 35])))
                        (expression_statement [1148, 4] - [1148, 38]
                          (assignment_expression [1148, 4] - [1148, 37]
                            left: (field_expression [1148, 4] - [1148, 30]
                              argument: (identifier [1148, 4] - [1148, 13])
                              field: (field_identifier [1148, 15] - [1148, 30]))
                            right: (number_literal [1148, 33] - [1148, 37])))))
                    (expression_statement [1151, 3] - [1151, 33]
                      (call_expression [1151, 3] - [1151, 32]
                        function: (field_expression [1151, 3] - [1151, 30]
                          argument: (identifier [1151, 3] - [1151, 23])
                          field: (field_identifier [1151, 24] - [1151, 30]))
                        arguments: (argument_list [1151, 30] - [1151, 32])))
                    (expression_statement [1153, 3] - [1153, 45]
                      (call_expression [1153, 3] - [1153, 44]
                        function: (identifier [1153, 3] - [1153, 17])
                        arguments: (argument_list [1153, 17] - [1153, 44]
                          (field_expression [1153, 18] - [1153, 40]
                            argument: (identifier [1153, 18] - [1153, 34])
                            field: (field_identifier [1153, 35] - [1153, 40]))
                          (number_literal [1153, 42] - [1153, 43]))))
                    (preproc_ifdef [1154, 0] - [1159, 6]
                      name: (identifier [1154, 7] - [1154, 28])
                      (if_statement [1155, 3] - [1158, 53]
                        condition: (condition_clause [1155, 6] - [1155, 15]
                          value: (identifier [1155, 7] - [1155, 14]))
                        consequence: (expression_statement [1156, 4] - [1156, 157]
                          (call_expression [1156, 4] - [1156, 156]
                            function: (identifier [1156, 4] - [1156, 20])
                            arguments: (argument_list [1156, 20] - [1156, 156]
                              (string_literal [1156, 21] - [1156, 62]
                                (escape_sequence [1156, 59] - [1156, 61]))
                              (field_expression [1156, 64] - [1156, 83]
                                argument: (identifier [1156, 64] - [1156, 71])
                                field: (field_identifier [1156, 73] - [1156, 83]))
                              (field_expression [1156, 85] - [1156, 121]
                                argument: (field_expression [1156, 85] - [1156, 104]
                                  argument: (identifier [1156, 85] - [1156, 92])
                                  field: (field_identifier [1156, 94] - [1156, 104]))
                                field: (field_identifier [1156, 106] - [1156, 121]))
                              (field_expression [1156, 123] - [1156, 155]
                                argument: (field_expression [1156, 123] - [1156, 142]
                                  argument: (identifier [1156, 123] - [1156, 130])
                                  field: (field_identifier [1156, 132] - [1156, 142]))
                                field: (field_identifier [1156, 144] - [1156, 155])))))
                        alternative: (expression_statement [1158, 4] - [1158, 53]
                          (call_expression [1158, 4] - [1158, 52]
                            function: (identifier [1158, 4] - [1158, 20])
                            arguments: (argument_list [1158, 20] - [1158, 52]
                              (string_literal [1158, 21] - [1158, 51]
                                (escape_sequence [1158, 48] - [1158, 50])))))))
                    (comment [1159, 7] - [1159, 31]))
                  alternative: (if_statement [1161, 7] - [1197, 3]
                    condition: (condition_clause [1161, 10] - [1161, 63]
                      value: (binary_expression [1161, 11] - [1161, 62]
                        left: (field_expression [1161, 11] - [1161, 35]
                          argument: (identifier [1161, 11] - [1161, 27])
                          field: (field_identifier [1161, 28] - [1161, 35]))
                        right: (identifier [1161, 39] - [1161, 62])))
                    consequence: (compound_statement [1162, 2] - [1168, 3]
                      (expression_statement [1163, 3] - [1163, 30]
                        (call_expression [1163, 3] - [1163, 29]
                          function: (identifier [1163, 3] - [1163, 11])
                          arguments: (argument_list [1163, 11] - [1163, 29]
                            (identifier [1163, 12] - [1163, 28]))))
                      (expression_statement [1164, 3] - [1164, 45]
                        (call_expression [1164, 3] - [1164, 44]
                          function: (identifier [1164, 3] - [1164, 17])
                          arguments: (argument_list [1164, 17] - [1164, 44]
                            (field_expression [1164, 18] - [1164, 40]
                              argument: (identifier [1164, 18] - [1164, 34])
                              field: (field_identifier [1164, 35] - [1164, 40]))
                            (number_literal [1164, 42] - [1164, 43]))))
                      (preproc_ifdef [1165, 1] - [1167, 7]
                        name: (identifier [1165, 8] - [1165, 29])
                        (expression_statement [1166, 3] - [1166, 53]
                          (call_expression [1166, 3] - [1166, 52]
                            function: (identifier [1166, 3] - [1166, 19])
                            arguments: (argument_list [1166, 19] - [1166, 52]
                              (string_literal [1166, 20] - [1166, 51]
                                (escape_sequence [1166, 48] - [1166, 50]))))))
                      (comment [1167, 8] - [1167, 32]))
                    alternative: (if_statement [1169, 7] - [1197, 3]
                      condition: (condition_clause [1169, 10] - [1169, 65]
                        value: (binary_expression [1169, 11] - [1169, 64]
                          left: (field_expression [1169, 11] - [1169, 35]
                            argument: (identifier [1169, 11] - [1169, 27])
                            field: (field_identifier [1169, 28] - [1169, 35]))
                          right: (identifier [1169, 39] - [1169, 64])))
                      consequence: (compound_statement [1170, 2] - [1176, 3]
                        (comment [1171, 3] - [1171, 44])
                        (expression_statement [1172, 3] - [1172, 44]
                          (call_expression [1172, 3] - [1172, 43]
                            function: (identifier [1172, 3] - [1172, 12])
                            arguments: (argument_list [1172, 12] - [1172, 43]
                              (cast_expression [1172, 13] - [1172, 42]
                                type: (type_descriptor [1172, 14] - [1172, 20]
                                  type: (type_identifier [1172, 14] - [1172, 19])
                                  declarator: (abstract_pointer_declarator [1172, 19] - [1172, 20]))
                                value: (field_expression [1172, 21] - [1172, 42]
                                  argument: (identifier [1172, 21] - [1172, 37])
                                  field: (field_identifier [1172, 38] - [1172, 42]))))))
                        (preproc_ifdef [1173, 1] - [1175, 7]
                          name: (identifier [1173, 8] - [1173, 29])
                          (expression_statement [1174, 3] - [1174, 55]
                            (call_expression [1174, 3] - [1174, 54]
                              function: (identifier [1174, 3] - [1174, 19])
                              arguments: (argument_list [1174, 19] - [1174, 54]
                                (string_literal [1174, 20] - [1174, 53]
                                  (escape_sequence [1174, 50] - [1174, 52]))))))
                        (comment [1175, 8] - [1175, 32]))
                      alternative: (if_statement [1177, 7] - [1197, 3]
                        condition: (condition_clause [1177, 10] - [1177, 65]
                          value: (binary_expression [1177, 11] - [1177, 64]
                            left: (field_expression [1177, 11] - [1177, 35]
                              argument: (identifier [1177, 11] - [1177, 27])
                              field: (field_identifier [1177, 28] - [1177, 35]))
                            right: (identifier [1177, 39] - [1177, 64])))
                        consequence: (compound_statement [1178, 2] - [1182, 3]
                          (preproc_ifdef [1179, 1] - [1181, 7]
                            name: (identifier [1179, 8] - [1179, 29])
                            (expression_statement [1180, 3] - [1180, 55]
                              (call_expression [1180, 3] - [1180, 54]
                                function: (identifier [1180, 3] - [1180, 19])
                                arguments: (argument_list [1180, 19] - [1180, 54]
                                  (string_literal [1180, 20] - [1180, 53]
                                    (escape_sequence [1180, 50] - [1180, 52]))))))
                          (comment [1181, 8] - [1181, 32]))
                        alternative: (if_statement [1183, 7] - [1197, 3]
                          condition: (condition_clause [1183, 10] - [1183, 56]
                            value: (binary_expression [1183, 11] - [1183, 55]
                              left: (field_expression [1183, 11] - [1183, 35]
                                argument: (identifier [1183, 11] - [1183, 27])
                                field: (field_identifier [1183, 28] - [1183, 35]))
                              right: (identifier [1183, 39] - [1183, 55])))
                          consequence: (compound_statement [1184, 2] - [1190, 3]
                            (expression_statement [1185, 3] - [1185, 156]
                              (call_expression [1185, 3] - [1185, 155]
                                function: (identifier [1185, 3] - [1185, 13])
                                arguments: (argument_list [1185, 13] - [1185, 155]
                                  (call_expression [1185, 14] - [1185, 154]
                                    function: (identifier [1185, 14] - [1185, 26])
                                    arguments: (argument_list [1185, 26] - [1185, 154]
                                      (identifier [1185, 27] - [1185, 43])
                                      (field_expression [1185, 45] - [1185, 69]
                                        argument: (identifier [1185, 45] - [1185, 61])
                                        field: (field_identifier [1185, 62] - [1185, 69]))
                                      (field_expression [1185, 71] - [1185, 93]
                                        argument: (identifier [1185, 71] - [1185, 87])
                                        field: (field_identifier [1185, 88] - [1185, 93]))
                                      (identifier [1185, 95] - [1185, 107])
                                      (field_expression [1185, 109] - [1185, 130]
                                        argument: (identifier [1185, 109] - [1185, 125])
                                        field: (field_identifier [1185, 126] - [1185, 130]))
                                      (field_expression [1185, 132] - [1185, 153]
                                        argument: (identifier [1185, 132] - [1185, 148])
                                        field: (field_identifier [1185, 149] - [1185, 153])))))))
                            (expression_statement [1186, 3] - [1186, 45]
                              (call_expression [1186, 3] - [1186, 44]
                                function: (identifier [1186, 3] - [1186, 17])
                                arguments: (argument_list [1186, 17] - [1186, 44]
                                  (field_expression [1186, 18] - [1186, 40]
                                    argument: (identifier [1186, 18] - [1186, 34])
                                    field: (field_identifier [1186, 35] - [1186, 40]))
                                  (number_literal [1186, 42] - [1186, 43]))))
                            (preproc_ifdef [1187, 1] - [1189, 7]
                              name: (identifier [1187, 8] - [1187, 29])
                              (expression_statement [1188, 3] - [1188, 46]
                                (call_expression [1188, 3] - [1188, 45]
                                  function: (identifier [1188, 3] - [1188, 19])
                                  arguments: (argument_list [1188, 19] - [1188, 45]
                                    (string_literal [1188, 20] - [1188, 44]
                                      (escape_sequence [1188, 41] - [1188, 43]))))))
                            (comment [1189, 8] - [1189, 32]))
                          alternative: (if_statement [1191, 7] - [1197, 3]
                            condition: (condition_clause [1191, 10] - [1191, 59]
                              value: (binary_expression [1191, 11] - [1191, 58]
                                left: (field_expression [1191, 11] - [1191, 35]
                                  argument: (identifier [1191, 11] - [1191, 27])
                                  field: (field_identifier [1191, 28] - [1191, 35]))
                                right: (identifier [1191, 39] - [1191, 58])))
                            consequence: (compound_statement [1192, 2] - [1197, 3]
                              (expression_statement [1193, 3] - [1193, 45]
                                (call_expression [1193, 3] - [1193, 44]
                                  function: (identifier [1193, 3] - [1193, 17])
                                  arguments: (argument_list [1193, 17] - [1193, 44]
                                    (field_expression [1193, 18] - [1193, 40]
                                      argument: (identifier [1193, 18] - [1193, 34])
                                      field: (field_identifier [1193, 35] - [1193, 40]))
                                    (number_literal [1193, 42] - [1193, 43]))))
                              (preproc_ifdef [1194, 1] - [1196, 7]
                                name: (identifier [1194, 8] - [1194, 29])
                                (expression_statement [1195, 3] - [1195, 49]
                                  (call_expression [1195, 3] - [1195, 48]
                                    function: (identifier [1195, 3] - [1195, 19])
                                    arguments: (argument_list [1195, 19] - [1195, 48]
                                      (string_literal [1195, 20] - [1195, 47]
                                        (escape_sequence [1195, 44] - [1195, 46]))))))
                              (comment [1196, 8] - [1196, 32])))))))))))))
      (type_definition [1200, 1] - [1203, 22]
        type: (struct_specifier [1200, 9] - [1203, 2]
          body: (field_declaration_list [1200, 16] - [1203, 2]
            (field_declaration [1201, 2] - [1201, 23]
              type: (qualified_identifier [1201, 2] - [1201, 13]
                scope: (namespace_identifier [1201, 2] - [1201, 5])
                name: (type_identifier [1201, 7] - [1201, 13]))
              declarator: (field_identifier [1201, 14] - [1201, 22]))
            (field_declaration [1202, 2] - [1202, 33]
              type: (qualified_identifier [1202, 2] - [1202, 25]
                scope: (namespace_identifier [1202, 2] - [1202, 6])
                name: (qualified_identifier [1202, 8] - [1202, 25]
                  scope: (namespace_identifier [1202, 8] - [1202, 10])
                  name: (qualified_identifier [1202, 12] - [1202, 25]
                    scope: (namespace_identifier [1202, 12] - [1202, 15])
                    name: (type_identifier [1202, 17] - [1202, 25]))))
              declarator: (field_identifier [1202, 26] - [1202, 32]))))
        declarator: (type_identifier [1203, 3] - [1203, 21]))
      (declaration [1204, 1] - [1204, 47]
        type: (qualified_identifier [1204, 1] - [1204, 32]
          scope: (namespace_identifier [1204, 1] - [1204, 4])
          name: (template_type [1204, 6] - [1204, 32]
            name: (type_identifier [1204, 6] - [1204, 12])
            arguments: (template_argument_list [1204, 12] - [1204, 32]
              (type_descriptor [1204, 13] - [1204, 31]
                type: (type_identifier [1204, 13] - [1204, 31])))))
        declarator: (identifier [1204, 33] - [1204, 46]))
      (function_definition [1206, 1] - [1235, 2]
        type: (primitive_type [1206, 1] - [1206, 5])
        declarator: (function_declarator [1206, 6] - [1206, 31]
          declarator: (qualified_identifier [1206, 6] - [1206, 29]
            scope: (namespace_identifier [1206, 6] - [1206, 18])
            name: (identifier [1206, 20] - [1206, 29]))
          parameters: (parameter_list [1206, 29] - [1206, 31]))
        body: (compound_statement [1206, 32] - [1235, 2]
          (declaration [1207, 2] - [1207, 30]
            type: (qualified_identifier [1207, 2] - [1207, 18]
              scope: (namespace_identifier [1207, 2] - [1207, 6])
              name: (type_identifier [1207, 8] - [1207, 18]))
            declarator: (identifier [1207, 19] - [1207, 29]))
          (declaration [1208, 2] - [1208, 50]
            type: (qualified_identifier [1208, 2] - [1208, 15]
              scope: (namespace_identifier [1208, 2] - [1208, 6])
              name: (qualified_identifier [1208, 8] - [1208, 15]
                scope: (namespace_identifier [1208, 8] - [1208, 10])
                name: (type_identifier [1208, 12] - [1208, 15])))
            declarator: (init_declarator [1208, 16] - [1208, 49]
              declarator: (identifier [1208, 16] - [1208, 27])
              value: (call_expression [1208, 30] - [1208, 49]
                function: (qualified_identifier [1208, 30] - [1208, 47]
                  scope: (namespace_identifier [1208, 30] - [1208, 34])
                  name: (qualified_identifier [1208, 36] - [1208, 47]
                    scope: (namespace_identifier [1208, 36] - [1208, 38])
                    name: (qualified_identifier [1208, 40] - [1208, 47]
                      scope: (namespace_identifier [1208, 40] - [1208, 43])
                      name: (identifier [1208, 45] - [1208, 47]))))
                arguments: (argument_list [1208, 47] - [1208, 49]))))
          (if_statement [1209, 2] - [1210, 51]
            condition: (condition_clause [1209, 5] - [1209, 53]
              value: (call_expression [1209, 6] - [1209, 52]
                function: (field_expression [1209, 6] - [1209, 50]
                  argument: (call_expression [1209, 6] - [1209, 44]
                    function: (qualified_identifier [1209, 6] - [1209, 36]
                      scope: (namespace_identifier [1209, 6] - [1209, 10])
                      name: (qualified_identifier [1209, 12] - [1209, 36]
                        scope: (namespace_identifier [1209, 12] - [1209, 14])
                        name: (qualified_identifier [1209, 16] - [1209, 36]
                          scope: (namespace_identifier [1209, 16] - [1209, 23])
                          name: (identifier [1209, 25] - [1209, 36]))))
                    arguments: (argument_list [1209, 36] - [1209, 44]
                      (identifier [1209, 37] - [1209, 43])))
                  field: (field_identifier [1209, 45] - [1209, 50]))
                arguments: (argument_list [1209, 50] - [1209, 52])))
            consequence: (expression_statement [1210, 3] - [1210, 51]
              (assignment_expression [1210, 3] - [1210, 50]
                left: (qualified_identifier [1210, 3] - [1210, 28]
                  scope: (namespace_identifier [1210, 3] - [1210, 7])
                  name: (qualified_identifier [1210, 9] - [1210, 28]
                    scope: (namespace_identifier [1210, 9] - [1210, 11])
                    name: (qualified_identifier [1210, 13] - [1210, 28]
                      scope: (namespace_identifier [1210, 13] - [1210, 16])
                      name: (identifier [1210, 17] - [1210, 28]))))
                right: (call_expression [1210, 31] - [1210, 50]
                  function: (qualified_identifier [1210, 31] - [1210, 48]
                    scope: (namespace_identifier [1210, 31] - [1210, 35])
                    name: (qualified_identifier [1210, 37] - [1210, 48]
                      scope: (namespace_identifier [1210, 37] - [1210, 39])
                      name: (qualified_identifier [1210, 41] - [1210, 48]
                        scope: (namespace_identifier [1210, 41] - [1210, 44])
                        name: (identifier [1210, 46] - [1210, 48]))))
                  arguments: (argument_list [1210, 48] - [1210, 50])))))
          (declaration [1211, 2] - [1211, 89]
            type: (qualified_identifier [1211, 2] - [1211, 23]
              scope: (namespace_identifier [1211, 2] - [1211, 6])
              name: (qualified_identifier [1211, 8] - [1211, 23]
                scope: (namespace_identifier [1211, 8] - [1211, 10])
                name: (qualified_identifier [1211, 12] - [1211, 23]
                  scope: (namespace_identifier [1211, 12] - [1211, 15])
                  name: (type_identifier [1211, 17] - [1211, 23]))))
            declarator: (function_declarator [1211, 24] - [1211, 88]
              declarator: (identifier [1211, 24] - [1211, 30])
              parameters: (parameter_list [1211, 30] - [1211, 88]
                (parameter_declaration [1211, 31] - [1211, 41]
                  type: (type_identifier [1211, 31] - [1211, 41]))
                (parameter_declaration [1211, 43] - [1211, 87]
                  type: (qualified_identifier [1211, 43] - [1211, 66]
                    scope: (namespace_identifier [1211, 43] - [1211, 47])
                    name: (qualified_identifier [1211, 49] - [1211, 66]
                      scope: (namespace_identifier [1211, 49] - [1211, 51])
                      name: (qualified_identifier [1211, 53] - [1211, 66]
                        scope: (namespace_identifier [1211, 53] - [1211, 56])
                        name: (type_identifier [1211, 58] - [1211, 66]))))
                  declarator: (abstract_function_declarator [1211, 66] - [1211, 87]
                    parameters: (parameter_list [1211, 66] - [1211, 87]
                      (parameter_declaration [1211, 67] - [1211, 78]
                        type: (type_identifier [1211, 67] - [1211, 78]))
                      (parameter_declaration [1211, 80] - [1211, 86]
                        type: (type_identifier [1211, 80] - [1211, 86]))))))))
          (while_statement [1212, 2] - [1234, 3]
            condition: (condition_clause [1212, 8] - [1212, 27]
              value: (identifier [1212, 9] - [1212, 26]))
            body: (compound_statement [1213, 2] - [1234, 3]
              (declaration [1214, 3] - [1214, 22]
                type: (primitive_type [1214, 3] - [1214, 7])
                declarator: (array_declarator [1214, 8] - [1214, 21]
                  declarator: (identifier [1214, 8] - [1214, 14])
                  size: (number_literal [1214, 15] - [1214, 20])))
              (declaration [1215, 3] - [1215, 34]
                type: (qualified_identifier [1215, 3] - [1215, 26]
                  scope: (namespace_identifier [1215, 3] - [1215, 7])
                  name: (qualified_identifier [1215, 9] - [1215, 26]
                    scope: (namespace_identifier [1215, 9] - [1215, 11])
                    name: (qualified_identifier [1215, 13] - [1215, 26]
                      scope: (namespace_identifier [1215, 13] - [1215, 16])
                      name: (type_identifier [1215, 18] - [1215, 26]))))
                declarator: (identifier [1215, 27] - [1215, 33]))
              (declaration [1216, 3] - [1216, 85]
                type: (qualified_identifier [1216, 3] - [1216, 14]
                  scope: (namespace_identifier [1216, 3] - [1216, 6])
                  name: (type_identifier [1216, 8] - [1216, 14]))
                declarator: (init_declarator [1216, 15] - [1216, 84]
                  declarator: (identifier [1216, 15] - [1216, 32])
                  value: (call_expression [1216, 35] - [1216, 84]
                    function: (field_expression [1216, 35] - [1216, 54]
                      argument: (identifier [1216, 35] - [1216, 41])
                      field: (field_identifier [1216, 42] - [1216, 54]))
                    arguments: (argument_list [1216, 54] - [1216, 84]
                      (call_expression [1216, 55] - [1216, 75]
                        function: (qualified_identifier [1216, 55] - [1216, 67]
                          scope: (namespace_identifier [1216, 55] - [1216, 59])
                          name: (identifier [1216, 61] - [1216, 67]))
                        arguments: (argument_list [1216, 67] - [1216, 75]
                          (identifier [1216, 68] - [1216, 74])))
                      (identifier [1216, 77] - [1216, 83])))))
              (declaration [1217, 3] - [1217, 25]
                type: (qualified_identifier [1217, 3] - [1217, 14]
                  scope: (namespace_identifier [1217, 3] - [1217, 6])
                  name: (type_identifier [1217, 8] - [1217, 14]))
                declarator: (identifier [1217, 15] - [1217, 24]))
              (expression_statement [1218, 3] - [1218, 47]
                (call_expression [1218, 3] - [1218, 46]
                  function: (field_expression [1218, 3] - [1218, 19]
                    argument: (identifier [1218, 3] - [1218, 12])
                    field: (field_identifier [1218, 13] - [1218, 19]))
                  arguments: (argument_list [1218, 19] - [1218, 46]
                    (identifier [1218, 20] - [1218, 26])
                    (identifier [1218, 28] - [1218, 45]))))
              (declaration [1219, 3] - [1219, 33]
                type: (type_identifier [1219, 3] - [1219, 21])
                declarator: (identifier [1219, 22] - [1219, 32]))
              (expression_statement [1220, 3] - [1220, 35]
                (assignment_expression [1220, 3] - [1220, 34]
                  left: (field_expression [1220, 3] - [1220, 22]
                    argument: (identifier [1220, 3] - [1220, 13])
                    field: (field_identifier [1220, 14] - [1220, 22]))
                  right: (identifier [1220, 25] - [1220, 34])))
              (expression_statement [1221, 3] - [1221, 30]
                (assignment_expression [1221, 3] - [1221, 29]
                  left: (field_expression [1221, 3] - [1221, 20]
                    argument: (identifier [1221, 3] - [1221, 13])
                    field: (field_identifier [1221, 14] - [1221, 20]))
                  right: (identifier [1221, 23] - [1221, 29])))
              (if_statement [1223, 3] - [1223, 36]
                condition: (condition_clause [1223, 6] - [1223, 27]
                  value: (binary_expression [1223, 7] - [1223, 26]
                    left: (identifier [1223, 7] - [1223, 16])
                    right: (string_literal [1223, 20] - [1223, 26])))
                consequence: (continue_statement [1223, 27] - [1223, 36]))
              (preproc_ifdef [1224, 0] - [1232, 6]
                name: (identifier [1224, 7] - [1224, 23])
                (declaration [1225, 3] - [1225, 61]
                  type: (type_identifier [1225, 3] - [1225, 15])
                  declarator: (init_declarator [1225, 16] - [1225, 60]
                    declarator: (identifier [1225, 16] - [1225, 32])
                    value: (call_expression [1225, 35] - [1225, 60]
                      function: (identifier [1225, 35] - [1225, 49])
                      arguments: (argument_list [1225, 49] - [1225, 60]
                        (identifier [1225, 50] - [1225, 59])))))
                (if_statement [1226, 3] - [1231, 4]
                  condition: (condition_clause [1226, 6] - [1226, 142]
                    value: (binary_expression [1226, 7] - [1226, 141]
                      left: (binary_expression [1226, 7] - [1226, 82]
                        left: (parenthesized_expression [1226, 7] - [1226, 24]
                          (binary_expression [1226, 8] - [1226, 23]
                            left: (binary_expression [1226, 8] - [1226, 18]
                              left: (call_expression [1226, 8] - [1226, 14]
                                function: (identifier [1226, 8] - [1226, 12])
                                arguments: (argument_list [1226, 12] - [1226, 14]))
                              right: (number_literal [1226, 17] - [1226, 18]))
                            right: (number_literal [1226, 22] - [1226, 23])))
                        right: (parenthesized_expression [1226, 26] - [1226, 82]
                          (binary_expression [1226, 27] - [1226, 81]
                            left: (field_expression [1226, 27] - [1226, 51]
                              argument: (identifier [1226, 27] - [1226, 43])
                              field: (field_identifier [1226, 44] - [1226, 51]))
                            right: (identifier [1226, 55] - [1226, 81]))))
                      right: (parenthesized_expression [1226, 86] - [1226, 141]
                        (binary_expression [1226, 87] - [1226, 140]
                          left: (field_expression [1226, 87] - [1226, 111]
                            argument: (identifier [1226, 87] - [1226, 103])
                            field: (field_identifier [1226, 104] - [1226, 111]))
                          right: (identifier [1226, 115] - [1226, 140])))))
                  consequence: (compound_statement [1227, 3] - [1231, 4]
                    (preproc_call [1228, 0] - [1230, 0]
                      directive: (preproc_directive [1228, 0] - [1228, 6])
                      (comment [1228, 6] - [1228, 26])
                      argument: (preproc_arg [1228, 26] - [1229, 41]))
                    (preproc_ifdef [1230, 0] - [1230, 23]
                      name: (identifier [1230, 7] - [1230, 23])))))
              (comment [1232, 7] - [1232, 26])
              (expression_statement [1233, 3] - [1233, 24]
                (call_expression [1233, 3] - [1233, 23]
                  function: (identifier [1233, 3] - [1233, 20])
                  arguments: (argument_list [1233, 20] - [1233, 23]
                    (number_literal [1233, 21] - [1233, 22]))))))))
      (function_definition [1237, 1] - [1270, 2]
        type: (primitive_type [1237, 1] - [1237, 5])
        declarator: (function_declarator [1237, 6] - [1237, 30]
          declarator: (qualified_identifier [1237, 6] - [1237, 28]
            scope: (namespace_identifier [1237, 6] - [1237, 18])
            name: (identifier [1237, 20] - [1237, 28]))
          parameters: (parameter_list [1237, 28] - [1237, 30]))
        body: (compound_statement [1237, 31] - [1270, 2]
          (while_statement [1238, 2] - [1269, 3]
            condition: (condition_clause [1238, 8] - [1238, 26]
              value: (identifier [1238, 9] - [1238, 25]))
            body: (compound_statement [1239, 2] - [1269, 3]
              (if_statement [1240, 3] - [1267, 4]
                condition: (condition_clause [1240, 6] - [1240, 32]
                  value: (binary_expression [1240, 7] - [1240, 31]
                    left: (call_expression [1240, 7] - [1240, 27]
                      function: (field_expression [1240, 7] - [1240, 25]
                        argument: (identifier [1240, 7] - [1240, 20])
                        field: (field_identifier [1240, 21] - [1240, 25]))
                      arguments: (argument_list [1240, 25] - [1240, 27]))
                    right: (number_literal [1240, 30] - [1240, 31])))
                consequence: (compound_statement [1241, 3] - [1267, 4]
                  (declaration [1242, 4] - [1242, 57]
                    type: (type_identifier [1242, 4] - [1242, 22])
                    declarator: (init_declarator [1242, 23] - [1242, 56]
                      declarator: (identifier [1242, 23] - [1242, 33])
                      value: (call_expression [1242, 36] - [1242, 56]
                        function: (field_expression [1242, 36] - [1242, 54]
                          argument: (identifier [1242, 36] - [1242, 49])
                          field: (field_identifier [1242, 50] - [1242, 54]))
                        arguments: (argument_list [1242, 54] - [1242, 56]))))
                  (expression_statement [1243, 4] - [1243, 29]
                    (call_expression [1243, 4] - [1243, 28]
                      function: (field_expression [1243, 4] - [1243, 26]
                        argument: (identifier [1243, 4] - [1243, 17])
                        field: (field_identifier [1243, 18] - [1243, 26]))
                      arguments: (argument_list [1243, 26] - [1243, 28])))
                  (declaration [1244, 4] - [1244, 55]
                    type: (qualified_identifier [1244, 4] - [1244, 27]
                      scope: (namespace_identifier [1244, 4] - [1244, 8])
                      name: (qualified_identifier [1244, 10] - [1244, 27]
                        scope: (namespace_identifier [1244, 10] - [1244, 12])
                        name: (qualified_identifier [1244, 14] - [1244, 27]
                          scope: (namespace_identifier [1244, 14] - [1244, 17])
                          name: (type_identifier [1244, 19] - [1244, 27]))))
                    declarator: (init_declarator [1244, 28] - [1244, 54]
                      declarator: (identifier [1244, 28] - [1244, 34])
                      value: (field_expression [1244, 37] - [1244, 54]
                        argument: (identifier [1244, 37] - [1244, 47])
                        field: (field_identifier [1244, 48] - [1244, 54]))))
                  (declaration [1245, 4] - [1245, 48]
                    type: (qualified_identifier [1245, 4] - [1245, 15]
                      scope: (namespace_identifier [1245, 4] - [1245, 7])
                      name: (type_identifier [1245, 9] - [1245, 15]))
                    declarator: (init_declarator [1245, 16] - [1245, 47]
                      declarator: (identifier [1245, 16] - [1245, 25])
                      value: (field_expression [1245, 28] - [1245, 47]
                        argument: (identifier [1245, 28] - [1245, 38])
                        field: (field_identifier [1245, 39] - [1245, 47]))))
                  (declaration [1246, 4] - [1246, 30]
                    type: (primitive_type [1246, 4] - [1246, 8])
                    declarator: (init_declarator [1246, 9] - [1246, 29]
                      declarator: (identifier [1246, 9] - [1246, 22])
                      value: (true [1246, 25] - [1246, 29])))
                  (preproc_ifdef [1248, 0] - [1250, 6]
                    name: (identifier [1248, 7] - [1248, 28])
                    (expression_statement [1249, 4] - [1249, 127]
                      (call_expression [1249, 4] - [1249, 126]
                        function: (identifier [1249, 4] - [1249, 20])
                        arguments: (argument_list [1249, 20] - [1249, 126]
                          (string_literal [1249, 21] - [1249, 60]
                            (escape_sequence [1249, 57] - [1249, 59]))
                          (call_expression [1249, 62] - [1249, 79]
                            function: (field_expression [1249, 62] - [1249, 77]
                              argument: (identifier [1249, 62] - [1249, 71])
                              field: (field_identifier [1249, 72] - [1249, 77]))
                            arguments: (argument_list [1249, 77] - [1249, 79]))
                          (call_expression [1249, 81] - [1249, 117]
                            function: (field_expression [1249, 81] - [1249, 115]
                              argument: (call_expression [1249, 81] - [1249, 109]
                                function: (field_expression [1249, 81] - [1249, 107]
                                  argument: (call_expression [1249, 81] - [1249, 97]
                                    function: (field_expression [1249, 81] - [1249, 95]
                                      argument: (identifier [1249, 81] - [1249, 87])
                                      field: (field_identifier [1249, 88] - [1249, 95]))
                                    arguments: (argument_list [1249, 95] - [1249, 97]))
                                  field: (field_identifier [1249, 98] - [1249, 107]))
                                arguments: (argument_list [1249, 107] - [1249, 109]))
                              field: (field_identifier [1249, 110] - [1249, 115]))
                            arguments: (argument_list [1249, 115] - [1249, 117]))
                          (identifier [1249, 119] - [1249, 125])))))
                  (comment [1250, 7] - [1250, 31])
                  (if_statement [1252, 4] - [1253, 14]
                    condition: (condition_clause [1252, 7] - [1252, 30]
                      value: (binary_expression [1252, 8] - [1252, 29]
                        left: (call_expression [1252, 8] - [1252, 24]
                          function: (field_expression [1252, 8] - [1252, 22]
                            argument: (identifier [1252, 8] - [1252, 17])
                            field: (field_identifier [1252, 18] - [1252, 22]))
                          arguments: (argument_list [1252, 22] - [1252, 24]))
                        right: (number_literal [1252, 28] - [1252, 29])))
                    consequence: (continue_statement [1253, 5] - [1253, 14]))
                  (if_statement [1255, 4] - [1257, 15]
                    condition: (condition_clause [1255, 7] - [1255, 21]
                      value: (identifier [1255, 8] - [1255, 20]))
                    consequence: (if_statement [1256, 5] - [1257, 15]
                      condition: (condition_clause [1256, 8] - [1256, 52]
                        value: (call_expression [1256, 9] - [1256, 51]
                          function: (identifier [1256, 9] - [1256, 32])
                          arguments: (argument_list [1256, 32] - [1256, 51]
                            (identifier [1256, 33] - [1256, 42])
                            (identifier [1256, 44] - [1256, 50]))))
                      consequence: (continue_statement [1257, 6] - [1257, 15])))
                  (if_statement [1258, 4] - [1259, 14]
                    condition: (condition_clause [1258, 7] - [1258, 51]
                      value: (call_expression [1258, 8] - [1258, 50]
                        function: (identifier [1258, 8] - [1258, 31])
                        arguments: (argument_list [1258, 31] - [1258, 50]
                          (identifier [1258, 32] - [1258, 41])
                          (identifier [1258, 43] - [1258, 49]))))
                    consequence: (continue_statement [1259, 5] - [1259, 14]))
                  (if_statement [1261, 4] - [1266, 5]
                    condition: (condition_clause [1261, 7] - [1261, 22]
                      value: (identifier [1261, 8] - [1261, 21]))
                    consequence: (compound_statement [1262, 4] - [1266, 5]
                      (if_statement [1263, 5] - [1264, 46]
                        condition: (condition_clause [1263, 8] - [1263, 52]
                          value: (identifier [1263, 9] - [1263, 21])
                          (comment [1263, 21] - [1263, 51]))
                        consequence: (expression_statement [1264, 6] - [1264, 46]
                          (call_expression [1264, 6] - [1264, 45]
                            function: (identifier [1264, 6] - [1264, 26])
                            arguments: (argument_list [1264, 26] - [1264, 45]
                              (identifier [1264, 27] - [1264, 36])
                              (identifier [1264, 38] - [1264, 44])))))
                      (expression_statement [1265, 5] - [1265, 45]
                        (call_expression [1265, 5] - [1265, 44]
                          function: (identifier [1265, 5] - [1265, 25])
                          arguments: (argument_list [1265, 25] - [1265, 44]
                            (identifier [1265, 26] - [1265, 35])
                            (identifier [1265, 37] - [1265, 43]))))))))
              (expression_statement [1268, 3] - [1268, 24]
                (call_expression [1268, 3] - [1268, 23]
                  function: (identifier [1268, 3] - [1268, 20])
                  arguments: (argument_list [1268, 20] - [1268, 23]
                    (number_literal [1268, 21] - [1268, 22]))))))))
      (function_definition [1272, 1] - [1274, 2]
        type: (primitive_type [1272, 1] - [1272, 5])
        declarator: (function_declarator [1272, 6] - [1272, 60]
          declarator: (qualified_identifier [1272, 6] - [1272, 32]
            scope: (namespace_identifier [1272, 6] - [1272, 18])
            name: (identifier [1272, 20] - [1272, 32]))
          parameters: (parameter_list [1272, 32] - [1272, 60]
            (parameter_declaration [1272, 33] - [1272, 59]
              (type_qualifier [1272, 33] - [1272, 38])
              type: (qualified_identifier [1272, 39] - [1272, 50]
                scope: (namespace_identifier [1272, 39] - [1272, 42])
                name: (type_identifier [1272, 44] - [1272, 50]))
              declarator: (reference_declarator [1272, 50] - [1272, 59]
                (identifier [1272, 52] - [1272, 59])))))
        body: (compound_statement [1272, 61] - [1274, 2]
          (expression_statement [1273, 2] - [1273, 49]
            (call_expression [1273, 2] - [1273, 48]
              function: (identifier [1273, 2] - [1273, 17])
              arguments: (argument_list [1273, 17] - [1273, 48]
                (identifier [1273, 18] - [1273, 25])
                (identifier [1273, 27] - [1273, 33])
                (identifier [1273, 35] - [1273, 47]))))))
      (expression_statement [1274, 2] - [1274, 3])
      (function_definition [1276, 1] - [1278, 2]
        type: (primitive_type [1276, 1] - [1276, 5])
        declarator: (function_declarator [1276, 6] - [1276, 90]
          declarator: (qualified_identifier [1276, 6] - [1276, 32]
            scope: (namespace_identifier [1276, 6] - [1276, 18])
            name: (identifier [1276, 20] - [1276, 32]))
          parameters: (parameter_list [1276, 32] - [1276, 90]
            (parameter_declaration [1276, 33] - [1276, 59]
              (type_qualifier [1276, 33] - [1276, 38])
              type: (qualified_identifier [1276, 39] - [1276, 50]
                scope: (namespace_identifier [1276, 39] - [1276, 42])
                name: (type_identifier [1276, 44] - [1276, 50]))
              declarator: (reference_declarator [1276, 50] - [1276, 59]
                (identifier [1276, 52] - [1276, 59])))
            (parameter_declaration [1276, 61] - [1276, 79]
              type: (qualified_identifier [1276, 61] - [1276, 72]
                scope: (namespace_identifier [1276, 61] - [1276, 64])
                name: (type_identifier [1276, 66] - [1276, 72]))
              declarator: (identifier [1276, 73] - [1276, 79]))
            (parameter_declaration [1276, 81] - [1276, 89]
              type: (primitive_type [1276, 81] - [1276, 84])
              declarator: (identifier [1276, 85] - [1276, 89]))))
        body: (compound_statement [1276, 91] - [1278, 2]
          (expression_statement [1277, 2] - [1277, 41]
            (call_expression [1277, 2] - [1277, 40]
              function: (identifier [1277, 2] - [1277, 17])
              arguments: (argument_list [1277, 17] - [1277, 40]
                (identifier [1277, 18] - [1277, 25])
                (identifier [1277, 27] - [1277, 33])
                (identifier [1277, 35] - [1277, 39]))))))
      (expression_statement [1278, 2] - [1278, 3])
      (function_definition [1280, 1] - [1282, 2]
        type: (primitive_type [1280, 1] - [1280, 5])
        declarator: (function_declarator [1280, 6] - [1280, 61]
          declarator: (qualified_identifier [1280, 6] - [1280, 27]
            scope: (namespace_identifier [1280, 6] - [1280, 18])
            name: (identifier [1280, 20] - [1280, 27]))
          parameters: (parameter_list [1280, 27] - [1280, 61]
            (parameter_declaration [1280, 28] - [1280, 45]
              type: (type_identifier [1280, 28] - [1280, 33])
              declarator: (pointer_declarator [1280, 33] - [1280, 45]
                declarator: (identifier [1280, 35] - [1280, 45])))
            (parameter_declaration [1280, 47] - [1280, 60]
              type: (primitive_type [1280, 47] - [1280, 54])
              declarator: (identifier [1280, 55] - [1280, 60]))))
        body: (compound_statement [1280, 62] - [1282, 2]
          (expression_statement [1281, 2] - [1281, 155]
            (call_expression [1281, 2] - [1281, 154]
              function: (identifier [1281, 2] - [1281, 14])
              arguments: (argument_list [1281, 14] - [1281, 154]
                (call_expression [1281, 15] - [1281, 153]
                  function: (identifier [1281, 15] - [1281, 27])
                  arguments: (argument_list [1281, 27] - [1281, 153]
                    (identifier [1281, 28] - [1281, 51])
                    (call_expression [1281, 53] - [1281, 79]
                      function: (identifier [1281, 53] - [1281, 66])
                      arguments: (argument_list [1281, 66] - [1281, 79]
                        (pointer_expression [1281, 67] - [1281, 78]
                          argument: (identifier [1281, 68] - [1281, 78]))))
                    (identifier [1281, 81] - [1281, 86])
                    (identifier [1281, 88] - [1281, 94])
                    (field_expression [1281, 96] - [1281, 119]
                      argument: (identifier [1281, 96] - [1281, 106])
                      field: (field_identifier [1281, 108] - [1281, 119]))
                    (sizeof_expression [1281, 121] - [1281, 152]
                      value: (parenthesized_expression [1281, 127] - [1281, 152]
                        (field_expression [1281, 128] - [1281, 151]
                          argument: (identifier [1281, 128] - [1281, 138])
                          field: (field_identifier [1281, 140] - [1281, 151])))))))))))
      (expression_statement [1282, 2] - [1282, 3])
      (function_definition [1284, 1] - [1290, 2]
        type: (primitive_type [1284, 1] - [1284, 5])
        declarator: (function_declarator [1284, 6] - [1284, 62]
          declarator: (qualified_identifier [1284, 6] - [1284, 34]
            scope: (namespace_identifier [1284, 6] - [1284, 18])
            name: (identifier [1284, 20] - [1284, 34]))
          parameters: (parameter_list [1284, 34] - [1284, 62]
            (parameter_declaration [1284, 35] - [1284, 48]
              type: (primitive_type [1284, 35] - [1284, 39])
              declarator: (identifier [1284, 40] - [1284, 48]))
            (parameter_declaration [1284, 50] - [1284, 61]
              type: (primitive_type [1284, 50] - [1284, 58])
              declarator: (identifier [1284, 59] - [1284, 61]))))
        body: (compound_statement [1285, 1] - [1290, 2]
          (if_statement [1286, 2] - [1289, 4]
            condition: (condition_clause [1286, 5] - [1286, 15]
              value: (identifier [1286, 6] - [1286, 14]))
            consequence: (expression_statement [1287, 3] - [1287, 4])
            (comment [1287, 4] - [1287, 53])
            alternative: (expression_statement [1289, 3] - [1289, 4]))
          (comment [1289, 4] - [1289, 9])))
      (function_definition [1292, 1] - [1295, 2]
        type: (primitive_type [1292, 1] - [1292, 5])
        declarator: (function_declarator [1292, 6] - [1292, 67]
          declarator: (qualified_identifier [1292, 6] - [1292, 33]
            scope: (namespace_identifier [1292, 6] - [1292, 18])
            name: (identifier [1292, 20] - [1292, 33]))
          parameters: (parameter_list [1292, 33] - [1292, 67]
            (parameter_declaration [1292, 34] - [1292, 51]
              type: (type_identifier [1292, 34] - [1292, 39])
              declarator: (pointer_declarator [1292, 39] - [1292, 51]
                declarator: (identifier [1292, 41] - [1292, 51])))
            (parameter_declaration [1292, 53] - [1292, 66]
              type: (primitive_type [1292, 53] - [1292, 60])
              declarator: (identifier [1292, 61] - [1292, 66]))))
        body: (compound_statement [1292, 68] - [1295, 2]
          (expression_statement [1293, 2] - [1293, 151]
            (call_expression [1293, 2] - [1293, 150]
              function: (identifier [1293, 2] - [1293, 14])
              arguments: (argument_list [1293, 14] - [1293, 150]
                (call_expression [1293, 15] - [1293, 149]
                  function: (identifier [1293, 15] - [1293, 27])
                  arguments: (argument_list [1293, 27] - [1293, 149]
                    (identifier [1293, 28] - [1293, 46])
                    (call_expression [1293, 48] - [1293, 75]
                      function: (identifier [1293, 48] - [1293, 61])
                      arguments: (argument_list [1293, 62] - [1293, 75]
                        (pointer_expression [1293, 63] - [1293, 74]
                          argument: (identifier [1293, 64] - [1293, 74]))))
                    (identifier [1293, 77] - [1293, 82])
                    (identifier [1293, 84] - [1293, 90])
                    (field_expression [1293, 92] - [1293, 115]
                      argument: (identifier [1293, 92] - [1293, 102])
                      field: (field_identifier [1293, 104] - [1293, 115]))
                    (sizeof_expression [1293, 117] - [1293, 148]
                      value: (parenthesized_expression [1293, 123] - [1293, 148]
                        (field_expression [1293, 124] - [1293, 147]
                          argument: (identifier [1293, 124] - [1293, 134])
                          field: (field_identifier [1293, 136] - [1293, 147])))))))))
          (expression_statement [1294, 2] - [1294, 37]
            (call_expression [1294, 2] - [1294, 36]
              function: (identifier [1294, 2] - [1294, 24])
              arguments: (argument_list [1294, 24] - [1294, 36]
                (identifier [1294, 25] - [1294, 35]))))))
      (function_definition [1297, 1] - [1302, 2]
        type: (primitive_type [1297, 1] - [1297, 5])
        declarator: (function_declarator [1297, 6] - [1297, 67]
          declarator: (qualified_identifier [1297, 6] - [1297, 33]
            scope: (namespace_identifier [1297, 6] - [1297, 18])
            name: (identifier [1297, 20] - [1297, 33]))
          parameters: (parameter_list [1297, 33] - [1297, 67]
            (parameter_declaration [1297, 34] - [1297, 51]
              type: (type_identifier [1297, 34] - [1297, 39])
              declarator: (pointer_declarator [1297, 39] - [1297, 51]
                declarator: (identifier [1297, 41] - [1297, 51])))
            (parameter_declaration [1297, 53] - [1297, 66]
              type: (primitive_type [1297, 53] - [1297, 60])
              declarator: (identifier [1297, 61] - [1297, 66]))))
        body: (compound_statement [1297, 68] - [1302, 2]
          (expression_statement [1298, 2] - [1298, 150]
            (call_expression [1298, 2] - [1298, 149]
              function: (identifier [1298, 2] - [1298, 14])
              arguments: (argument_list [1298, 14] - [1298, 149]
                (call_expression [1298, 15] - [1298, 148]
                  function: (identifier [1298, 15] - [1298, 27])
                  arguments: (argument_list [1298, 27] - [1298, 148]
                    (identifier [1298, 28] - [1298, 46])
                    (call_expression [1298, 48] - [1298, 74]
                      function: (identifier [1298, 48] - [1298, 61])
                      arguments: (argument_list [1298, 61] - [1298, 74]
                        (pointer_expression [1298, 62] - [1298, 73]
                          argument: (identifier [1298, 63] - [1298, 73]))))
                    (identifier [1298, 76] - [1298, 81])
                    (identifier [1298, 83] - [1298, 89])
                    (field_expression [1298, 91] - [1298, 114]
                      argument: (identifier [1298, 91] - [1298, 101])
                      field: (field_identifier [1298, 103] - [1298, 114]))
                    (sizeof_expression [1298, 116] - [1298, 147]
                      value: (parenthesized_expression [1298, 122] - [1298, 147]
                        (field_expression [1298, 123] - [1298, 146]
                          argument: (identifier [1298, 123] - [1298, 133])
                          field: (field_identifier [1298, 135] - [1298, 146])))))))))
          (expression_statement [1299, 2] - [1299, 25]
            (call_expression [1299, 2] - [1299, 24]
              function: (identifier [1299, 2] - [1299, 19])
              arguments: (argument_list [1299, 19] - [1299, 24]
                (number_literal [1299, 20] - [1299, 23]))))
          (expression_statement [1300, 2] - [1300, 29]
            (call_expression [1300, 2] - [1300, 28]
              function: (identifier [1300, 2] - [1300, 15])
              arguments: (argument_list [1300, 15] - [1300, 28]
                (pointer_expression [1300, 16] - [1300, 27]
                  argument: (identifier [1300, 17] - [1300, 27])))))
          (expression_statement [1301, 2] - [1301, 24]
            (call_expression [1301, 2] - [1301, 23]
              function: (field_expression [1301, 2] - [1301, 21]
                argument: (identifier [1301, 2] - [1301, 15])
                field: (field_identifier [1301, 16] - [1301, 21]))
              arguments: (argument_list [1301, 21] - [1301, 23])))))
      (function_definition [1304, 1] - [1306, 2]
        type: (primitive_type [1304, 1] - [1304, 5])
        declarator: (function_declarator [1304, 6] - [1304, 65]
          declarator: (qualified_identifier [1304, 6] - [1304, 31]
            scope: (namespace_identifier [1304, 6] - [1304, 18])
            name: (identifier [1304, 20] - [1304, 31]))
          parameters: (parameter_list [1304, 31] - [1304, 65]
            (parameter_declaration [1304, 32] - [1304, 49]
              type: (type_identifier [1304, 32] - [1304, 37])
              declarator: (pointer_declarator [1304, 37] - [1304, 49]
                declarator: (identifier [1304, 39] - [1304, 49])))
            (parameter_declaration [1304, 51] - [1304, 64]
              type: (primitive_type [1304, 51] - [1304, 58])
              declarator: (identifier [1304, 59] - [1304, 64]))))
        body: (compound_statement [1304, 66] - [1306, 2]
          (expression_statement [1305, 2] - [1305, 138]
            (call_expression [1305, 2] - [1305, 137]
              function: (identifier [1305, 2] - [1305, 14])
              arguments: (argument_list [1305, 14] - [1305, 137]
                (call_expression [1305, 15] - [1305, 136]
                  function: (identifier [1305, 15] - [1305, 27])
                  arguments: (argument_list [1305, 27] - [1305, 136]
                    (identifier [1305, 28] - [1305, 52])
                    (call_expression [1305, 54] - [1305, 80]
                      function: (identifier [1305, 54] - [1305, 67])
                      arguments: (argument_list [1305, 67] - [1305, 80]
                        (pointer_expression [1305, 68] - [1305, 79]
                          argument: (identifier [1305, 69] - [1305, 79]))))
                    (identifier [1305, 82] - [1305, 87])
                    (identifier [1305, 89] - [1305, 95])
                    (cast_expression [1305, 97] - [1305, 114]
                      type: (type_descriptor [1305, 98] - [1305, 103]
                        type: (primitive_type [1305, 98] - [1305, 102])
                        declarator: (abstract_pointer_declarator [1305, 102] - [1305, 103]))
                      value: (identifier [1305, 104] - [1305, 114]))
                    (sizeof_expression [1305, 116] - [1305, 135]
                      value: (parenthesized_expression [1305, 122] - [1305, 135]
                        (pointer_expression [1305, 123] - [1305, 134]
                          argument: (identifier [1305, 124] - [1305, 134])))))))))
          (comment [1305, 138] - [1305, 217])))
      (expression_statement [1306, 2] - [1306, 3])
      (function_definition [1308, 1] - [1311, 2]
        type: (primitive_type [1308, 1] - [1308, 5])
        declarator: (function_declarator [1308, 6] - [1308, 67]
          declarator: (qualified_identifier [1308, 6] - [1308, 33]
            scope: (namespace_identifier [1308, 6] - [1308, 18])
            name: (identifier [1308, 20] - [1308, 33]))
          parameters: (parameter_list [1308, 33] - [1308, 67]
            (parameter_declaration [1308, 34] - [1308, 51]
              type: (type_identifier [1308, 34] - [1308, 39])
              declarator: (pointer_declarator [1308, 39] - [1308, 51]
                declarator: (identifier [1308, 41] - [1308, 51])))
            (parameter_declaration [1308, 53] - [1308, 66]
              type: (primitive_type [1308, 53] - [1308, 60])
              declarator: (identifier [1308, 61] - [1308, 66]))))
        body: (compound_statement [1308, 68] - [1311, 2]
          (expression_statement [1309, 2] - [1309, 140]
            (call_expression [1309, 2] - [1309, 139]
              function: (identifier [1309, 2] - [1309, 14])
              arguments: (argument_list [1309, 14] - [1309, 139]
                (call_expression [1309, 15] - [1309, 138]
                  function: (identifier [1309, 15] - [1309, 27])
                  arguments: (argument_list [1309, 27] - [1309, 138]
                    (identifier [1309, 28] - [1309, 54])
                    (call_expression [1309, 56] - [1309, 82]
                      function: (identifier [1309, 56] - [1309, 69])
                      arguments: (argument_list [1309, 69] - [1309, 82]
                        (pointer_expression [1309, 70] - [1309, 81]
                          argument: (identifier [1309, 71] - [1309, 81]))))
                    (identifier [1309, 84] - [1309, 89])
                    (identifier [1309, 91] - [1309, 97])
                    (cast_expression [1309, 99] - [1309, 116]
                      type: (type_descriptor [1309, 100] - [1309, 105]
                        type: (primitive_type [1309, 100] - [1309, 104])
                        declarator: (abstract_pointer_declarator [1309, 104] - [1309, 105]))
                      value: (identifier [1309, 106] - [1309, 116]))
                    (sizeof_expression [1309, 118] - [1309, 137]
                      value: (parenthesized_expression [1309, 124] - [1309, 137]
                        (pointer_expression [1309, 125] - [1309, 136]
                          argument: (identifier [1309, 126] - [1309, 136])))))))))
          (comment [1309, 140] - [1309, 193])
          (expression_statement [1310, 2] - [1310, 34]
            (call_expression [1310, 2] - [1310, 33]
              function: (identifier [1310, 2] - [1310, 21])
              arguments: (argument_list [1310, 21] - [1310, 33]
                (identifier [1310, 22] - [1310, 32]))))))
      (expression_statement [1311, 2] - [1311, 3])
      (function_definition [1313, 1] - [1324, 2]
        type: (primitive_type [1313, 1] - [1313, 5])
        declarator: (function_declarator [1313, 6] - [1313, 65]
          declarator: (qualified_identifier [1313, 6] - [1313, 31]
            scope: (namespace_identifier [1313, 6] - [1313, 18])
            name: (identifier [1313, 20] - [1313, 31]))
          parameters: (parameter_list [1313, 31] - [1313, 65]
            (parameter_declaration [1313, 32] - [1313, 49]
              type: (type_identifier [1313, 32] - [1313, 37])
              declarator: (pointer_declarator [1313, 37] - [1313, 49]
                declarator: (identifier [1313, 39] - [1313, 49])))
            (parameter_declaration [1313, 51] - [1313, 64]
              type: (primitive_type [1313, 51] - [1313, 58])
              declarator: (identifier [1313, 59] - [1313, 64]))))
        body: (compound_statement [1313, 66] - [1324, 2]
          (if_statement [1314, 2] - [1319, 3]
            condition: (condition_clause [1314, 5] - [1314, 40]
              value: (binary_expression [1314, 6] - [1314, 39]
                left: (field_expression [1314, 6] - [1314, 31]
                  argument: (identifier [1314, 6] - [1314, 16])
                  field: (field_identifier [1314, 18] - [1314, 31]))
                right: (number_literal [1314, 35] - [1314, 39])))
            consequence: (compound_statement [1315, 2] - [1319, 3]
              (declaration [1316, 3] - [1316, 14]
                type: (primitive_type [1316, 3] - [1316, 6])
                declarator: (init_declarator [1316, 7] - [1316, 13]
                  declarator: (identifier [1316, 7] - [1316, 8])
                  value: (number_literal [1316, 11] - [1316, 13])))
              (declaration [1317, 3] - [1317, 13]
                type: (primitive_type [1317, 3] - [1317, 6])
                declarator: (init_declarator [1317, 7] - [1317, 12]
                  declarator: (identifier [1317, 7] - [1317, 8])
                  value: (number_literal [1317, 11] - [1317, 12])))
              (declaration [1318, 3] - [1318, 17]
                type: (primitive_type [1318, 3] - [1318, 6])
                declarator: (init_declarator [1318, 7] - [1318, 16]
                  declarator: (identifier [1318, 7] - [1318, 8])
                  value: (binary_expression [1318, 11] - [1318, 16]
                    left: (identifier [1318, 11] - [1318, 12])
                    right: (identifier [1318, 15] - [1318, 16]))))))
          (expression_statement [1320, 2] - [1320, 157]
            (call_expression [1320, 2] - [1320, 156]
              function: (identifier [1320, 2] - [1320, 14])
              arguments: (argument_list [1320, 14] - [1320, 156]
                (call_expression [1320, 15] - [1320, 155]
                  function: (identifier [1320, 15] - [1320, 27])
                  arguments: (argument_list [1320, 27] - [1320, 155]
                    (identifier [1320, 28] - [1320, 44])
                    (call_expression [1320, 46] - [1320, 72]
                      function: (identifier [1320, 46] - [1320, 59])
                      arguments: (argument_list [1320, 59] - [1320, 72]
                        (pointer_expression [1320, 60] - [1320, 71]
                          argument: (identifier [1320, 61] - [1320, 71]))))
                    (identifier [1320, 74] - [1320, 79])
                    (identifier [1320, 81] - [1320, 87])
                    (cast_expression [1320, 89] - [1320, 122]
                      type: (type_descriptor [1320, 90] - [1320, 95]
                        type: (primitive_type [1320, 90] - [1320, 94])
                        declarator: (abstract_pointer_declarator [1320, 94] - [1320, 95]))
                      value: (field_expression [1320, 96] - [1320, 122]
                        argument: (field_expression [1320, 96] - [1320, 120]
                          argument: (identifier [1320, 96] - [1320, 106])
                          field: (field_identifier [1320, 108] - [1320, 120]))
                        field: (field_identifier [1320, 121] - [1320, 122])))
                    (field_expression [1320, 124] - [1320, 154]
                      argument: (identifier [1320, 124] - [1320, 134])
                      field: (field_identifier [1320, 136] - [1320, 154])))))))
          (preproc_ifdef [1321, 0] - [1323, 6]
            name: (identifier [1321, 7] - [1321, 28])
            (expression_statement [1322, 2] - [1322, 113]
              (call_expression [1322, 2] - [1322, 112]
                function: (identifier [1322, 2] - [1322, 18])
                arguments: (argument_list [1322, 18] - [1322, 112]
                  (string_literal [1322, 19] - [1322, 47]
                    (escape_sequence [1322, 44] - [1322, 46]))
                  (field_expression [1322, 49] - [1322, 79]
                    argument: (identifier [1322, 49] - [1322, 59])
                    field: (field_identifier [1322, 61] - [1322, 79]))
                  (field_expression [1322, 81] - [1322, 111]
                    argument: (identifier [1322, 81] - [1322, 91])
                    field: (field_identifier [1322, 93] - [1322, 111]))))))
          (comment [1323, 7] - [1323, 31])))
      (expression_statement [1324, 2] - [1324, 3])
      (declaration [1326, 1] - [1327, 3]
        type: (primitive_type [1326, 1] - [1326, 5])
        declarator: (init_declarator [1326, 6] - [1327, 2]
          declarator: (function_declarator [1326, 6] - [1326, 53]
            declarator: (qualified_identifier [1326, 6] - [1326, 34]
              scope: (namespace_identifier [1326, 6] - [1326, 18])
              name: (identifier [1326, 20] - [1326, 34]))
            parameters: (parameter_list [1326, 34] - [1326, 53]
              (parameter_declaration [1326, 35] - [1326, 52]
                type: (type_identifier [1326, 35] - [1326, 40])
                declarator: (pointer_declarator [1326, 40] - [1326, 52]
                  declarator: (identifier [1326, 42] - [1326, 52])))))
          value: (initializer_list [1326, 54] - [1327, 2])))))
  (declaration [1330, 0] - [1330, 44]
    type: (qualified_identifier [1330, 0] - [1330, 26]
      scope: (namespace_identifier [1330, 0] - [1330, 12])
      name: (type_identifier [1330, 14] - [1330, 26]))
    declarator: (pointer_declarator [1330, 26] - [1330, 43]
      declarator: (identifier [1330, 28] - [1330, 43])))
  (declaration [1333, 0] - [1333, 27]
    type: (primitive_type [1333, 0] - [1333, 3])
    declarator: (init_declarator [1333, 4] - [1333, 26]
      declarator: (identifier [1333, 4] - [1333, 19])
      value: (number_literal [1333, 22] - [1333, 26])))
  (declaration [1335, 0] - [1335, 37]
    type: (qualified_identifier [1335, 0] - [1335, 24]
      scope: (namespace_identifier [1335, 0] - [1335, 3])
      name: (template_type [1335, 5] - [1335, 24]
        name: (type_identifier [1335, 5] - [1335, 11])
        arguments: (template_argument_list [1335, 11] - [1335, 24]
          (type_descriptor [1335, 12] - [1335, 23]
            type: (qualified_identifier [1335, 12] - [1335, 23]
              scope: (namespace_identifier [1335, 12] - [1335, 15])
              name: (type_identifier [1335, 17] - [1335, 23]))))))
    declarator: (identifier [1335, 25] - [1335, 36]))
  (declaration [1336, 0] - [1336, 22]
    type: (qualified_identifier [1336, 0] - [1336, 10]
      scope: (namespace_identifier [1336, 0] - [1336, 3])
      name: (type_identifier [1336, 5] - [1336, 10]))
    declarator: (identifier [1336, 11] - [1336, 21]))
  (function_definition [1338, 0] - [1342, 1]
    type: (primitive_type [1338, 0] - [1338, 4])
    declarator: (function_declarator [1338, 5] - [1338, 36]
      declarator: (identifier [1338, 5] - [1338, 15])
      parameters: (parameter_list [1338, 15] - [1338, 36]
        (parameter_declaration [1338, 16] - [1338, 35]
          type: (qualified_identifier [1338, 16] - [1338, 27]
            scope: (namespace_identifier [1338, 16] - [1338, 19])
            name: (type_identifier [1338, 21] - [1338, 27]))
          declarator: (identifier [1338, 28] - [1338, 35]))))
    body: (compound_statement [1338, 36] - [1342, 1]
      (expression_statement [1339, 1] - [1339, 19]
        (call_expression [1339, 1] - [1339, 18]
          function: (field_expression [1339, 1] - [1339, 16]
            argument: (identifier [1339, 1] - [1339, 11])
            field: (field_identifier [1339, 12] - [1339, 16]))
          arguments: (argument_list [1339, 16] - [1339, 18])))
      (expression_statement [1340, 1] - [1340, 32]
        (call_expression [1340, 1] - [1340, 31]
          function: (field_expression [1340, 1] - [1340, 22]
            argument: (identifier [1340, 1] - [1340, 12])
            field: (field_identifier [1340, 13] - [1340, 22]))
          arguments: (argument_list [1340, 22] - [1340, 31]
            (identifier [1340, 23] - [1340, 30]))))
      (expression_statement [1341, 1] - [1341, 21]
        (call_expression [1341, 1] - [1341, 20]
          function: (field_expression [1341, 1] - [1341, 18]
            argument: (identifier [1341, 1] - [1341, 11])
            field: (field_identifier [1341, 12] - [1341, 18]))
          arguments: (argument_list [1341, 18] - [1341, 20])))))
  (expression_statement [1342, 1] - [1342, 2])
  (function_definition [1345, 0] - [1350, 1]
    type: (sized_type_specifier [1345, 0] - [1345, 12]
      type: (primitive_type [1345, 9] - [1345, 12]))
    declarator: (function_declarator [1345, 13] - [1345, 26]
      declarator: (identifier [1345, 13] - [1345, 24])
      parameters: (parameter_list [1345, 24] - [1345, 26]))
    body: (compound_statement [1345, 27] - [1350, 1]
      (expression_statement [1346, 1] - [1346, 19]
        (call_expression [1346, 1] - [1346, 18]
          function: (field_expression [1346, 1] - [1346, 16]
            argument: (identifier [1346, 1] - [1346, 11])
            field: (field_identifier [1346, 12] - [1346, 16]))
          arguments: (argument_list [1346, 16] - [1346, 18])))
      (declaration [1347, 1] - [1347, 41]
        type: (sized_type_specifier [1347, 1] - [1347, 13]
          type: (primitive_type [1347, 10] - [1347, 13]))
        declarator: (init_declarator [1347, 14] - [1347, 40]
          declarator: (identifier [1347, 14] - [1347, 20])
          value: (call_expression [1347, 22] - [1347, 40]
            function: (field_expression [1347, 22] - [1347, 38]
              argument: (identifier [1347, 22] - [1347, 33])
              field: (field_identifier [1347, 34] - [1347, 38]))
            arguments: (argument_list [1347, 38] - [1347, 40]))))
      (expression_statement [1347, 41] - [1347, 42])
      (expression_statement [1348, 1] - [1348, 21]
        (call_expression [1348, 1] - [1348, 20]
          function: (field_expression [1348, 1] - [1348, 18]
            argument: (identifier [1348, 1] - [1348, 11])
            field: (field_identifier [1348, 12] - [1348, 18]))
          arguments: (argument_list [1348, 18] - [1348, 20])))
      (return_statement [1349, 1] - [1349, 15]
        (identifier [1349, 8] - [1349, 14]))))
  (expression_statement [1350, 1] - [1350, 2])
  (function_definition [1352, 0] - [1359, 1]
    type: (qualified_identifier [1352, 0] - [1352, 11]
      scope: (namespace_identifier [1352, 0] - [1352, 3])
      name: (type_identifier [1352, 5] - [1352, 11]))
    declarator: (function_declarator [1352, 12] - [1352, 24]
      declarator: (identifier [1352, 12] - [1352, 22])
      parameters: (parameter_list [1352, 22] - [1352, 24]))
    body: (compound_statement [1352, 25] - [1359, 1]
      (declaration [1353, 1] - [1353, 20]
        type: (qualified_identifier [1353, 1] - [1353, 12]
          scope: (namespace_identifier [1353, 1] - [1353, 4])
          name: (type_identifier [1353, 6] - [1353, 12]))
        declarator: (identifier [1353, 13] - [1353, 19]))
      (expression_statement [1354, 1] - [1354, 19]
        (call_expression [1354, 1] - [1354, 18]
          function: (field_expression [1354, 1] - [1354, 16]
            argument: (identifier [1354, 1] - [1354, 11])
            field: (field_identifier [1354, 12] - [1354, 16]))
          arguments: (argument_list [1354, 16] - [1354, 18])))
      (expression_statement [1355, 1] - [1355, 30]
        (assignment_expression [1355, 1] - [1355, 29]
          left: (identifier [1355, 1] - [1355, 7])
          right: (call_expression [1355, 10] - [1355, 29]
            function: (field_expression [1355, 10] - [1355, 27]
              argument: (identifier [1355, 10] - [1355, 21])
              field: (field_identifier [1355, 22] - [1355, 27]))
            arguments: (argument_list [1355, 27] - [1355, 29]))))
      (expression_statement [1356, 1] - [1356, 40]
        (call_expression [1356, 1] - [1356, 39]
          function: (field_expression [1356, 1] - [1356, 18]
            argument: (identifier [1356, 1] - [1356, 12])
            field: (field_identifier [1356, 13] - [1356, 18]))
          arguments: (argument_list [1356, 18] - [1356, 39]
            (call_expression [1356, 19] - [1356, 38]
              function: (field_expression [1356, 19] - [1356, 36]
                argument: (identifier [1356, 19] - [1356, 30])
                field: (field_identifier [1356, 31] - [1356, 36]))
              arguments: (argument_list [1356, 36] - [1356, 38])))))
      (expression_statement [1357, 1] - [1357, 21]
        (call_expression [1357, 1] - [1357, 20]
          function: (field_expression [1357, 1] - [1357, 18]
            argument: (identifier [1357, 1] - [1357, 11])
            field: (field_identifier [1357, 12] - [1357, 18]))
          arguments: (argument_list [1357, 18] - [1357, 20])))
      (return_statement [1358, 1] - [1358, 15]
        (identifier [1358, 8] - [1358, 14]))))
  (expression_statement [1359, 1] - [1359, 2])
  (function_definition [1361, 0] - [1377, 1]
    type: (primitive_type [1361, 0] - [1361, 4])
    declarator: (function_declarator [1361, 5] - [1361, 32]
      declarator: (identifier [1361, 5] - [1361, 18])
      parameters: (parameter_list [1361, 18] - [1361, 32]
        (parameter_declaration [1361, 19] - [1361, 31]
          type: (type_identifier [1361, 19] - [1361, 24])
          declarator: (identifier [1361, 25] - [1361, 31]))))
    body: (compound_statement [1361, 33] - [1377, 1]
      (declaration [1362, 1] - [1362, 20]
        type: (qualified_identifier [1362, 1] - [1362, 12]
          scope: (namespace_identifier [1362, 1] - [1362, 4])
          name: (type_identifier [1362, 6] - [1362, 12]))
        declarator: (identifier [1362, 13] - [1362, 19]))
      (expression_statement [1363, 1] - [1363, 19]
        (call_expression [1363, 1] - [1363, 18]
          function: (field_expression [1363, 1] - [1363, 16]
            argument: (identifier [1363, 1] - [1363, 11])
            field: (field_identifier [1363, 12] - [1363, 16]))
          arguments: (argument_list [1363, 16] - [1363, 18])))
      (for_statement [1364, 1] - [1375, 2]
        initializer: (declaration [1364, 6] - [1364, 36]
          type: (auto [1364, 6] - [1364, 10])
          declarator: (init_declarator [1364, 11] - [1364, 35]
            declarator: (identifier [1364, 11] - [1364, 13])
            value: (call_expression [1364, 16] - [1364, 35]
              function: (field_expression [1364, 16] - [1364, 33]
                argument: (identifier [1364, 16] - [1364, 27])
                field: (field_identifier [1364, 28] - [1364, 33]))
              arguments: (argument_list [1364, 33] - [1364, 35]))))
        condition: (binary_expression [1364, 37] - [1364, 60]
          left: (identifier [1364, 37] - [1364, 39])
          right: (call_expression [1364, 43] - [1364, 60]
            function: (field_expression [1364, 43] - [1364, 58]
              argument: (identifier [1364, 43] - [1364, 54])
              field: (field_identifier [1364, 55] - [1364, 58]))
            arguments: (argument_list [1364, 58] - [1364, 60])))
        (compound_statement [1365, 1] - [1375, 2]
          (declaration [1366, 2] - [1366, 50]
            type: (type_identifier [1366, 2] - [1366, 14])
            declarator: (init_declarator [1366, 15] - [1366, 49]
              declarator: (identifier [1366, 15] - [1366, 27])
              value: (call_expression [1366, 30] - [1366, 49]
                function: (identifier [1366, 30] - [1366, 44])
                arguments: (argument_list [1366, 44] - [1366, 49]
                  (pointer_expression [1366, 45] - [1366, 48]
                    argument: (identifier [1366, 46] - [1366, 48]))))))
          (if_statement [1367, 2] - [1374, 3]
            condition: (condition_clause [1367, 5] - [1368, 98]
              value: (binary_expression [1367, 6] - [1368, 97]
                left: (parenthesized_expression [1367, 6] - [1367, 95]
                  (call_expression [1367, 7] - [1367, 94]
                    function: (identifier [1367, 7] - [1367, 13])
                    arguments: (argument_list [1367, 13] - [1367, 94]
                      (field_expression [1367, 14] - [1367, 46]
                        argument: (field_expression [1367, 14] - [1367, 34]
                          argument: (identifier [1367, 14] - [1367, 26])
                          field: (field_identifier [1367, 27] - [1367, 34]))
                        field: (field_identifier [1367, 35] - [1367, 46]))
                      (field_expression [1367, 48] - [1367, 66]
                        argument: (identifier [1367, 48] - [1367, 54])
                        field: (field_identifier [1367, 55] - [1367, 66]))
                      (sizeof_expression [1367, 67] - [1367, 93]
                        value: (parenthesized_expression [1367, 73] - [1367, 93]
                          (field_expression [1367, 74] - [1367, 92]
                            argument: (identifier [1367, 74] - [1367, 80])
                            field: (field_identifier [1367, 81] - [1367, 92])))))))
                right: (parenthesized_expression [1368, 3] - [1368, 97]
                  (call_expression [1368, 4] - [1368, 96]
                    function: (identifier [1368, 4] - [1368, 10])
                    arguments: (argument_list [1368, 10] - [1368, 96]
                      (field_expression [1368, 11] - [1368, 47]
                        argument: (field_expression [1368, 11] - [1368, 31]
                          argument: (identifier [1368, 11] - [1368, 23])
                          field: (field_identifier [1368, 24] - [1368, 31]))
                        field: (field_identifier [1368, 32] - [1368, 47]))
                      (field_expression [1368, 49] - [1368, 67]
                        argument: (identifier [1368, 49] - [1368, 55])
                        field: (field_identifier [1368, 56] - [1368, 67]))
                      (sizeof_expression [1368, 69] - [1368, 95]
                        value: (parenthesized_expression [1368, 75] - [1368, 95]
                          (field_expression [1368, 76] - [1368, 94]
                            argument: (identifier [1368, 76] - [1368, 82])
                            field: (field_identifier [1368, 83] - [1368, 94])))))))))
            consequence: (compound_statement [1369, 2] - [1371, 3]
              (expression_statement [1370, 3] - [1370, 30]
                (assignment_expression [1370, 3] - [1370, 29]
                  left: (identifier [1370, 3] - [1370, 5])
                  right: (call_expression [1370, 8] - [1370, 29]
                    function: (field_expression [1370, 8] - [1370, 25]
                      argument: (identifier [1370, 8] - [1370, 19])
                      field: (field_identifier [1370, 20] - [1370, 25]))
                    arguments: (argument_list [1370, 25] - [1370, 29]
                      (identifier [1370, 26] - [1370, 28]))))))
            alternative: (compound_statement [1372, 7] - [1374, 3]
              (expression_statement [1373, 3] - [1373, 8]
                (update_expression [1373, 3] - [1373, 7]
                  argument: (identifier [1373, 5] - [1373, 7])))))))
      (expression_statement [1376, 1] - [1376, 21]
        (call_expression [1376, 1] - [1376, 20]
          function: (field_expression [1376, 1] - [1376, 18]
            argument: (identifier [1376, 1] - [1376, 11])
            field: (field_identifier [1376, 12] - [1376, 18]))
          arguments: (argument_list [1376, 18] - [1376, 20])))))
  (declaration [1379, 0] - [1379, 24]
    type: (primitive_type [1379, 0] - [1379, 3])
    declarator: (init_declarator [1379, 4] - [1379, 23]
      declarator: (identifier [1379, 4] - [1379, 19])
      value: (number_literal [1379, 22] - [1379, 23])))
  (function_definition [1381, 0] - [1528, 1]
    type: (primitive_type [1381, 0] - [1381, 4])
    declarator: (function_declarator [1381, 5] - [1381, 35]
      declarator: (identifier [1381, 5] - [1381, 16])
      parameters: (parameter_list [1381, 16] - [1381, 35]
        (parameter_declaration [1381, 17] - [1381, 34]
          type: (type_identifier [1381, 17] - [1381, 22])
          declarator: (pointer_declarator [1381, 22] - [1381, 34]
            declarator: (identifier [1381, 24] - [1381, 34])))))
    body: (compound_statement [1381, 36] - [1528, 1]
      (comment [1382, 1] - [1382, 18])
      (declaration [1383, 1] - [1383, 20]
        type: (primitive_type [1383, 1] - [1383, 4])
        declarator: (init_declarator [1383, 5] - [1383, 19]
          declarator: (identifier [1383, 5] - [1383, 15])
          value: (number_literal [1383, 18] - [1383, 19])))
      (declaration [1384, 1] - [1384, 35]
        type: (primitive_type [1384, 1] - [1384, 8])
        declarator: (init_declarator [1384, 9] - [1384, 34]
          declarator: (identifier [1384, 9] - [1384, 17])
          value: (call_expression [1384, 20] - [1384, 34]
            function: (identifier [1384, 20] - [1384, 32])
            arguments: (argument_list [1384, 32] - [1384, 34]))))
      (switch_statement [1385, 1] - [1492, 2]
        condition: (condition_clause [1385, 8] - [1385, 35]
          value: (field_expression [1385, 9] - [1385, 34]
            argument: (identifier [1385, 9] - [1385, 19])
            field: (field_identifier [1385, 21] - [1385, 34])))
        body: (compound_statement [1385, 36] - [1492, 2]
          (case_statement [1386, 1] - [1404, 2]
            value: (number_literal [1386, 6] - [1386, 10])
            (compound_statement [1386, 12] - [1404, 2]
              (comment [1386, 13] - [1386, 22])
              (expression_statement [1387, 2] - [1387, 21]
                (assignment_expression [1387, 2] - [1387, 20]
                  left: (identifier [1387, 2] - [1387, 12])
                  right: (number_literal [1387, 15] - [1387, 20])))
              (preproc_ifdef [1388, 0] - [1390, 6]
                name: (identifier [1388, 7] - [1388, 28])
                (expression_statement [1389, 2] - [1389, 117]
                  (call_expression [1389, 2] - [1389, 116]
                    function: (identifier [1389, 2] - [1389, 18])
                    arguments: (argument_list [1389, 18] - [1389, 116]
                      (string_literal [1389, 19] - [1389, 61]
                        (escape_sequence [1389, 58] - [1389, 60]))
                      (field_expression [1389, 63] - [1389, 86]
                        argument: (identifier [1389, 63] - [1389, 73])
                        field: (field_identifier [1389, 75] - [1389, 86]))
                      (field_expression [1389, 88] - [1389, 115]
                        argument: (identifier [1389, 88] - [1389, 98])
                        field: (field_identifier [1389, 100] - [1389, 115]))))))
              (comment [1390, 7] - [1390, 31])
              (declaration [1391, 2] - [1391, 56]
                type: (type_identifier [1391, 2] - [1391, 7])
                declarator: (init_declarator [1391, 7] - [1391, 55]
                  declarator: (pointer_declarator [1391, 7] - [1391, 18]
                    declarator: (identifier [1391, 9] - [1391, 18]))
                  value: (cast_expression [1391, 21] - [1391, 55]
                    type: (type_descriptor [1391, 22] - [1391, 28]
                      type: (type_identifier [1391, 22] - [1391, 27])
                      declarator: (abstract_pointer_declarator [1391, 27] - [1391, 28]))
                    value: (field_expression [1391, 29] - [1391, 55]
                      argument: (field_expression [1391, 29] - [1391, 53]
                        argument: (identifier [1391, 29] - [1391, 39])
                        field: (field_identifier [1391, 41] - [1391, 53]))
                      field: (field_identifier [1391, 54] - [1391, 55])))))
              (if_statement [1392, 2] - [1397, 3]
                condition: (condition_clause [1392, 5] - [1392, 16]
                  value: (identifier [1392, 6] - [1392, 15]))
                consequence: (compound_statement [1393, 2] - [1397, 3]
                  (comment [1394, 3] - [1394, 31])
                  (expression_statement [1395, 3] - [1395, 35]
                    (assignment_expression [1395, 3] - [1395, 34]
                      left: (field_expression [1395, 3] - [1395, 27]
                        argument: (identifier [1395, 3] - [1395, 12])
                        field: (field_identifier [1395, 14] - [1395, 27]))
                      right: (number_literal [1395, 30] - [1395, 34])))
                  (expression_statement [1396, 3] - [1396, 37]
                    (assignment_expression [1396, 3] - [1396, 36]
                      left: (field_expression [1396, 3] - [1396, 29]
                        argument: (identifier [1396, 3] - [1396, 12])
                        field: (field_identifier [1396, 14] - [1396, 29]))
                      right: (number_literal [1396, 32] - [1396, 36])))))
              (expression_statement [1399, 2] - [1399, 35]
                (assignment_expression [1399, 2] - [1399, 34]
                  left: (field_expression [1399, 2] - [1399, 27]
                    argument: (identifier [1399, 2] - [1399, 12])
                    field: (field_identifier [1399, 14] - [1399, 27]))
                  right: (number_literal [1399, 30] - [1399, 34])))
              (expression_statement [1400, 2] - [1400, 31]
                (assignment_expression [1400, 2] - [1400, 30]
                  left: (field_expression [1400, 2] - [1400, 23]
                    argument: (identifier [1400, 2] - [1400, 12])
                    field: (field_identifier [1400, 14] - [1400, 23]))
                  right: (number_literal [1400, 26] - [1400, 30])))
              (expression_statement [1401, 2] - [1401, 37]
                (assignment_expression [1401, 2] - [1401, 36]
                  left: (field_expression [1401, 2] - [1401, 29]
                    argument: (identifier [1401, 2] - [1401, 12])
                    field: (field_identifier [1401, 14] - [1401, 29]))
                  right: (number_literal [1401, 32] - [1401, 36])))
              (expression_statement [1402, 2] - [1402, 55]
                (call_expression [1402, 2] - [1402, 54]
                  function: (field_expression [1402, 2] - [1402, 32]
                    argument: (identifier [1402, 2] - [1402, 17])
                    field: (field_identifier [1402, 19] - [1402, 32]))
                  arguments: (argument_list [1402, 32] - [1402, 54]
                    (identifier [1402, 33] - [1402, 43])
                    (identifier [1402, 45] - [1402, 53]))))
              (break_statement [1403, 2] - [1403, 8])))
          (case_statement [1405, 1] - [1413, 2]
            value: (number_literal [1405, 6] - [1405, 10])
            (compound_statement [1405, 12] - [1413, 2]
              (comment [1405, 13] - [1405, 18])
              (expression_statement [1406, 2] - [1406, 19]
                (assignment_expression [1406, 2] - [1406, 18]
                  left: (identifier [1406, 2] - [1406, 12])
                  right: (number_literal [1406, 15] - [1406, 18])))
              (preproc_ifdef [1407, 0] - [1409, 6]
                name: (identifier [1407, 7] - [1407, 28])
                (expression_statement [1408, 2] - [1408, 55]
                  (call_expression [1408, 2] - [1408, 54]
                    function: (identifier [1408, 2] - [1408, 18])
                    arguments: (argument_list [1408, 18] - [1408, 54]
                      (string_literal [1408, 19] - [1408, 53]
                        (escape_sequence [1408, 50] - [1408, 52]))))))
              (comment [1409, 7] - [1409, 31])
              (expression_statement [1410, 2] - [1410, 35]
                (assignment_expression [1410, 2] - [1410, 34]
                  left: (field_expression [1410, 2] - [1410, 27]
                    argument: (identifier [1410, 2] - [1410, 12])
                    field: (field_identifier [1410, 14] - [1410, 27]))
                  right: (number_literal [1410, 30] - [1410, 34])))
              (expression_statement [1411, 2] - [1411, 37]
                (assignment_expression [1411, 2] - [1411, 36]
                  left: (field_expression [1411, 2] - [1411, 29]
                    argument: (identifier [1411, 2] - [1411, 12])
                    field: (field_identifier [1411, 14] - [1411, 29]))
                  right: (number_literal [1411, 32] - [1411, 36])))
              (break_statement [1412, 2] - [1412, 8])))
          (case_statement [1414, 1] - [1425, 2]
            value: (number_literal [1414, 6] - [1414, 10])
            (compound_statement [1414, 12] - [1425, 2]
              (comment [1414, 13] - [1414, 20])
              (expression_statement [1415, 2] - [1415, 20]
                (assignment_expression [1415, 2] - [1415, 19]
                  left: (identifier [1415, 2] - [1415, 12])
                  right: (number_literal [1415, 15] - [1415, 19])))
              (preproc_ifdef [1416, 0] - [1418, 6]
                name: (identifier [1416, 7] - [1416, 28])
                (expression_statement [1417, 2] - [1417, 130]
                  (call_expression [1417, 2] - [1417, 129]
                    function: (identifier [1417, 2] - [1417, 18])
                    arguments: (argument_list [1417, 18] - [1417, 129]
                      (string_literal [1417, 19] - [1417, 63]
                        (escape_sequence [1417, 60] - [1417, 62]))
                      (identifier [1417, 65] - [1417, 75])
                      (field_expression [1417, 76] - [1417, 99]
                        argument: (identifier [1417, 76] - [1417, 86])
                        field: (field_identifier [1417, 88] - [1417, 99]))
                      (field_expression [1417, 101] - [1417, 128]
                        argument: (identifier [1417, 101] - [1417, 111])
                        field: (field_identifier [1417, 113] - [1417, 128]))))))
              (comment [1418, 7] - [1418, 31])
              (expression_statement [1419, 2] - [1419, 35]
                (assignment_expression [1419, 2] - [1419, 34]
                  left: (field_expression [1419, 2] - [1419, 27]
                    argument: (identifier [1419, 2] - [1419, 12])
                    field: (field_identifier [1419, 14] - [1419, 27]))
                  right: (number_literal [1419, 30] - [1419, 34])))
              (expression_statement [1420, 2] - [1420, 31]
                (assignment_expression [1420, 2] - [1420, 30]
                  left: (field_expression [1420, 2] - [1420, 23]
                    argument: (identifier [1420, 2] - [1420, 12])
                    field: (field_identifier [1420, 14] - [1420, 23]))
                  right: (number_literal [1420, 26] - [1420, 30])))
              (expression_statement [1421, 2] - [1421, 37]
                (assignment_expression [1421, 2] - [1421, 36]
                  left: (field_expression [1421, 2] - [1421, 29]
                    argument: (identifier [1421, 2] - [1421, 12])
                    field: (field_identifier [1421, 14] - [1421, 29]))
                  right: (number_literal [1421, 32] - [1421, 36])))
              (expression_statement [1422, 2] - [1422, 53]
                (call_expression [1422, 2] - [1422, 52]
                  function: (field_expression [1422, 2] - [1422, 30]
                    argument: (identifier [1422, 2] - [1422, 17])
                    field: (field_identifier [1422, 19] - [1422, 30]))
                  arguments: (argument_list [1422, 30] - [1422, 52]
                    (identifier [1422, 31] - [1422, 41])
                    (identifier [1422, 43] - [1422, 51]))))
              (expression_statement [1423, 2] - [1423, 22]
                (call_expression [1423, 2] - [1423, 21]
                  function: (identifier [1423, 2] - [1423, 10])
                  arguments: (argument_list [1423, 10] - [1423, 21]
                    (identifier [1423, 11] - [1423, 20]))))
              (break_statement [1424, 2] - [1424, 8])))
          (case_statement [1426, 1] - [1437, 2]
            value: (number_literal [1426, 6] - [1426, 10])
            (compound_statement [1426, 12] - [1437, 2]
              (comment [1426, 13] - [1426, 22])
              (expression_statement [1427, 2] - [1427, 19]
                (assignment_expression [1427, 2] - [1427, 18]
                  left: (identifier [1427, 2] - [1427, 12])
                  right: (number_literal [1427, 15] - [1427, 18])))
              (preproc_ifdef [1428, 0] - [1430, 6]
                name: (identifier [1428, 7] - [1428, 28])
                (expression_statement [1429, 2] - [1429, 117]
                  (call_expression [1429, 2] - [1429, 116]
                    function: (identifier [1429, 2] - [1429, 18])
                    arguments: (argument_list [1429, 18] - [1429, 116]
                      (string_literal [1429, 19] - [1429, 61]
                        (escape_sequence [1429, 58] - [1429, 60]))
                      (field_expression [1429, 63] - [1429, 86]
                        argument: (identifier [1429, 63] - [1429, 73])
                        field: (field_identifier [1429, 75] - [1429, 86]))
                      (field_expression [1429, 88] - [1429, 115]
                        argument: (identifier [1429, 88] - [1429, 98])
                        field: (field_identifier [1429, 100] - [1429, 115]))))))
              (comment [1430, 7] - [1430, 31])
              (expression_statement [1431, 2] - [1431, 35]
                (assignment_expression [1431, 2] - [1431, 34]
                  left: (field_expression [1431, 2] - [1431, 27]
                    argument: (identifier [1431, 2] - [1431, 12])
                    field: (field_identifier [1431, 14] - [1431, 27]))
                  right: (number_literal [1431, 30] - [1431, 34])))
              (expression_statement [1432, 2] - [1432, 37]
                (assignment_expression [1432, 2] - [1432, 36]
                  left: (field_expression [1432, 2] - [1432, 29]
                    argument: (identifier [1432, 2] - [1432, 12])
                    field: (field_identifier [1432, 14] - [1432, 29]))
                  right: (number_literal [1432, 32] - [1432, 36])))
              (expression_statement [1433, 2] - [1433, 55]
                (call_expression [1433, 2] - [1433, 54]
                  function: (field_expression [1433, 2] - [1433, 32]
                    argument: (identifier [1433, 2] - [1433, 17])
                    field: (field_identifier [1433, 19] - [1433, 32]))
                  arguments: (argument_list [1433, 32] - [1433, 54]
                    (identifier [1433, 33] - [1433, 43])
                    (identifier [1433, 45] - [1433, 53]))))
              (expression_statement [1434, 2] - [1434, 24]
                (call_expression [1434, 2] - [1434, 23]
                  function: (identifier [1434, 2] - [1434, 10])
                  arguments: (argument_list [1434, 10] - [1434, 23]
                    (identifier [1434, 11] - [1434, 22]))))
              (expression_statement [1435, 2] - [1435, 25]
                (call_expression [1435, 2] - [1435, 24]
                  function: (identifier [1435, 2] - [1435, 19])
                  arguments: (argument_list [1435, 19] - [1435, 24]
                    (number_literal [1435, 20] - [1435, 23]))))
              (break_statement [1436, 2] - [1436, 8])))
          (case_statement [1438, 1] - [1440, 2]
            value: (number_literal [1438, 6] - [1438, 10])
            (compound_statement [1438, 12] - [1440, 2]
              (comment [1438, 13] - [1438, 23])
              (break_statement [1439, 2] - [1439, 8])))
          (case_statement [1441, 1] - [1451, 2]
            value: (number_literal [1441, 6] - [1441, 10])
            (compound_statement [1441, 12] - [1451, 2]
              (comment [1441, 13] - [1441, 20])
              (expression_statement [1442, 2] - [1442, 17]
                (assignment_expression [1442, 2] - [1442, 16]
                  left: (identifier [1442, 2] - [1442, 12])
                  right: (number_literal [1442, 15] - [1442, 16])))
              (preproc_ifdef [1443, 0] - [1445, 6]
                name: (identifier [1443, 7] - [1443, 28])
                (expression_statement [1444, 2] - [1444, 115]
                  (call_expression [1444, 2] - [1444, 114]
                    function: (identifier [1444, 2] - [1444, 18])
                    arguments: (argument_list [1444, 18] - [1444, 114]
                      (string_literal [1444, 19] - [1444, 59]
                        (escape_sequence [1444, 56] - [1444, 58]))
                      (field_expression [1444, 61] - [1444, 84]
                        argument: (identifier [1444, 61] - [1444, 71])
                        field: (field_identifier [1444, 73] - [1444, 84]))
                      (field_expression [1444, 86] - [1444, 113]
                        argument: (identifier [1444, 86] - [1444, 96])
                        field: (field_identifier [1444, 98] - [1444, 113]))))))
              (comment [1445, 7] - [1445, 31])
              (expression_statement [1446, 2] - [1446, 35]
                (assignment_expression [1446, 2] - [1446, 34]
                  left: (field_expression [1446, 2] - [1446, 27]
                    argument: (identifier [1446, 2] - [1446, 12])
                    field: (field_identifier [1446, 14] - [1446, 27]))
                  right: (number_literal [1446, 30] - [1446, 34])))
              (expression_statement [1447, 2] - [1447, 37]
                (assignment_expression [1447, 2] - [1447, 36]
                  left: (field_expression [1447, 2] - [1447, 29]
                    argument: (identifier [1447, 2] - [1447, 12])
                    field: (field_identifier [1447, 14] - [1447, 29]))
                  right: (number_literal [1447, 32] - [1447, 36])))
              (expression_statement [1449, 2] - [1449, 53]
                (call_expression [1449, 2] - [1449, 52]
                  function: (field_expression [1449, 2] - [1449, 30]
                    argument: (identifier [1449, 2] - [1449, 17])
                    field: (field_identifier [1449, 19] - [1449, 30]))
                  arguments: (argument_list [1449, 30] - [1449, 52]
                    (identifier [1449, 31] - [1449, 41])
                    (identifier [1449, 43] - [1449, 51]))))
              (break_statement [1450, 2] - [1450, 8])))
          (case_statement [1452, 1] - [1464, 2]
            value: (number_literal [1452, 6] - [1452, 10])
            (compound_statement [1452, 12] - [1464, 2]
              (comment [1452, 13] - [1452, 23])
              (expression_statement [1453, 2] - [1453, 20]
                (assignment_expression [1453, 2] - [1453, 19]
                  left: (identifier [1453, 2] - [1453, 12])
                  right: (number_literal [1453, 15] - [1453, 19])))
              (comment [1453, 20] - [1453, 27])
              (preproc_ifdef [1454, 0] - [1456, 6]
                name: (identifier [1454, 7] - [1454, 28])
                (expression_statement [1455, 2] - [1455, 118]
                  (call_expression [1455, 2] - [1455, 117]
                    function: (identifier [1455, 2] - [1455, 18])
                    arguments: (argument_list [1455, 18] - [1455, 117]
                      (string_literal [1455, 19] - [1455, 62]
                        (escape_sequence [1455, 59] - [1455, 61]))
                      (field_expression [1455, 64] - [1455, 87]
                        argument: (identifier [1455, 64] - [1455, 74])
                        field: (field_identifier [1455, 76] - [1455, 87]))
                      (field_expression [1455, 89] - [1455, 116]
                        argument: (identifier [1455, 89] - [1455, 99])
                        field: (field_identifier [1455, 101] - [1455, 116]))))))
              (comment [1456, 7] - [1456, 31])
              (expression_statement [1457, 2] - [1457, 35]
                (assignment_expression [1457, 2] - [1457, 34]
                  left: (field_expression [1457, 2] - [1457, 27]
                    argument: (identifier [1457, 2] - [1457, 12])
                    field: (field_identifier [1457, 14] - [1457, 27]))
                  right: (number_literal [1457, 30] - [1457, 34])))
              (expression_statement [1458, 2] - [1458, 37]
                (assignment_expression [1458, 2] - [1458, 36]
                  left: (field_expression [1458, 2] - [1458, 29]
                    argument: (identifier [1458, 2] - [1458, 12])
                    field: (field_identifier [1458, 14] - [1458, 29]))
                  right: (number_literal [1458, 32] - [1458, 36])))
              (expression_statement [1460, 2] - [1460, 46]
                (call_expression [1460, 2] - [1460, 45]
                  function: (field_expression [1460, 2] - [1460, 33]
                    argument: (identifier [1460, 2] - [1460, 17])
                    field: (field_identifier [1460, 19] - [1460, 33]))
                  arguments: (argument_list [1460, 33] - [1460, 45]
                    (identifier [1460, 34] - [1460, 44]))))
              (expression_statement [1461, 2] - [1461, 25]
                (call_expression [1461, 2] - [1461, 24]
                  function: (identifier [1461, 2] - [1461, 10])
                  arguments: (argument_list [1461, 10] - [1461, 24]
                    (identifier [1461, 11] - [1461, 23]))))
              (break_statement [1463, 2] - [1463, 8])))
          (case_statement [1465, 1] - [1480, 2]
            value: (number_literal [1465, 6] - [1465, 10])
            (compound_statement [1465, 12] - [1480, 2]
              (comment [1465, 13] - [1465, 25])
              (expression_statement [1466, 2] - [1466, 20]
                (assignment_expression [1466, 2] - [1466, 19]
                  left: (identifier [1466, 2] - [1466, 12])
                  right: (number_literal [1466, 15] - [1466, 19])))
              (preproc_ifdef [1467, 0] - [1469, 6]
                name: (identifier [1467, 7] - [1467, 28])
                (expression_statement [1468, 2] - [1468, 119]
                  (call_expression [1468, 2] - [1468, 118]
                    function: (identifier [1468, 2] - [1468, 18])
                    arguments: (argument_list [1468, 18] - [1468, 118]
                      (string_literal [1468, 19] - [1468, 63]
                        (escape_sequence [1468, 60] - [1468, 62]))
                      (field_expression [1468, 65] - [1468, 88]
                        argument: (identifier [1468, 65] - [1468, 75])
                        field: (field_identifier [1468, 77] - [1468, 88]))
                      (field_expression [1468, 90] - [1468, 117]
                        argument: (identifier [1468, 90] - [1468, 100])
                        field: (field_identifier [1468, 102] - [1468, 117]))))))
              (comment [1469, 7] - [1469, 31])
              (expression_statement [1470, 2] - [1470, 35]
                (assignment_expression [1470, 2] - [1470, 34]
                  left: (field_expression [1470, 2] - [1470, 27]
                    argument: (identifier [1470, 2] - [1470, 12])
                    field: (field_identifier [1470, 14] - [1470, 27]))
                  right: (number_literal [1470, 30] - [1470, 34])))
              (expression_statement [1471, 2] - [1471, 49]
                (assignment_expression [1471, 2] - [1471, 48]
                  left: (field_expression [1471, 2] - [1471, 23]
                    argument: (identifier [1471, 2] - [1471, 12])
                    field: (field_identifier [1471, 14] - [1471, 23]))
                  right: (binary_expression [1471, 26] - [1471, 48]
                    left: (identifier [1471, 26] - [1471, 41])
                    right: (number_literal [1471, 44] - [1471, 48]))))
              (expression_statement [1472, 2] - [1472, 20]
                (update_expression [1472, 2] - [1472, 19]
                  argument: (identifier [1472, 2] - [1472, 17])))
              (expression_statement [1473, 2] - [1473, 37]
                (assignment_expression [1473, 2] - [1473, 36]
                  left: (field_expression [1473, 2] - [1473, 29]
                    argument: (identifier [1473, 2] - [1473, 12])
                    field: (field_identifier [1473, 14] - [1473, 29]))
                  right: (number_literal [1473, 32] - [1473, 36])))
              (expression_statement [1475, 2] - [1475, 49]
                (call_expression [1475, 2] - [1475, 48]
                  function: (field_expression [1475, 2] - [1475, 26]
                    argument: (identifier [1475, 2] - [1475, 17])
                    field: (field_identifier [1475, 19] - [1475, 26]))
                  arguments: (argument_list [1475, 26] - [1475, 48]
                    (identifier [1475, 27] - [1475, 37])
                    (identifier [1475, 39] - [1475, 47]))))
              (expression_statement [1477, 2] - [1477, 26]
                (call_expression [1477, 2] - [1477, 25]
                  function: (identifier [1477, 2] - [1477, 10])
                  arguments: (argument_list [1477, 10] - [1477, 25]
                    (identifier [1477, 11] - [1477, 24]))))
              (break_statement [1479, 2] - [1479, 8])))
          (case_statement [1481, 1] - [1490, 2]
            value: (number_literal [1481, 6] - [1481, 10])
            (compound_statement [1481, 12] - [1490, 2]
              (comment [1481, 13] - [1481, 28])
              (expression_statement [1482, 2] - [1482, 21]
                (assignment_expression [1482, 2] - [1482, 20]
                  left: (identifier [1482, 2] - [1482, 12])
                  right: (number_literal [1482, 15] - [1482, 20])))
              (preproc_ifdef [1483, 0] - [1485, 6]
                name: (identifier [1483, 7] - [1483, 28])
                (expression_statement [1484, 2] - [1484, 122]
                  (call_expression [1484, 2] - [1484, 121]
                    function: (identifier [1484, 2] - [1484, 18])
                    arguments: (argument_list [1484, 18] - [1484, 121]
                      (string_literal [1484, 19] - [1484, 66]
                        (escape_sequence [1484, 63] - [1484, 65]))
                      (field_expression [1484, 68] - [1484, 91]
                        argument: (identifier [1484, 68] - [1484, 78])
                        field: (field_identifier [1484, 80] - [1484, 91]))
                      (field_expression [1484, 93] - [1484, 120]
                        argument: (identifier [1484, 93] - [1484, 103])
                        field: (field_identifier [1484, 105] - [1484, 120]))))))
              (comment [1485, 7] - [1485, 31])
              (expression_statement [1486, 2] - [1486, 35]
                (assignment_expression [1486, 2] - [1486, 34]
                  left: (field_expression [1486, 2] - [1486, 27]
                    argument: (identifier [1486, 2] - [1486, 12])
                    field: (field_identifier [1486, 14] - [1486, 27]))
                  right: (number_literal [1486, 30] - [1486, 34])))
              (expression_statement [1487, 2] - [1487, 55]
                (call_expression [1487, 2] - [1487, 54]
                  function: (field_expression [1487, 2] - [1487, 32]
                    argument: (identifier [1487, 2] - [1487, 17])
                    field: (field_identifier [1487, 19] - [1487, 32]))
                  arguments: (argument_list [1487, 32] - [1487, 54]
                    (identifier [1487, 33] - [1487, 43])
                    (identifier [1487, 45] - [1487, 53]))))
              (break_statement [1489, 2] - [1489, 8])))))
      (declaration [1494, 1] - [1494, 24]
        type: (type_identifier [1494, 1] - [1494, 15])
        declarator: (identifier [1494, 16] - [1494, 23]))
      (expression_statement [1495, 1] - [1495, 33]
        (assignment_expression [1495, 1] - [1495, 32]
          left: (field_expression [1495, 1] - [1495, 19]
            argument: (identifier [1495, 1] - [1495, 8])
            field: (field_identifier [1495, 9] - [1495, 19]))
          right: (identifier [1495, 22] - [1495, 32])))
      (expression_statement [1496, 1] - [1496, 30]
        (assignment_expression [1496, 1] - [1496, 29]
          left: (field_expression [1496, 1] - [1496, 16]
            argument: (identifier [1496, 1] - [1496, 8])
            field: (field_identifier [1496, 9] - [1496, 16]))
          right: (identifier [1496, 19] - [1496, 29])))
      (expression_statement [1497, 1] - [1497, 29]
        (assignment_expression [1497, 1] - [1497, 28]
          left: (field_expression [1497, 1] - [1497, 18]
            argument: (identifier [1497, 1] - [1497, 8])
            field: (field_identifier [1497, 9] - [1497, 18]))
          right: (call_expression [1497, 21] - [1497, 28]
            function: (identifier [1497, 21] - [1497, 26])
            arguments: (argument_list [1497, 26] - [1497, 28]))))
      (expression_statement [1498, 1] - [1498, 26]
        (assignment_expression [1498, 1] - [1498, 25]
          left: (field_expression [1498, 1] - [1498, 14]
            argument: (identifier [1498, 1] - [1498, 8])
            field: (field_identifier [1498, 9] - [1498, 14]))
          right: (identifier [1498, 17] - [1498, 25])))
      (preproc_ifdef [1499, 0] - [1501, 6]
        name: (identifier [1499, 7] - [1499, 28])
        (comment [1500, 1] - [1500, 80]))
      (comment [1501, 7] - [1501, 31])
      (expression_statement [1502, 1] - [1502, 29]
        (call_expression [1502, 1] - [1502, 28]
          function: (field_expression [1502, 1] - [1502, 26]
            argument: (identifier [1502, 1] - [1502, 21])
            field: (field_identifier [1502, 22] - [1502, 26]))
          arguments: (argument_list [1502, 26] - [1502, 28])))
      (expression_statement [1503, 1] - [1503, 38]
        (call_expression [1503, 1] - [1503, 37]
          function: (field_expression [1503, 1] - [1503, 28]
            argument: (identifier [1503, 1] - [1503, 18])
            field: (field_identifier [1503, 19] - [1503, 28]))
          arguments: (argument_list [1503, 28] - [1503, 37]
            (identifier [1503, 29] - [1503, 36]))))
      (expression_statement [1504, 1] - [1504, 31]
        (call_expression [1504, 1] - [1504, 30]
          function: (field_expression [1504, 1] - [1504, 28]
            argument: (identifier [1504, 1] - [1504, 21])
            field: (field_identifier [1504, 22] - [1504, 28]))
          arguments: (argument_list [1504, 28] - [1504, 30])))
      (comment [1505, 1] - [1524, 4])
      (preproc_ifdef [1525, 0] - [1527, 6]
        name: (identifier [1525, 7] - [1525, 28])
        (expression_statement [1526, 1] - [1526, 52]
          (call_expression [1526, 1] - [1526, 51]
            function: (identifier [1526, 1] - [1526, 17])
            arguments: (argument_list [1526, 17] - [1526, 51]
              (string_literal [1526, 18] - [1526, 50]
                (escape_sequence [1526, 47] - [1526, 49]))))))
      (comment [1527, 7] - [1527, 31])))
  (function_definition [1530, 0] - [1536, 1]
    type: (primitive_type [1530, 0] - [1530, 4])
    declarator: (function_declarator [1530, 5] - [1530, 36]
      declarator: (identifier [1530, 5] - [1530, 15])
      parameters: (parameter_list [1530, 15] - [1530, 36]
        (parameter_declaration [1530, 16] - [1530, 35]
          type: (type_identifier [1530, 16] - [1530, 21])
          declarator: (pointer_declarator [1530, 21] - [1530, 35]
            declarator: (pointer_declarator [1530, 22] - [1530, 35]
              declarator: (identifier [1530, 24] - [1530, 35]))))))
    body: (compound_statement [1530, 37] - [1536, 1]
      (preproc_ifdef [1531, 0] - [1535, 6]
        name: (identifier [1531, 7] - [1531, 28])
        (expression_statement [1532, 1] - [1532, 153]
          (call_expression [1532, 1] - [1532, 152]
            function: (identifier [1532, 1] - [1532, 17])
            arguments: (argument_list [1532, 17] - [1532, 152]
              (string_literal [1532, 18] - [1532, 50]
                (escape_sequence [1532, 47] - [1532, 49]))
              (number_literal [1532, 52] - [1532, 53])
              (subscript_expression [1532, 55] - [1532, 69]
                argument: (identifier [1532, 55] - [1532, 66])
                index: (number_literal [1532, 67] - [1532, 68]))
              (field_expression [1532, 71] - [1532, 96]
                argument: (subscript_expression [1532, 71] - [1532, 85]
                  argument: (identifier [1532, 71] - [1532, 82])
                  index: (number_literal [1532, 83] - [1532, 84]))
                field: (field_identifier [1532, 87] - [1532, 96]))
              (conditional_expression [1532, 98] - [1532, 151]
                condition: (parenthesized_expression [1532, 98] - [1532, 132]
                  (unary_expression [1532, 99] - [1532, 131]
                    argument: (field_expression [1532, 100] - [1532, 131]
                      argument: (subscript_expression [1532, 100] - [1532, 114]
                        argument: (identifier [1532, 100] - [1532, 111])
                        index: (number_literal [1532, 112] - [1532, 113]))
                      field: (field_identifier [1532, 116] - [1532, 131]))))
                consequence: (string_literal [1532, 135] - [1532, 141])
                alternative: (string_literal [1532, 144] - [1532, 151])))))
        (expression_statement [1533, 1] - [1533, 153]
          (call_expression [1533, 1] - [1533, 152]
            function: (identifier [1533, 1] - [1533, 17])
            arguments: (argument_list [1533, 17] - [1533, 152]
              (string_literal [1533, 18] - [1533, 50]
                (escape_sequence [1533, 47] - [1533, 49]))
              (number_literal [1533, 52] - [1533, 53])
              (subscript_expression [1533, 55] - [1533, 69]
                argument: (identifier [1533, 55] - [1533, 66])
                index: (number_literal [1533, 67] - [1533, 68]))
              (field_expression [1533, 71] - [1533, 96]
                argument: (subscript_expression [1533, 71] - [1533, 85]
                  argument: (identifier [1533, 71] - [1533, 82])
                  index: (number_literal [1533, 83] - [1533, 84]))
                field: (field_identifier [1533, 87] - [1533, 96]))
              (conditional_expression [1533, 98] - [1533, 151]
                condition: (parenthesized_expression [1533, 98] - [1533, 132]
                  (unary_expression [1533, 99] - [1533, 131]
                    argument: (field_expression [1533, 100] - [1533, 131]
                      argument: (subscript_expression [1533, 100] - [1533, 114]
                        argument: (identifier [1533, 100] - [1533, 111])
                        index: (number_literal [1533, 112] - [1533, 113]))
                      field: (field_identifier [1533, 116] - [1533, 131]))))
                consequence: (string_literal [1533, 135] - [1533, 141])
                alternative: (string_literal [1533, 144] - [1533, 151])))))
        (expression_statement [1534, 1] - [1534, 153]
          (call_expression [1534, 1] - [1534, 152]
            function: (identifier [1534, 1] - [1534, 17])
            arguments: (argument_list [1534, 17] - [1534, 152]
              (string_literal [1534, 18] - [1534, 50]
                (escape_sequence [1534, 47] - [1534, 49]))
              (number_literal [1534, 52] - [1534, 53])
              (subscript_expression [1534, 55] - [1534, 69]
                argument: (identifier [1534, 55] - [1534, 66])
                index: (number_literal [1534, 67] - [1534, 68]))
              (field_expression [1534, 71] - [1534, 96]
                argument: (subscript_expression [1534, 71] - [1534, 85]
                  argument: (identifier [1534, 71] - [1534, 82])
                  index: (number_literal [1534, 83] - [1534, 84]))
                field: (field_identifier [1534, 87] - [1534, 96]))
              (conditional_expression [1534, 98] - [1534, 151]
                condition: (parenthesized_expression [1534, 98] - [1534, 132]
                  (unary_expression [1534, 99] - [1534, 131]
                    argument: (field_expression [1534, 100] - [1534, 131]
                      argument: (subscript_expression [1534, 100] - [1534, 114]
                        argument: (identifier [1534, 100] - [1534, 111])
                        index: (number_literal [1534, 112] - [1534, 113]))
                      field: (field_identifier [1534, 116] - [1534, 131]))))
                consequence: (string_literal [1534, 135] - [1534, 141])
                alternative: (string_literal [1534, 144] - [1534, 151]))))))
      (comment [1535, 7] - [1535, 31])))
  (function_definition [1538, 0] - [1542, 1]
    type: (primitive_type [1538, 0] - [1538, 4])
    declarator: (function_declarator [1538, 5] - [1538, 28]
      declarator: (identifier [1538, 5] - [1538, 16])
      parameters: (parameter_list [1538, 16] - [1538, 28]
        (parameter_declaration [1538, 17] - [1538, 27]
          type: (primitive_type [1538, 17] - [1538, 21])
          declarator: (pointer_declarator [1538, 21] - [1538, 27]
            declarator: (identifier [1538, 23] - [1538, 27])))))
    body: (compound_statement [1538, 29] - [1542, 1]
      (preproc_ifdef [1539, 0] - [1541, 6]
        name: (identifier [1539, 7] - [1539, 28])
        (expression_statement [1540, 1] - [1540, 30]
          (call_expression [1540, 1] - [1540, 29]
            function: (identifier [1540, 1] - [1540, 17])
            arguments: (argument_list [1540, 17] - [1540, 29]
              (string_literal [1540, 18] - [1540, 22])
              (identifier [1540, 24] - [1540, 28])))))
      (comment [1541, 7] - [1541, 31])))
  (function_definition [1544, 0] - [1561, 1]
    type: (primitive_type [1544, 0] - [1544, 4])
    declarator: (function_declarator [1544, 5] - [1544, 44]
      declarator: (identifier [1544, 5] - [1544, 14])
      parameters: (parameter_list [1544, 14] - [1544, 44]
        (parameter_declaration [1544, 15] - [1544, 25]
          type: (primitive_type [1544, 15] - [1544, 19])
          declarator: (identifier [1544, 20] - [1544, 25]))
        (parameter_declaration [1544, 27] - [1544, 43]
          (type_qualifier [1544, 27] - [1544, 32])
          type: (primitive_type [1544, 33] - [1544, 37])
          declarator: (pointer_declarator [1544, 37] - [1544, 43]
            declarator: (identifier [1544, 39] - [1544, 43])))))
    body: (compound_statement [1544, 45] - [1561, 1]
      (preproc_ifdef [1545, 0] - [1560, 6]
        name: (identifier [1545, 7] - [1545, 33])
        (if_statement [1546, 1] - [1546, 53]
          condition: (condition_clause [1546, 4] - [1546, 30]
            value: (binary_expression [1546, 5] - [1546, 29]
              left: (identifier [1546, 5] - [1546, 10])
              right: (parenthesized_expression [1546, 12] - [1546, 29]
                (binary_expression [1546, 13] - [1546, 28]
                  left: (identifier [1546, 13] - [1546, 25])
                  right: (number_literal [1546, 27] - [1546, 28])))))
          consequence: (expression_statement [1546, 30] - [1546, 53]
            (assignment_expression [1546, 30] - [1546, 52]
              left: (identifier [1546, 30] - [1546, 42])
              right: (call_expression [1546, 45] - [1546, 52]
                function: (identifier [1546, 45] - [1546, 50])
                arguments: (argument_list [1546, 50] - [1546, 52])))))
        (declaration [1547, 1] - [1547, 16]
          type: (primitive_type [1547, 1] - [1547, 5])
          declarator: (array_declarator [1547, 6] - [1547, 15]
            declarator: (identifier [1547, 6] - [1547, 10])
            size: (number_literal [1547, 11] - [1547, 14])))
        (expression_statement [1548, 1] - [1548, 70]
          (call_expression [1548, 1] - [1548, 69]
            function: (identifier [1548, 1] - [1548, 9])
            arguments: (argument_list [1548, 9] - [1548, 69]
              (identifier [1548, 10] - [1548, 14])
              (sizeof_expression [1548, 16] - [1548, 28]
                value: (parenthesized_expression [1548, 22] - [1548, 28]
                  (identifier [1548, 23] - [1548, 27])))
              (string_literal [1548, 30] - [1548, 39])
              (identifier [1548, 41] - [1548, 45])
              (binary_expression [1548, 47] - [1548, 68]
                left: (call_expression [1548, 47] - [1548, 54]
                  function: (identifier [1548, 47] - [1548, 52])
                  arguments: (argument_list [1548, 52] - [1548, 54]))
                right: (identifier [1548, 56] - [1548, 68])))))
        (expression_statement [1549, 1] - [1549, 56]
          (call_expression [1549, 1] - [1549, 55]
            function: (field_expression [1549, 1] - [1549, 35]
              argument: (subscript_expression [1549, 1] - [1549, 28]
                argument: (identifier [1549, 1] - [1549, 14])
                index: (identifier [1549, 15] - [1549, 27]))
              field: (field_identifier [1549, 29] - [1549, 35]))
            arguments: (argument_list [1549, 35] - [1549, 55]
              (identifier [1549, 36] - [1549, 40])
              (call_expression [1549, 42] - [1549, 54]
                function: (identifier [1549, 42] - [1549, 48])
                arguments: (argument_list [1549, 48] - [1549, 54]
                  (identifier [1549, 49] - [1549, 53]))))))
        (expression_statement [1550, 1] - [1550, 16]
          (update_expression [1550, 1] - [1550, 15]
            argument: (identifier [1550, 1] - [1550, 13])))
        (if_statement [1551, 1] - [1559, 2]
          condition: (condition_clause [1551, 4] - [1551, 36]
            value: (binary_expression [1551, 5] - [1551, 35]
              left: (identifier [1551, 5] - [1551, 17])
              right: (identifier [1551, 20] - [1551, 35])))
          consequence: (compound_statement [1551, 37] - [1559, 2]
            (declaration [1552, 2] - [1552, 64]
              type: (type_identifier [1552, 2] - [1552, 10])
              declarator: (init_declarator [1552, 11] - [1552, 63]
                declarator: (identifier [1552, 11] - [1552, 14])
                value: (argument_list [1552, 14] - [1552, 63]
                  (string_literal [1552, 15] - [1552, 42])
                  (qualified_identifier [1552, 44] - [1552, 62]
                    scope: (namespace_identifier [1552, 44] - [1552, 47])
                    name: (qualified_identifier [1552, 49] - [1552, 62]
                      scope: (namespace_identifier [1552, 49] - [1552, 57])
                      name: (identifier [1552, 59] - [1552, 62]))))))
            (for_statement [1553, 2] - [1556, 3]
              initializer: (declaration [1553, 7] - [1553, 17]
                type: (primitive_type [1553, 7] - [1553, 10])
                declarator: (init_declarator [1553, 11] - [1553, 16]
                  declarator: (identifier [1553, 11] - [1553, 12])
                  value: (number_literal [1553, 15] - [1553, 16])))
              condition: (binary_expression [1553, 18] - [1553, 37]
                left: (identifier [1553, 18] - [1553, 19])
                right: (identifier [1553, 22] - [1553, 37]))
              update: (update_expression [1553, 39] - [1553, 42]
                argument: (identifier [1553, 39] - [1553, 40]))
              (compound_statement [1553, 44] - [1556, 3]
                (expression_statement [1555, 3] - [1555, 35]
                  (binary_expression [1555, 3] - [1555, 34]
                    left: (binary_expression [1555, 3] - [1555, 26]
                      left: (identifier [1555, 3] - [1555, 6])
                      right: (subscript_expression [1555, 10] - [1555, 26]
                        argument: (identifier [1555, 10] - [1555, 23])
                        index: (identifier [1555, 24] - [1555, 25])))
                    right: (identifier [1555, 30] - [1555, 34])))
                (comment [1555, 36] - [1555, 79])))
            (expression_statement [1557, 2] - [1557, 14]
              (call_expression [1557, 2] - [1557, 13]
                function: (field_expression [1557, 2] - [1557, 11]
                  argument: (identifier [1557, 2] - [1557, 5])
                  field: (field_identifier [1557, 6] - [1557, 11]))
                arguments: (argument_list [1557, 11] - [1557, 13])))
            (expression_statement [1558, 2] - [1558, 10]
              (call_expression [1558, 2] - [1558, 9]
                function: (identifier [1558, 2] - [1558, 6])
                arguments: (argument_list [1558, 6] - [1558, 9]
                  (number_literal [1558, 7] - [1558, 8])))))))
      (comment [1560, 7] - [1560, 36])))
  (function_definition [1563, 0] - [1567, 1]
    type: (primitive_type [1563, 0] - [1563, 4])
    declarator: (function_declarator [1563, 5] - [1563, 77]
      declarator: (identifier [1563, 5] - [1563, 17])
      parameters: (parameter_list [1563, 17] - [1563, 77]
        (parameter_declaration [1563, 18] - [1563, 33]
          type: (primitive_type [1563, 18] - [1563, 22])
          declarator: (identifier [1563, 23] - [1563, 33]))
        (parameter_declaration [1563, 35] - [1563, 43]
          type: (primitive_type [1563, 35] - [1563, 39])
          declarator: (pointer_declarator [1563, 39] - [1563, 43]
            declarator: (identifier [1563, 41] - [1563, 43])))
        (parameter_declaration [1563, 45] - [1563, 60]
          type: (primitive_type [1563, 45] - [1563, 48])
          declarator: (identifier [1563, 49] - [1563, 60]))
        (parameter_declaration [1563, 62] - [1563, 76]
          type: (primitive_type [1563, 62] - [1563, 65])
          declarator: (identifier [1563, 66] - [1563, 76]))))
    body: (compound_statement [1564, 0] - [1567, 1]
      (if_statement [1565, 1] - [1565, 41]
        condition: (condition_clause [1565, 4] - [1565, 16]
          value: (identifier [1565, 5] - [1565, 15]))
        consequence: (expression_statement [1565, 16] - [1565, 41]
          (assignment_expression [1565, 16] - [1565, 40]
            left: (identifier [1565, 16] - [1565, 27])
            right: (identifier [1565, 30] - [1565, 40]))))
      (expression_statement [1566, 1] - [1566, 96]
        (assignment_expression [1566, 1] - [1566, 95]
          left: (identifier [1566, 1] - [1566, 16])
          right: (new_expression [1566, 19] - [1566, 95]
            type: (qualified_identifier [1566, 23] - [1566, 49]
              scope: (namespace_identifier [1566, 23] - [1566, 35])
              name: (type_identifier [1566, 37] - [1566, 49]))
            arguments: (argument_list [1566, 49] - [1566, 95]
              (identifier [1566, 50] - [1566, 60])
              (identifier [1566, 62] - [1566, 64])
              (identifier [1566, 66] - [1566, 77])
              (identifier [1566, 79] - [1566, 89])
              (true [1566, 90] - [1566, 94])))))))
  (function_definition [1569, 0] - [1572, 1]
    type: (primitive_type [1569, 0] - [1569, 4])
    declarator: (function_declarator [1569, 5] - [1569, 18]
      declarator: (identifier [1569, 5] - [1569, 16])
      parameters: (parameter_list [1569, 16] - [1569, 18]))
    body: (compound_statement [1569, 19] - [1572, 1]
      (expression_statement [1570, 1] - [1570, 24]
        (call_expression [1570, 1] - [1570, 23]
          function: (identifier [1570, 1] - [1570, 18])
          arguments: (argument_list [1570, 18] - [1570, 23]
            (number_literal [1570, 19] - [1570, 22]))))
      (expression_statement [1571, 1] - [1571, 24]
        (delete_expression [1571, 1] - [1571, 23]
          (identifier [1571, 8] - [1571, 23]))))))
c:/prenos/BATED/Debug/testin/portability/portability/port_net.cpp	12 ms	(MISSING type_identifier [129, 1] - [129, 1])
