(translation_unit [0, 0] - [45, 6]
  (preproc_call [0, 0] - [1, 0]
    directive: (preproc_directive [0, 0] - [0, 7])
    argument: (preproc_arg [0, 7] - [0, 13]))
  (preproc_ifdef [1, 0] - [45, 6]
    name: (identifier [1, 8] - [1, 18])
    (preproc_def [2, 0] - [4, 0]
      name: (identifier [2, 8] - [2, 18]))
    (preproc_include [4, 0] - [5, 0]
      path: (system_lib_string [4, 9] - [4, 29]))
    (preproc_include [5, 0] - [6, 0]
      path: (system_lib_string [5, 9] - [5, 16]))
    (preproc_include [6, 0] - [7, 0]
      path: (system_lib_string [6, 9] - [6, 16]))
    (comment [8, 0] - [8, 23])
    (template_declaration [9, 0] - [44, 2]
      parameters: (template_parameter_list [9, 9] - [9, 18]
        (type_parameter_declaration [9, 10] - [9, 17]
          (type_identifier [9, 16] - [9, 17])))
      (class_specifier [10, 0] - [44, 1]
        name: (type_identifier [10, 6] - [10, 15])
        body: (field_declaration_list [11, 0] - [44, 1]
          (access_specifier [12, 0] - [12, 7])
          (function_definition [13, 4] - [13, 29]
            declarator: (function_declarator [13, 4] - [13, 15]
              declarator: (identifier [13, 4] - [13, 13])
              parameters: (parameter_list [13, 13] - [13, 15]))
            (field_initializer_list [13, 16] - [13, 26]
              (field_initializer [13, 18] - [13, 21]
                (field_identifier [13, 18] - [13, 19])
                (argument_list [13, 19] - [13, 21]))
              (field_initializer [13, 23] - [13, 26]
                (field_identifier [13, 23] - [13, 24])
                (argument_list [13, 24] - [13, 26])))
            body: (compound_statement [13, 27] - [13, 29]))
          (function_definition [15, 4] - [15, 19]
            declarator: (function_declarator [15, 4] - [15, 16]
              declarator: (destructor_name [15, 4] - [15, 14]
                (identifier [15, 5] - [15, 14]))
              parameters: (parameter_list [15, 14] - [15, 16]))
            body: (compound_statement [15, 17] - [15, 19]))
          (function_definition [17, 4] - [17, 41]
            type: (primitive_type [17, 4] - [17, 7])
            declarator: (function_declarator [17, 8] - [17, 20]
              declarator: (field_identifier [17, 8] - [17, 12])
              parameters: (parameter_list [17, 12] - [17, 14])
              (type_qualifier [17, 15] - [17, 20]))
            body: (compound_statement [17, 21] - [17, 41]
              (return_statement [17, 23] - [17, 39]
                (call_expression [17, 30] - [17, 38]
                  function: (field_expression [17, 30] - [17, 36]
                    argument: (identifier [17, 30] - [17, 31])
                    field: (field_identifier [17, 32] - [17, 36]))
                  arguments: (argument_list [17, 36] - [17, 38])))))
          (function_definition [19, 4] - [19, 44]
            type: (primitive_type [19, 4] - [19, 8])
            declarator: (function_declarator [19, 9] - [19, 22]
              declarator: (field_identifier [19, 9] - [19, 14])
              parameters: (parameter_list [19, 14] - [19, 16])
              (type_qualifier [19, 17] - [19, 22]))
            body: (compound_statement [19, 23] - [19, 44]
              (return_statement [19, 25] - [19, 42]
                (call_expression [19, 32] - [19, 41]
                  function: (field_expression [19, 32] - [19, 39]
                    argument: (identifier [19, 32] - [19, 33])
                    field: (field_identifier [19, 34] - [19, 39]))
                  arguments: (argument_list [19, 39] - [19, 41])))))
          (comment [21, 4] - [21, 36])
          (function_definition [22, 4] - [26, 5]
            type: (primitive_type [22, 4] - [22, 8])
            declarator: (function_declarator [22, 9] - [22, 21]
              declarator: (field_identifier [22, 9] - [22, 16])
              parameters: (parameter_list [22, 16] - [22, 21]
                (parameter_declaration [22, 17] - [22, 20]
                  type: (type_identifier [22, 17] - [22, 18])
                  declarator: (identifier [22, 19] - [22, 20]))))
            body: (compound_statement [23, 4] - [26, 5]
              (declaration [24, 8] - [24, 44]
                type: (qualified_identifier [24, 8] - [24, 35]
                  scope: (namespace_identifier [24, 8] - [24, 11])
                  name: (template_type [24, 13] - [24, 35]
                    name: (type_identifier [24, 13] - [24, 23])
                    arguments: (template_argument_list [24, 23] - [24, 35]
                      (type_descriptor [24, 24] - [24, 34]
                        type: (qualified_identifier [24, 24] - [24, 34]
                          scope: (namespace_identifier [24, 24] - [24, 27])
                          name: (type_identifier [24, 29] - [24, 34]))))))
                declarator: (function_declarator [24, 36] - [24, 43]
                  declarator: (identifier [24, 36] - [24, 40])
                  parameters: (parameter_list [24, 40] - [24, 43]
                    (parameter_declaration [24, 41] - [24, 42]
                      type: (type_identifier [24, 41] - [24, 42])))))
              (expression_statement [25, 8] - [25, 18]
                (call_expression [25, 8] - [25, 17]
                  function: (field_expression [25, 8] - [25, 14]
                    argument: (identifier [25, 8] - [25, 9])
                    field: (field_identifier [25, 10] - [25, 14]))
                  arguments: (argument_list [25, 14] - [25, 17]
                    (identifier [25, 15] - [25, 16]))))))
          (comment [28, 4] - [28, 48])
          (function_definition [29, 4] - [39, 5]
            type: (type_identifier [29, 4] - [29, 5])
            declarator: (function_declarator [29, 6] - [29, 19]
              declarator: (field_identifier [29, 6] - [29, 13])
              parameters: (parameter_list [29, 13] - [29, 19]
                (parameter_declaration [29, 14] - [29, 18]
                  type: (primitive_type [29, 14] - [29, 18]))))
            body: (compound_statement [30, 4] - [39, 5]
              (declaration [31, 8] - [31, 24]
                type: (type_identifier [31, 8] - [31, 9])
                declarator: (init_declarator [31, 10] - [31, 23]
                  declarator: (identifier [31, 10] - [31, 13])
                  value: (nullptr [31, 16] - [31, 23])))
              (declaration [32, 8] - [32, 44]
                type: (qualified_identifier [32, 8] - [32, 35]
                  scope: (namespace_identifier [32, 8] - [32, 11])
                  name: (template_type [32, 13] - [32, 35]
                    name: (type_identifier [32, 13] - [32, 23])
                    arguments: (template_argument_list [32, 23] - [32, 35]
                      (type_descriptor [32, 24] - [32, 34]
                        type: (qualified_identifier [32, 24] - [32, 34]
                          scope: (namespace_identifier [32, 24] - [32, 27])
                          name: (type_identifier [32, 29] - [32, 34]))))))
                declarator: (function_declarator [32, 36] - [32, 43]
                  declarator: (identifier [32, 36] - [32, 40])
                  parameters: (parameter_list [32, 40] - [32, 43]
                    (parameter_declaration [32, 41] - [32, 42]
                      type: (type_identifier [32, 41] - [32, 42])))))
              (if_statement [33, 8] - [37, 9]
                condition: (condition_clause [33, 11] - [33, 23]
                  value: (unary_expression [33, 12] - [33, 22]
                    argument: (call_expression [33, 13] - [33, 22]
                      function: (field_expression [33, 13] - [33, 20]
                        argument: (identifier [33, 13] - [33, 14])
                        field: (field_identifier [33, 15] - [33, 20]))
                      arguments: (argument_list [33, 20] - [33, 22]))))
                consequence: (compound_statement [34, 8] - [37, 9]
                  (expression_statement [35, 12] - [35, 28]
                    (assignment_expression [35, 12] - [35, 27]
                      left: (identifier [35, 12] - [35, 15])
                      right: (call_expression [35, 18] - [35, 27]
                        function: (field_expression [35, 18] - [35, 25]
                          argument: (identifier [35, 18] - [35, 19])
                          field: (field_identifier [35, 20] - [35, 25]))
                        arguments: (argument_list [35, 25] - [35, 27]))))
                  (expression_statement [36, 12] - [36, 20]
                    (call_expression [36, 12] - [36, 19]
                      function: (field_expression [36, 12] - [36, 17]
                        argument: (identifier [36, 12] - [36, 13])
                        field: (field_identifier [36, 14] - [36, 17]))
                      arguments: (argument_list [36, 17] - [36, 19])))))
              (return_statement [38, 8] - [38, 19]
                (identifier [38, 15] - [38, 18]))))
          (access_specifier [41, 0] - [41, 8])
          (field_declaration [42, 4] - [42, 20]
            type: (qualified_identifier [42, 4] - [42, 17]
              scope: (namespace_identifier [42, 4] - [42, 7])
              name: (template_type [42, 9] - [42, 17]
                name: (type_identifier [42, 9] - [42, 14])
                arguments: (template_argument_list [42, 14] - [42, 17]
                  (type_descriptor [42, 15] - [42, 16]
                    type: (type_identifier [42, 15] - [42, 16])))))
            declarator: (field_identifier [42, 18] - [42, 19]))
          (field_declaration [43, 4] - [43, 25]
            (type_qualifier [43, 4] - [43, 11])
            type: (qualified_identifier [43, 12] - [43, 22]
              scope: (namespace_identifier [43, 12] - [43, 15])
              name: (type_identifier [43, 17] - [43, 22]))
            declarator: (field_identifier [43, 23] - [43, 24])))))))
