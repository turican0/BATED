(translation_unit [0, 0] - [9, 1]
  (preproc_include [0, 0] - [1, 0]
    path: (string_literal [0, 9] - [0, 30]))
  (function_definition [2, 0] - [9, 1]
    declarator: (function_declarator [2, 0] - [2, 50]
      declarator: (qualified_identifier [2, 0] - [2, 36]
        scope: (namespace_identifier [2, 0] - [2, 17])
        name: (identifier [2, 19] - [2, 36]))
      parameters: (parameter_list [2, 36] - [2, 50]
        (parameter_declaration [2, 37] - [2, 49]
          type: (primitive_type [2, 37] - [2, 40])
          declarator: (pointer_declarator [2, 40] - [2, 49]
            declarator: (identifier [2, 42] - [2, 49])))))
    body: (compound_statement [3, 0] - [9, 1]
      (expression_statement [4, 1] - [4, 16]
        (assignment_expression [4, 1] - [4, 15]
          left: (identifier [4, 1] - [4, 2])
          right: (subscript_expression [4, 5] - [4, 15]
            argument: (identifier [4, 5] - [4, 12])
            index: (number_literal [4, 13] - [4, 14]))))
      (expression_statement [5, 1] - [5, 16]
        (assignment_expression [5, 1] - [5, 15]
          left: (identifier [5, 1] - [5, 2])
          right: (subscript_expression [5, 5] - [5, 15]
            argument: (identifier [5, 5] - [5, 12])
            index: (number_literal [5, 13] - [5, 14]))))
      (expression_statement [6, 1] - [6, 16]
        (assignment_expression [6, 1] - [6, 15]
          left: (identifier [6, 1] - [6, 2])
          right: (subscript_expression [6, 5] - [6, 15]
            argument: (identifier [6, 5] - [6, 12])
            index: (number_literal [6, 13] - [6, 14]))))
      (expression_statement [7, 1] - [7, 16]
        (assignment_expression [7, 1] - [7, 15]
          left: (identifier [7, 1] - [7, 2])
          right: (subscript_expression [7, 5] - [7, 15]
            argument: (identifier [7, 5] - [7, 12])
            index: (number_literal [7, 13] - [7, 14]))))
      (expression_statement [8, 1] - [8, 25]
        (assignment_expression [8, 1] - [8, 24]
          left: (identifier [8, 1] - [8, 11])
          right: (subscript_expression [8, 14] - [8, 24]
            argument: (identifier [8, 14] - [8, 21])
            index: (number_literal [8, 22] - [8, 23])))))))
